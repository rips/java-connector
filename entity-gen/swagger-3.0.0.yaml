swagger: '2.0'

info:
  version: "3.0.0"
  title: "RIPS API"
  description: |
    RIPS is a static code analysis tool to automatically detect taint-style vulnerabilities in PHP and Java applications.
  contact:
    name: "RIPS Technologies GmbH"
    url: "https://www.ripstech.com"
    email: "contact@ripstech.com"

host: "api-3.ripstech.com"

schemes:
  - "https"
  - "http"

consumes:
  - application/json

produces:
  - application/json

# API
# ---------------------------------------------------------------------------
paths:
  /status:
    get:
      description: |
        Get status information about your session as well as the API environment
      operationId: getStatus
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Status'

  /languages:
    get:
      description: |
        Get all language objects
      operationId: getLanguages
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Language'

  /languages/{languageId}:
    get:
      description: |
        Get a specific Language
      operationId: getLanguage
      parameters:
      - name: languageId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Language'
        404:
          description: Not found

  /sources:
    get:
      description: |
        Get all directories from the root source directory

        Only available in the On-Premises version.
      operationId: getSources
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              type: string

  /licenses:
    get:
      description: |
        Get all licenses

        Only available in the On-Premises version.

        #### Available Filters
          | Column           | Restrictions |
          | ---------------- | ------------ |
          | id               |              |
          | createdAt        |              |
          | validUntil       |              |
          | quotaDistributed |              |
          | createdBy        |              |
          | parent           |              |
          | child            |              |
      operationId: getLicenses
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/License'
        403:
          description: Missing permissions
    post:
      description: |
        Activate a new license

        Only available in the On-Premises version.
      operationId: postLicense
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.License
          in: body
          required: true
          schema:
            type: object
            properties:
              license:
                $ref: '#/definitions/Post.Sub.License'
            required:
              - license
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/License'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /licenses/{licenseId}:
    get:
      description: |
        Get a specific license

        Only available in the On-Premises version.
      operationId: getLicense
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: licenseId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/License'
        403:
          description: Missing permissions
        404:
          description: Not found

  /logs:
    get:
      description: |
        Get all logs

        #### Available Filters
          | Column           | Restrictions |
          | ---------------- | ------------ |
          | id               |              |
          | text             |              |
          | level            |              |
          | channel          |              |
          | requestUri       |              |
          | requestMethod    |              |
          | ip               |              |
          | createdBy        |              |
          | email            |              |
          | context          |              |
          | createdAt        |              |
          | organization     |              |
          | organizationName |              |
      operationId: getLogs
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Log'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all logs that are older than a week

        #### Available Filters
          | Column           | Restrictions |
          | ---------------- | ------------ |
          | id               |              |
          | text             |              |
          | level            |              |
          | channel          |              |
          | requestUri       |              |
          | requestMethod    |              |
          | ip               |              |
          | createdBy        |              |
          | username         |              |
          | context          |              |
          | createdAt        |              |
          | organization     |              |
          | organizationName |              |
      operationId: deleteMultipleLogs
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new log
      operationId: postLog
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Log
          in: body
          required: true
          schema:
            type: object
            properties:
              log:
                $ref: '#/definitions/Post.Sub.Log'
            required:
              - log
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Log'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /logs/{logId}:
    get:
      description: |
        Get a specific log
      operationId: getLog
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: logId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Log'
        403:
          description: Missing permissions
        404:
          description: Not found

  /activities:
    get:
      description: |
        Get all activities

        #### Available Filters
          | Column           | Restrictions          |
          | ---------------- | --------------------- |
          | id               |                       |
          | type             |                       |
          | context          |                       |
          | application      |                       |
          | applicationName  |                       |
          | createdBy        |                       |
          | createdByEmail   |                       |
          | createdAt        |                       |
          | organization     | - Requires ROLE_ADMIN |
          | organizationName | - Requires ROLE_ADMIN |
      operationId: getActivities
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Activity'

  /activities/{activityId}:
    get:
      description: |
        Get a specific activity
      operationId: getActivity
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: activityId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Activity'
        403:
          description: Missing permissions
        404:
          description: Not found

  /settings:
    get:
      description: |
        Get all settings

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | key       |              |
          | value     |              |
          | createdAt |              |
      operationId: getSettings
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Setting'
    delete:
      description: |
        Delete all settings

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | key       |              |
          | value     |              |
          | createdAt |              |
      operationId: deleteMultipleSettings
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful

  /settings/{key}:
    get:
      description: |
        Get a specific setting
      operationId: getSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: key
          in: path
          required: true
          type: string
          maxLength: 180
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Setting'
        404:
          description: Not found
    delete:
      description: |
        Delete a specific setting
      operationId: deleteSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: key
          in: path
          required: true
          type: string
          maxLength: 180
      responses:
        200:
          description: Successful
        404:
          description: Not found
    put:
      description: |
        Add or update setting
      operationId: putSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: key
          in: path
          required: true
          type: string
          maxLength: 180
        - name: put.Setting
          in: body
          required: true
          schema:
            type: object
            properties:
              setting:
                $ref: '#/definitions/Put.Sub.Setting'
            required:
              - setting
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Setting'
        400:
          description: Invalid input
        404:
          description: Not found

  /organizations:
    get:
      description: |
        Get all organizations

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | name       |              |
          | validUntil |              |
      operationId: getOrganizations
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all organizations

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | name       |              |
          | validUntil |              |
      operationId: deleteMultipleOrganizations
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new organization
      operationId: postOrganization
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Organization
          in: body
          required: true
          schema:
            type: object
            properties:
              organization:
                $ref: '#/definitions/Post.Sub.Organization'
            required:
              - organization
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Organization'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /organizations/{organizationId}:
    get:
      description: |
        Get a specific organization
      operationId: getOrganization
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: organizationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Organization'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific organization
      operationId: deleteOrganization
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: organizationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing organization
      operationId: patchOrganization
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: organizationId
          in: path
          required: true
          type: integer
        - name: patch.Organization
          in: body
          required: true
          schema:
            type: object
            properties:
              organization:
                $ref: '#/definitions/Patch.Sub.Organization'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Organization'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /quotas:
    get:
      description: |
        Get all quotas with permissions for current user

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | currentApplication |              |
          | currentScan        |              |
          | currentUser        |              |
          | maxApplications    |              |
          | maxScans           |              |
          | maxUsers           |              |
          | maxLoc             |              |
          | validFrom          |              |
          | validUntil         |              |
          | allowedMisses      |              |
          | public             |              |
          | license            |              |
          | notify             |              |
          | organization       |              |
      operationId: getQuotas
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Quota'
    delete:
      description: |
        Delete all quotas

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | currentApplication |              |
          | currentScan        |              |
          | currentUser        |              |
          | maxApplications    |              |
          | maxScans           |              |
          | maxUsers           |              |
          | maxLoc             |              |
          | validFrom          |              |
          | validUntil         |              |
          | allowedMisses      |              |
          | public             |              |
          | license            |              |
          | notify             |              |
          | organization       |              |
      operationId: deleteMultipleQuotas
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new quota
      operationId: postQuota
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Quota
          in: body
          required: true
          schema:
            type: object
            properties:
              quota:
                $ref: '#/definitions/Post.Sub.Quota'
            required:
              - quota
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /quotas/{quotaId}:
    get:
      description: |
        Get a specific quota
      security:
        - email: []
          password: []
        - oauth2: []
      operationId: getQuota
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific quota
      operationId: deleteQuota
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing quota
      operationId: patchQuota
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: patch.Quota
          in: body
          required: true
          schema:
            type: object
            properties:
              quota:
                $ref: '#/definitions/Patch.Sub.Quota'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /quotas/{quotaId}/acls:
    get:
      description: |
        Get all acls with permissions for current user

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | ownerUser |              |
          | ownerTeam |              |
      operationId: getQuotaAcls
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Quota.Acl'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all acls with permissions for current user

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | ownerUser |              |
          | ownerTeam |              |
      operationId: deleteMultipleQuotaAcls
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new acl
      operationId: postQuotaAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: post.Quota.Acl
          in: body
          required: true
          schema:
            type: object
            properties:
              acl:
                $ref: '#/definitions/Post.Sub.Quota.Acl'
            required:
              - acl
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota.Acl'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /quotas/{quotaId}/acls/{aclId}:
    get:
      description: |
        Get a specific acl
      operationId: getQuotaAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota.Acl'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific acl
      operationId: deleteQuotaAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing acl
      operationId: patchQuotaAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
        - name: patch.Quota.Acl
          in: body
          required: true
          schema:
            type: object
            properties:
              acl:
                $ref: '#/definitions/Patch.Sub.Quota.Acl'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota.Acl'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /callbacks:
    get:
      description: |
        Get all callbacks with permissions for current user

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | url       |              |
          | createdBy |              |
      operationId: getcallbacks
      parameters:
      - name: filter
        in: query
        type: string
        description: A JSON-encoded filter object (see 'Available Filters').
      security:
      - email: []
        password: []
      - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Callback'
    delete:
      description: |
        Delete all callbacks

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | url       |              |
          | createdBy |              |
      operationId: deleteMultiplecallbacks
      parameters:
      - name: filter
        in: query
        type: string
        description: A JSON-encoded filter object (see 'Available Filters').
      security:
      - email: []
        password: []
      - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new callback
      operationId: postcallback
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: post.Callback
        in: body
        required: true
        schema:
          type: object
          properties:
            callback:
              $ref: '#/definitions/Post.Sub.Callback'
          required:
          - callback
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Callback'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /callbacks/{callbackId}:
    get:
      description: |
        Get a specific callback
      operationId: getCallback
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: callbackId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Callback'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific callback
      operationId: deleteCallback
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: callbackId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing callback
      operationId: patchCallback
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: callbackId
        in: path
        required: true
        type: integer
      - name: patch.Callback
        in: body
        required: true
        schema:
          type: object
          properties:
            callback:
              $ref: '#/definitions/Patch.Sub.Callback'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Callback'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /teams:
    get:
      description: |
        Get all teams with permissions for current user

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | name      |              |
          | createdBy |              |
      operationId: getTeams
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
    delete:
      description: |
        Delete all teams

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | name      |              |
          | createdBy |              |
      operationId: deleteMultipleTeams
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new team
      operationId: postTeam
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Team
          in: body
          required: true
          schema:
            type: object
            properties:
              team:
                $ref: '#/definitions/Post.Sub.Team'
            required:
              - team
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Team'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /teams/{teamId}:
    get:
      description: |
        Get a specific team
      operationId: getTeam
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: teamId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Team'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific team
      operationId: deleteTeam
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: teamId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing team
      operationId: patchTeam
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: teamId
          in: path
          required: true
          type: integer
        - name: patch.Team
          in: body
          required: true
          schema:
            type: object
            properties:
              team:
                $ref: '#/definitions/Patch.Sub.Team'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Team'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users:
    get:
      description: |
        Get all users with permissions for current user

        #### Available Filters
          | Column           | Restrictions          |
          | ---------------- | --------------------- |
          | id               |                       |
          | firstname        |                       |
          | lastname         |                       |
          | email            |                       |
          | root             |                       |
          | enabled          |                       |
          | lastLogin        |                       |
          | organization     | - Requires ROLE_ADMIN |
          | organizationName | - Requires ROLE_ADMIN |
      operationId: getUsers
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    delete:
      description: |
        Delete all users

        #### Available Filters
          | Column           | Restrictions          |
          | ---------------- | --------------------- |
          | id               |                       |
          | firstname        |                       |
          | lastname         |                       |
          | email            |                       |
          | root             |                       |
          | enabled          |                       |
          | lastLogin        |                       |
          | organization     | - Requires ROLE_ADMIN |
          | organizationName | - Requires ROLE_ADMIN |
      operationId: deleteMultipleUsers
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new user
      operationId: postUser
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.User
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Post.Sub.User'
            required:
              - user
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /users/{userId}:
    get:
      description: |
        Get a specific user
      operationId: getUser
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific user
      operationId: deleteUser
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing user
      operationId: patchUser
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
        - name: patch.User
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Patch.Sub.User'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users/{userId}/activate/{token}:
    post:
      description: |
        Activate an existing user
      operationId: postUsersActivate
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
        - name: token
          in: path
          required: true
          type: string
        - name: post.User.Activate
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Post.Sub.User.Activate'
            required:
              - user
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users/{userId}/confirm/{token}:
    post:
      description: |
        Confirm e-mail update
      operationId: postUsersConfirm
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
        - name: token
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users/{userId}/reset/{token}:
    post:
      description: |
        Reset an existing user
      operationId: postUsersReset
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
        - name: token
          in: path
          required: true
          type: string
        - name: post.User.Reset
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Post.Sub.User.Reset'
            required:
              - user
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users/reset/ui:
    post:
      description: |
        Request reset e-mail
      operationId: postUsersResetUi
      parameters:
        - name: post.User.Reset.Ui
          in: body
          required: true
          schema:
            type: object
            properties:
              reset:
                $ref: '#/definitions/Post.Sub.User.Reset.Ui'
            required:
              - reset
      responses:
        200:
          description: Successful
        400:
          description: Invalid input
        403:
          description: Missing permissions
        429:
          description: Too many reset attempts

  /users/invite/ui:
    post:
      description: |
        Send invite e-mail
      operationId: postUsersInviteUi
      parameters:
        - name: post.User.Invite.Ui
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Post.Sub.User.Invite.Ui'
            required:
              - user
      responses:
        200:
          description: Successful
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications:
    get:
      description: |
        Get all applications with permissions for current user

        #### Available Filters
          | Column       | Restrictions |
          | ------------ | ------------ |
          | id           |              |
          | name         |              |
          | currentScan  |              |
          | chargedQuota |              |
          | createdBy    |              |
          | createdAt    |              |
      operationId: getApplications
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
    delete:
      description: |
        Delete all applications with permissions for current user

        #### Available Filters
          | Column       | Restrictions |
          | ------------ | ------------ |
          | id           |              |
          | name         |              |
          | currentScan  |              |
          | chargedQuota |              |
          | createdBy    |              |
          | createdAt    |              |
      operationId: deleteMultipleApplications
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new application
      operationId: postApplication
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: Post.Application
          in: body
          required: true
          schema:
            type: object
            properties:
              application:
                $ref: '#/definitions/Post.Sub.Application'
            required:
              - application
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}:
    get:
      description: |
        Get a specific application
      operationId: getApplication
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific application
      operationId: deleteApplication
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing application
      operationId: patchApplication
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: patch.Application
          in: body
          required: true
          schema:
            type: object
            properties:
              application:
                $ref: '#/definitions/Patch.Sub.Application'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/acls:
    get:
      description: |
        Get all acls with permissions for current user

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | ownerUser   |              |
          | ownerTeam   |              |
          | createdBy   |              |
          | view        |              |
          | delete      |              |
          | create      |              |
          | edit        |              |
          | scan        |              |
          | manage      |              |
          | immutable   |              |
          | application |              |
      operationId: getApplicationAcls
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Acl'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all acls with permissions for current user

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | ownerUser   |              |
          | ownerTeam   |              |
          | createdBy   |              |
          | view        |              |
          | delete      |              |
          | create      |              |
          | edit        |              |
          | scan        |              |
          | manage      |              |
          | immutable   |              |
          | application |              |
      operationId: deleteMultipleApplicationAcls
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new acl
      operationId: postApplicationAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: post.Application.Acl
          in: body
          required: true
          schema:
            type: object
            properties:
              acl:
                $ref: '#/definitions/Post.Sub.Application.Acl'
            required:
              - acl
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Acl'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/acls/{aclId}:
    get:
      description: |
        Get a specific acl
      operationId: getApplicationAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Acl'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific acl
      operationId: deleteApplicationAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing acl
      operationId: patchApplicationAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
        - name: patch.Application.Acl
          in: body
          required: true
          schema:
            type: object
            properties:
              acl:
                $ref: '#/definitions/Patch.Sub.Application.Acl'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Acl'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/acls/own:
    get:
      description: |
        Get all acls for current user

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | ownerUser   |              |
          | ownerTeam   |              |
          | createdBy   |              |
          | view        |              |
          | delete      |              |
          | create      |              |
          | edit        |              |
          | scan        |              |
          | manage      |              |
          | immutable   |              |
          | application |              |
      operationId: getOwnApplicationAcls
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Acl'

  /applications/uploads/all:
    get:
      description: |
        Get all uploads with permissions for current user

        #### Available Filters
          | Column             | Restrictions  |
          | ----------         | ------------  |
          | id                 |               |
          | createdAt          |               |
          | name               |               |
          | extension          |               |
          | size               |               |
          | file               |               |
          | createdBy          |               |
          | createdByEmail     |               |
          | organization       | - Admins only |
          | organizationName   | - Admins only |
      operationId: getApplicationUploadsAll
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Upload'
        403:
          description: Missing permissions

  /applications/{applicationId}/uploads:
    get:
      description: |
        Get all uploads with permissions for current user

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | createdAt  |              |
          | name       |              |
          | extension  |              |
          | size       |              |
          | file       |              |
          | createdBy  |              |
      operationId: getApplicationUploads
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Upload'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all uploads with permissions for current user

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | createdAt  |              |
          | name       |              |
          | extension  |              |
          | size       |              |
          | file       |              |
          | createdBy  |              |
      operationId: deleteMultipleApplicationUploads
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new upload
      operationId: postApplicationUpload
      security:
        - email: []
          password: []
        - oauth2: []
      consumes:
        - multipart/form-data
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: upload[file]
          in: formData
          required: true
          type: file
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Upload'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/uploads/{uploadId}:
    get:
      description: |
        Get a specific upload
      operationId: getApplicationUpload
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: uploadId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Upload'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific upload
      operationId: deleteApplicationUpload
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: uploadId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/scans/stats:
    get:
      description: |
        Get statistics about all applications with permissions for current user

        #### Available Filters
          | Column          | Restrictions             |
          | --------------- | ------------------------ |
          | id              |                          |
          | version         |                          |
          | upload          |                          |
          | phase           |                          |
          | percent         |                          |
          | loc             |                          |
          | codeStored      |                          |
          | uploadRemoved   |                          |
          | createdBy       |                          |
          | profile         |                          |
          | parent          |                          |
          | startedAt       |                          |
          | finishedAt      |                          |
          | analysisDepth   |                          |
          | application     |                          |
          | applicationName |                          |
          | path            | - Not available in cloud |
          | comment         |                          |
      operationId: getApplicationsScansStats
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Stats'

  /applications/{applicationId}/scans/stats:
    get:
      description: |
        Get stats about all scans of one application

        #### Available Filters
          | Column        | Restrictions             |
          | ------------- | ------------------------ |
          | id            |                          |
          | version       |                          |
          | upload        |                          |
          | phase         |                          |
          | percent       |                          |
          | loc           |                          |
          | codeStored    |                          |
          | uploadRemoved |                          |
          | createdBy     |                          |
          | profile       |                          |
          | parent        |                          |
          | startedAt     |                          |
          | finishedAt    |                          |
          | analysisDepth |                          |
          | application   |                          |
          | path          | - Not available in cloud |
          | comment       |                          |
      operationId: getApplicationScansStats
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Stats'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/comparison:
    get:
      description: |
        Get stats about old, new and fixed issues compared to parent scan
      operationId: getApplicationScanComparison
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            type: object
        400:
          description: No parent scan found
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/comparison/details:
    get:
      description: |
        Gets old, new and fixed issues compared to parent scan
      operationId: getApplicationScanComparisonDetails
      security:
        - email: []
          password: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            type: object
        400:
          description: No parent scan found
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/scans/all:
    get:
      description: |
        Get all scans with permissions for the current user

        #### Available Filters
          | Column            | Restrictions                                |
          | ----------------- | ------------------------------------------- |
          | id                |                                             |
          | version           |                                             |
          | upload            |                                             |
          | phase             |                                             |
          | percent           |                                             |
          | loc               |                                             |
          | codeStored        |                                             |
          | uploadRemoved     |                                             |
          | createdBy         |                                             |
          | profile           |                                             |
          | parent            |                                             |
          | startedAt         |                                             |
          | finishedAt        |                                             |
          | analysisDepth     |                                             |
          | application       |                                             |
          | path              | - Not available in cloud unless ROLE_WORKER |
          | applicationName   |                                             |
          | organization      | - Requires ROLE_ADMIN                       |
          | organizationName  | - Requires ROLE_ADMIN                       |
          | createdByEmail    | - Requires ROLE_ADMIN                       |
          | comment           |                                             |
      operationId: getApplicationsScansAll
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan'

  /applications/{applicationId}/scans:
    get:
      description: |
        Get all scans of one application

        #### Available Filters
          | Column        | Restrictions             |
          | ------------- | ------------------------ |
          | id            |                          |
          | version       |                          |
          | upload        |                          |
          | phase         |                          |
          | percent       |                          |
          | loc           |                          |
          | codeStored    |                          |
          | uploadRemoved |                          |
          | createdBy     |                          |
          | profile       |                          |
          | parent        |                          |
          | startedAt     |                          |
          | finishedAt    |                          |
          | analysisDepth |                          |
          | application   |                          |
          | path          | - Not available in cloud |
          | comment       |                          |
      operationId: getApplicationScans
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all scans of one application

        #### Available Filters
          | Column        | Restrictions             |
          | ------------- | ------------------------ |
          | id            |                          |
          | version       |                          |
          | upload        |                          |
          | phase         |                          |
          | percent       |                          |
          | loc           |                          |
          | codeStored    |                          |
          | uploadRemoved |                          |
          | createdBy     |                          |
          | profile       |                          |
          | parent        |                          |
          | startedAt     |                          |
          | finishedAt    |                          |
          | analysisDepth |                          |
          | application   |                          |
          | path          | - Not available in cloud |
          | comment       |                          |
      operationId: deleteMultipleApplicationScans
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        400:
          description: Invalid input
        403:
          description: Missing permissions
    post:
      description: |
        Add a new scan to application
      operationId: postApplicationScan
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan
          in: body
          required: true
          schema:
            type: object
            properties:
              scan:
                $ref: '#/definitions/Post.Sub.Application.Scan'
              tags:
                type: array
                items:
                  type: string
              php:
                $ref: '#/definitions/Post.Sub.Application.Scan.Php'
              java:
                $ref: '#/definitions/Post.Sub.Application.Scan.Java'
              libraries:
                type: array
                items:
                  $ref: '#/definitions/Post.Sub.Application.Scan.Library'
            required:
              - scan
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}:
    get:
      description: |
        Get a specific scan
      operationId: getApplicationScan
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific scan
      operationId: deleteApplicationScan
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing scan
      operationId: patchApplicationScan
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: patch.Application.Scan
          in: body
          required: true
          schema:
            type: object
            properties:
              scan:
                $ref: '#/definitions/Patch.Sub.Application.Scan'
              tags:
                type: array
                items:
                  type: string
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/classes/batches:
    post:
      description: |
        Add a new class
      operationId: postApplicationScanClassesBatches
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Classes
          in: body
          required: true
          schema:
            type: object
            properties:
              classes:
                $ref: '#/definitions/Post.Sub.Application.Scan.Classes'
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Class'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/classes:
    get:
      description: |
        Get all classes of one scan

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | startLine   |              |
          | endLine     |              |
          | startColumn |              |
          | endColumn   |              |
          | name        |              |
          | package     |              |
          | file        |              |
      operationId: getApplicationScanClasses
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Class'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/classes/{classId}:
    get:
      description: |
        Get a specific class
      operationId: getApplicationScanClass
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: classId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Class'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/functions/batches:
    post:
      description: |
        Add a new function
      operationId: postApplicationScanFunctionsBatches
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Functions
          in: body
          required: true
          schema:
            type: object
            properties:
              functions:
                $ref: '#/definitions/Post.Sub.Application.Scan.Functions'
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Function'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/functions:
    get:
      description: |
        Get all functions of one scan

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | startLine   |              |
          | endLine     |              |
          | startColumn |              |
          | endColumn   |              |
          | name        |              |
          | file        |              |
          | class       |              |
      operationId: getApplicationScanFunctions
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Function'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/functions/{functionId}:
    get:
      description: |
        Get a specific function
      operationId: getApplicationScanFunction
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: functionId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Function'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/concats:
    get:
      description: |
        Get all concats of one scan

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | line     |              |
          | file     |              |
          | function |              |
          | class    |              |
      operationId: getApplicationScanConcats
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Concat'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/concats/{concatId}:
    get:
      description: |
        Get a specific concat
      operationId: getApplicationScanConcat
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: concatId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Concat'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/entrypoints:
    get:
      description: |
        Get all entrypoints of one scan

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | line     |              |
          | file     |              |
          | function |              |
          | class    |              |
      operationId: getApplicationScanEntrypoints
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Entrypoint'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/entrypoints/{entrypointId}:
    get:
      description: |
        Get a specific entrypoint
      operationId: getApplicationScanEntrypoint
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: entrypointId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Entrypoint'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/files:
    get:
      description: |
        Get all files of one scan

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | loc     |              |
          | path    |              |
          | scanned |              |
      operationId: getApplicationScanFiles
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.File'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete the source code of one scan
      operationId: deleteMultipleApplicationScanFiles
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/files/{fileId}:
    get:
      description: |
        Get a specific file
      operationId: getApplicationScanFile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: fileId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.File'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/sinks:
    get:
      description: |
        Get all sinks of one scan

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | name     |              |
          | line     |              |
          | file     |              |
          | function |              |
          | class    |              |
      operationId: getApplicationScanSinks
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Sink'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/sinks/{sinkId}:
    get:
      description: |
        Get a specific sink
      operationId: getApplicationScanSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: sinkId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Sink'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/sources:
    get:
      description: |
        Get all sources of one scan

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | name      |              |
          | line      |              |
          | parameter |              |
          | file      |              |
          | function  |              |
          | class     |              |
      operationId: getApplicationScanSources
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Source'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/sources/{sourceId}:
    get:
      description: |
        Get a specific source
      operationId: getApplicationScanSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: sourceId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Source'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/processes:
    get:
      description: |
        Get all processes of one scan

        #### Available Filters
          | Column     | Restrictions |
          | -------    | ------------ |
          | id         |              |
          | pid        |              |
          | startedAt  |              |
          | finishedAt |              |
          | version    |              |
          | memory     |              |
      operationId: getApplicationScanProcesses
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Process'
        403:
          description: Missing permissions
    post:
      description: |
        Add a new process to scan
      operationId: postApplicationScanProcess
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Process
          in: body
          required: true
          schema:
            type: object
            properties:
              process:
                $ref: '#/definitions/Post.Sub.Application.Scan.Process'
            required:
              - process
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Process'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/processes/{processId}:
    get:
      description: |
        Get a specific process
      operationId: getApplicationScanProcess
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: processId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Process'
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing scan
      operationId: patchApplicationScanProcess
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: processId
          in: path
          required: true
          type: integer
        - name: patch.Application.Scan.Process
          in: body
          required: true
          schema:
            type: object
            properties:
              process:
                $ref: '#/definitions/Patch.Sub.Application.Scan.Process'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Process'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/libraries:
    get:
      description: |
        Get all libraries of one scan

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | name    |              |
          | version |              |
      operationId: getApplicationScanLibraries
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Library'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all libraries of one scan

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | name    |              |
          | version |              |
      operationId: deleteMultipleApplicationScanLibraries
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new library to scan
      operationId: postApplicationScanLibrary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Library
          in: body
          required: true
          schema:
            type: object
            properties:
              library:
                $ref: '#/definitions/Post.Sub.Application.Scan.Library'
            required:
              - process
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Library'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/libraries/{libraryId}:
    get:
      description: |
        Get a specific library
      operationId: getApplicationScanLibrary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: libraryId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Library'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific library
      operationId: deleteApplicationScanLibrary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: libraryId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing library
      operationId: patchApplicationScanLibrary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: libraryId
          in: path
          required: true
          type: integer
        - name: patch.Application.Scan.Library
          in: body
          required: true
          schema:
            type: object
            properties:
              library:
                $ref: '#/definitions/Patch.Sub.Application.Scan.Library'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Library'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/stats:
    get:
      description: |
        Get statistics about all issues of the current scan

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | origin             |              |
          | depth              |              |
          | type               |              |
          | typeName           |              |
          | typeSeverity       |              |
          | typeCategory       |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | source             |              |
          | sink               |              |
          | concat             |              |
          | entrypoint         |              |
          | scan               |              |
          | parent             |              |
          | cve                |              |
          | hash               |              |
      operationId: getApplicationScanIssuesStats
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Stats'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues:
    get:
      description: |
        Get all issues of one scan

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | origin             |              |
          | originName         |              |
          | depth              |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | concat             |              |
          | entrypoint         |              |
          | scan               |              |
          | parent             |              |
          | cve                |              |
          | hash               |              |
          | sink               |              |
          | sinkName           |              |
          | sinkFilePath       |              |
          | source             |              |
          | sourceName         |              |
          | sourceParameter    |              |
          | type               |              |
          | typeSeverity       |              |
          | typeName           |              |
          | typeCategory       |              |
      operationId: getApplicationScanIssues
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: minimal
          in: query
          required: false
          type: boolean
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue'
        403:
          description: Missing permissions
    post:
      description: |
        Add a new issue and related data to scan
      operationId: postApplicationScanIssue
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Issue
          in: body
          required: true
          schema:
            type: object
            properties:
              issue:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue'
              source:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Source'
              sourceTaint:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Taint'
              sink:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Sink'
              sinkTaint:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Taint'
              concat:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Concat'
              concatTaint:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Taint'
              entrypoint:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Entrypoint'
              contexts:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Contexts'
              summaries:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Summaries'
            required:
              - issue
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}:
    get:
      description: |
        Get a specific issue
      operationId: getApplicationScanIssue
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: minimal
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/comments:
    get:
      description: |
        Get all comments of one issue

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | comment    |              |
          | createdAt  |              |
          | createdBy  |              |
          | source     |              |
      operationId: getApplicationScanIssueComments
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Comment'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all comments of one issue

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | comment    |              |
          | createdAt  |              |
          | createdBy  |              |
          | source     |              |
      operationId: deleteMultipleApplicationScanIssueComments
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new comment to issue
      operationId: postApplicationScanIssueComment
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Issue.Comment
          in: body
          required: true
          schema:
            type: object
            properties:
              comment:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Comment'
            required:
              - comment
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Comment'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        429:
          description: Too many create attempts

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/comments/{commentId}:
    get:
      description: |
        Get a specific comment
      operationId: getApplicationScanIssueComment
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: commentId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Comment'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific comment
      operationId: deleteApplicationScanIssueComment
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: commentId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/contexts:
    get:
      description: |
        Get all contexts of one issue

        #### Available Filters
          | Column  | Restrictions |
          | ------  | ------------ |
          | id      |              |
          | context |              |
      operationId: getApplicationScanIssueContexts
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Context'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/contexts/{contextId}:
    get:
      description: |
        Get a specific context
      operationId: getApplicationScanIssueContext
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: contextId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Context'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/reviews/batches:
    post:
      description: |
        Add a new review to all issues
      operationId: postApplicationScanIssueReviewBatch
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Issue.Review
          in: body
          required: true
          schema:
            type: object
            properties:
              review:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Review'
            required:
              - review
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Review'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/reviews:
    get:
      description: |
        Get all reviews of one issue

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | createdAt |              |
          | type      |              |
          | createdBy |              |
          | source    |              |
      operationId: getApplicationScanIssueReviews
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Review'
        403:
          description: Missing permissions
    post:
      description: |
        Add a new review to issue
      operationId: postApplicationScanIssueReview
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Issue.Review
          in: body
          required: true
          schema:
            type: object
            properties:
              review:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Review'
            required:
              - review
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Review'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        429:
          description: Too many create attempts

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/reviews/{reviewId}:
    get:
      description: |
        Get a specific review
      operationId: getApplicationScanIssueReview
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: reviewId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Review'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/summaries:
    get:
      description: |
        Get all summaries of one issue

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | line    |              |
          | content |              |
          | file    |              |
      operationId: getApplicationScanIssueSummaries
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Summary'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/summaries/{summaryId}:
    get:
      description: |
        Get a specific summary
      operationId: getApplicationScanIssueSummary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: summaryId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Summary'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/patches:
    get:
      description: |
        Get all patches of one issue

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | type    |              |
          | typeTag |              |
      operationId: getApplicationScanIssuePatches
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: applicationId
        in: path
        required: true
        type: integer
      - name: scanId
        in: path
        required: true
        type: integer
      - name: issueId
        in: path
        required: true
        type: integer
      - name: filter
        in: query
        type: string
        description: A JSON-encoded filter object (see 'Available Filters').
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Patch'
        403:
          description: Missing permissions
    post:
      description: |
        Add a new patch and related data to issue
      operationId: postApplicationScanIssuePatch
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: applicationId
        in: path
        required: true
        type: integer
      - name: scanId
        in: path
        required: true
        type: integer
      - name: issueId
        in: path
        required: true
        type: integer
      - name: post.Application.Scan.Issue
        in: body
        required: true
        schema:
          type: object
          properties:
            patch:
              $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Patch'
            modifications:
              type: array
              items:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Patch.Modification'
          required:
          - patch
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Patch'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/patches/{patchId}:
    get:
      description: |
        Get a specific patch
      operationId: getApplicationScanIssuePatch
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: applicationId
        in: path
        required: true
        type: integer
      - name: scanId
        in: path
        required: true
        type: integer
      - name: issueId
        in: path
        required: true
        type: integer
      - name: patchId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Patch'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/scans/issues/types:
    get:
      description: |
        Get all issue types

        #### Available Filters
          | Column        | Restrictions |
          | ------------- | ------------ |
          | id            |              |
          | tag           |              |
          | description   |              |
          | name          |              |
          | markup        |              |
          | severity      |              |
          | effort        |              |
          | secondOrder   |              |
          | cwe           |              |
          | owasp2010     |              |
          | owasp2013     |              |
          | owasp2017     |              |
          | sans          |              |
          | pcidss        |              |
          | asvs301       |              |
          | category      |              |
          | parent        |              |
          | inactive      |              |
          | language      |              |
          | languageName  |              |
      operationId: getApplicationsScansIssuesTypes
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Type'

  /applications/scans/issues/types/{typeId}:
    get:
      description: |
        Get a specific issue type
      operationId: getApplicationsScansIssuesType
      parameters:
        - name: typeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Type'
        404:
          description: Not found

  /applications/scans/issues/types/patches:
    get:
      description: |
        Get all issue type patches

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | language |              |
          | type     |              |
      operationId: getApplicationsScansIssuesTypesPatches
      parameters:
      - name: filter
        in: query
        type: string
        description: A JSON-encoded filter object (see 'Available Filters').
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Type.Patch'

  /applications/scans/issues/types/patches/{patchId}:
    get:
      description: |
        Get a specific issue type patch
      operationId: getApplicationsScansIssuesTypesPatch
      parameters:
      - name: patchId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Type.Patch'
        404:
          description: Not found

  /applications/scans/issues/origins/types:
    get:
      description: |
        Get all origin types

        #### Available Filters
          | Column | Restrictions |
          | ------ | ------------ |
          | id     |              |
          | tag    |              |
          | name   |              |
      operationId: getApplicationsScansOriginsTypes
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Origin.Type'

  /applications/scans/issues/origins/types/{typeId}:
    get:
      description: |
        Get a specific origin type
      operationId: getApplicationsScansOriginsType
      parameters:
      - name: typeId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Origin.Type'
        404:
          description: Not found

  /applications/scans/properties/types:
    get:
      description: |
        Get all property types

        #### Available Filters
          | Column | Restrictions |
          | ------ | ------------ |
          | id     |              |
          | tag    |              |
          | name   |              |
      operationId: getApplicationsScansPropertiesTypes
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Property.Type'

  /applications/scans/properties/{typeId}:
    get:
      description: |
        Get a specific property type
      operationId: getApplicationsScansPropertiesType
      parameters:
        - name: typeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Property.Type'
        404:
          description: Not found

  /applications/scans/issues/reviews/types:
    get:
      description: |
        Get all review types

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | tag      |              |
          | name     |              |
          | negative |              |
      operationId: getApplicationsScansReviewsTypes
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Review.Type'

  /applications/scans/issues/reviews/types/{typeId}:
    get:
      description: |
        Get a specific review type
      operationId: getApplicationsScansReviewsType
      parameters:
        - name: typeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Review.Type'
        404:
          description: Not found

  /applications/scans/issues/patches/types:
    get:
      description: |
        Get all patch types

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | tag      |              |
          | name     |              |
      operationId: getApplicationsScansPatchesTypes
      parameters:
      - name: filter
        in: query
        type: string
        description: A JSON-encoded filter object (see 'Available Filters').
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Patch.Type'

  /applications/scans/issues/patches/types/{typeId}:
    get:
      description: |
        Get a specific review type
      operationId: getApplicationsScansPatchesType
      parameters:
      - name: typeId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Patch.Type'
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/exports/csvs:
    get:
      description: |
        Get scan information as csv

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | origin             |              |
          | originName         |              |
          | depth              |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | concat             |              |
          | entrypoint         |              |
          | scan               |              |
          | parent             |              |
          | cve                |              |
          | sink               |              |
          | sinkName           |              |
          | sinkFilePath       |              |
          | source             |              |
          | sourceName         |              |
          | sourceParameter    |              |
          | type               |              |
          | typeSeverity       |              |
          | typeName           |              |
          | typeCategory       |              |
      operationId: getApplicationScanExportsCsvs
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: fields
          in: query
          type: string
          description: An array of fields. Key is the field name and value is the column title.
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      produces:
        - text/csv
      responses:
        200:
          description: Successful
          schema:
            type: file
        403:
          description: Missing permissions
        423:
          description: Another export is currently running

  /applications/{applicationId}/scans/{scanId}/exports/pdfs:
    get:
      description: |
        Get scan information as pdf

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | origin             |              |
          | originName         |              |
          | depth              |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | concat             |              |
          | entrypoint         |              |
          | scan               |              |
          | parent             |              |
          | cve                |              |
          | sink               |              |
          | sinkName           |              |
          | sinkFilePath       |              |
          | source             |              |
          | sourceName         |              |
          | sourceParameter    |              |
          | type               |              |
          | typeSeverity       |              |
          | typeName           |              |
          | typeCategory       |              |
      operationId: getApplicationScanExportsPdfs
      security:
        - email: []
          password: []
        - oauth2: []
      produces:
        - application/pdf
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: pdf[projectName]
          in: query
          required: false
          type: string
        - name: pdf[chapterSummary]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[issueBreakdown]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[issueDetails]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[codeSummary]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[context]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[vulnerabilityDescription]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[comments]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[maxIssuesPerType]
          in: query
          required: false
          type: integer
          default: 500
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: file
        403:
          description: Missing permissions
        423:
          description: Another export is currently running

  /applications/{applicationId}/profiles:
    get:
      description: |
        Get all profiles for the current application

        #### Available Filters
          | Column   | Restrictions |
          | ------   | ------------ |
          | id       |              |
          | name     |              |
          | default  |              |
          | language |              |
      operationId: getApplicationScanProfiles
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to get application independent profiles.
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile'
    delete:
      description: |
        Delete all profiles for the current application

        #### Available Filters
          | Column   | Restrictions |
          | ------   | ------------ |
          | id       |              |
          | name     |              |
          | default  |              |
          | language |              |
      operationId: deleteMultipleApplicationScanProfiles
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to delete application independent profiles.
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new profile
      operationId: postApplicationScanProfile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to create application independent profile.
        - name: post.Application.Profile
          in: body
          required: true
          schema:
            type: object
            properties:
              profile:
                $ref: '#/definitions/Post.Sub.Application.Profile'
            required:
              - profile
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /application/{applicationId}/profiles/{profileId}/clone:
      post:
        description: |
          Clone an existing profile
        operationId: postApplicationScanProfileClone
        security:
          - email: []
            password: []
          - oauth2: []
        parameters:
          - name: applicationId
            in: path
            required: true
            type: integer
            description: Set to 0 to create application independent profile.
          - name: profileId
            in: path
            required: true
            type: integer
            description: The id of the profile that should be cloned.
          - name: Post.Application.Profile.Clone
            in: body
            required: true
            schema:
              type: object
              properties:
                profile:
                  $ref: '#/definitions/Post.Sub.Application.Profile.Clone'
        responses:
          200:
            description: Successful
            schema:
              $ref: '#/definitions/Application.Profile'
          400:
            description: Invalid input
          403:
            description: Missing permissions

  /applications/{applicationId}/profiles/globals:
    get:
      description: |
        Get all profiles for the current application and all global profiles

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | name        |              |
          | default     |              |
          | application |              |
          | language    |              |
      operationId: getApplicationScanProfilesGlobals
      security:
        - email: []
          password: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile'

  /applications/{applicationId}/profiles/{profileId}:
    get:
      description: |
        Get a specific profile
      operationId: getApplicationScanProfile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to get application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific profile
      operationId: deleteApplicationScanProfile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to delete application independent profiles.
        - name: profileId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing profile
      operationId: patchApplicationScanProfile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to update application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile
          in: body
          required: true
          schema:
            type: object
            properties:
              profile:
                $ref: '#/definitions/Patch.Sub.Application.Profile'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/settings:
    get:
      description: |
        Get settings
      operationId: getApplicationScanProfileSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Setting'
        403:
          description: Missing permissions
        404:
          description: Not found
    put:
      description: |
        Add or update settings
      operationId: putApplicationScanProfileSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Setting
          in: body
          required: true
          schema:
            type: object
            properties:
              setting:
                $ref: '#/definitions/Put.Sub.Application.Profile.Setting'
              php:
                $ref: '#/definitions/Post.Sub.Application.Scan.Php'
              java:
                $ref: '#/definitions/Post.Sub.Application.Scan.Java'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Setting'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/ignoredcodes:
    get:
      description: |
        Get all ignored codes for the current profile

        #### Available Filters
          | Column | Restrictions |
          | ------ | ------------ |
          | id     |              |
          | class  |              |
          | method |              |
          | type   |              |
      operationId: getApplicationScanProfileIgnoredCodes
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.IgnoredCode'
    delete:
      description: |
        Delete all ignored codes for the current profile

        #### Available Filters
          | Column | Restrictions |
          | ------ | ------------ |
          | id     |              |
          | class  |              |
          | method |              |
          | type   |              |
      operationId: deleteMultipleApplicationScanProfileIgnoredCodes
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new ignored code
      operationId: postApplicationScanProfileIgnoredCode
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.IgnoredCode
          in: body
          required: true
          schema:
            type: object
            properties:
              ignored_code:
                $ref: '#/definitions/Post.Sub.Application.Profile.IgnoredCode'
            required:
              - ignored_code
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredCode'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/ignoredcodes/{codeId}:
    get:
      description: |
        Get a specific ignored code
      operationId: getApplicationScanProfileIgnoredCode
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: codeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredCode'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific ignored code
      operationId: deleteApplicationScanProfileIgnoredCode
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: codeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing ignored code
      operationId: patchApplicationScanProfileIgnoredCode
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: codeId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.IgnoredCode
          in: body
          required: true
          schema:
            type: object
            properties:
              ignored_code:
                $ref: '#/definitions/Patch.Sub.Application.Profile.IgnoredCode'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredCode'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/ignoredlocations:
    get:
      description: |
        Get all ignored locations for the current profile

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | path     |              |
          | match    |              |
          | exclude  |              |
      operationId: getApplicationScanProfileIgnoredLocations
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.IgnoredLocation'
    delete:
      description: |
        Delete all ignored locations for the current profile

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | path     |              |
          | match    |              |
          | exclude  |              |
      operationId: deleteMultipleApplicationScanProfileIgnoredLocations
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new ignored location
      operationId: postApplicationScanProfileIgnoredLocation
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.IgnoredLocation
          in: body
          required: true
          schema:
            type: object
            properties:
              ignored_location:
                $ref: '#/definitions/Post.Sub.Application.Profile.IgnoredLocation'
            required:
              - ignored_location
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredLocation'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/ignoredlocations/{locationId}:
    get:
      description: |
        Get a specific ignored location
      operationId: getApplicationScanProfileIgnoredLocation
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: locationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredLocation'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific ignored location
      operationId: deleteApplicationScanProfileIgnoredLocation
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: locationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing ignored location
      operationId: patchApplicationScanProfileIgnoredLocation
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: locationId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.IgnoredLocation
          in: body
          required: true
          schema:
            type: object
            properties:
              ignored_location:
                $ref: '#/definitions/Patch.Sub.Application.Profile.IgnoredLocation'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredLocation'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/sanitizers:
    get:
      description: |
        Get all sanitizers for the current profile

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | class      |              |
          | method     |              |
          | property   |              |
          | parameter  |              |
          | characters |              |
      operationId: getApplicationScanProfileSanitizers
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Sanitizer'
    delete:
      description: |
        Delete all sanitizers for the current profile

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | class      |              |
          | method     |              |
          | property   |              |
          | parameter  |              |
          | characters |              |
      operationId: deleteMultipleApplicationScanProfileSanitizers
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new sanitizer
      operationId: postApplicationScanProfileSanitizer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Sanitizer
          in: body
          required: true
          schema:
            type: object
            properties:
              sanitizer:
                $ref: '#/definitions/Post.Sub.Application.Profile.Sanitizer'
            required:
              - sanitizer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sanitizer'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/sanitizers/{sanitizerId}:
    get:
      description: |
        Get a specific sanitizer
      operationId: getApplicationScanProfileSanitizer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sanitizerId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sanitizer'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific sanitizer
      operationId: deleteApplicationScanProfileSanitizer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sanitizerId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing sanitizer
      operationId: patchApplicationScanProfileSanitizer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sanitizerId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Sanitizer
          in: body
          required: true
          schema:
            type: object
            properties:
              sanitizer:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Sanitizer'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sanitizer'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/sinks:
    get:
      description: |
        Get all sinks for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | property  |              |
          | parameter |              |
          | type      |              |
          | typeName  |              |
      operationId: getApplicationScanProfileSinks
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Sink'
    delete:
      description: |
        Delete all sinks for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | property  |              |
          | parameter |              |
          | type      |              |
          | typeName  |              |
      operationId: deleteMultipleApplicationScanProfileSinks
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new sink
      operationId: postApplicationScanProfileSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Sink
          in: body
          required: true
          schema:
            type: object
            properties:
              sink:
                $ref: '#/definitions/Post.Sub.Application.Profile.Sink'
            required:
              - sink
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sink'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/sinks/{sinkId}:
    get:
      description: |
        Get a specific sink
      operationId: getApplicationScanProfileSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sinkId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sink'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific sink
      operationId: deleteApplicationScanProfileSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sinkId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing sink
      operationId: patchApplicationScanProfileSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sinkId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Sink
          in: body
          required: true
          schema:
            type: object
            properties:
              sink:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Sink'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sink'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/sources:
    get:
      description: |
        Get all sources for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | property  |              |
          | parameter |              |
          | type      |              |
      operationId: getApplicationScanProfileSources
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Source'
    delete:
      description: |
        Delete all sources for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | property  |              |
          | parameter |              |
          | type      |              |
      operationId: deleteMultipleApplicationScanProfileSources
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new source
      operationId: postApplicationScanProfileSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Source
          in: body
          required: true
          schema:
            type: object
            properties:
              source:
                $ref: '#/definitions/Post.Sub.Application.Profile.Source'
            required:
              - source
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Source'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/sources/{sourceId}:
    get:
      description: |
        Get a specific source
      operationId: getApplicationScanProfileSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sourceId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Source'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific source
      operationId: deleteApplicationScanProfileSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sourceId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing source
      operationId: patchApplicationScanProfileSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sourceId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Source
          in: body
          required: true
          schema:
            type: object
            properties:
              source:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Source'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Source'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/controllers:
    get:
      description: |
        Get all controllers for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | parameter |              |
          | type      |              |
      operationId: getApplicationScanProfileControllers
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Controller'
    delete:
      description: |
        Delete all controllers for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | parameter |              |
          | type      |              |
      operationId: deleteMultipleApplicationScanProfileControllers
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new controller
      operationId: postApplicationScanProfileController
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Controller
          in: body
          required: true
          schema:
            type: object
            properties:
              controller:
                $ref: '#/definitions/Post.Sub.Application.Profile.Controller'
            required:
              - controller
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Controller'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/controllers/{controllerId}:
    get:
      description: |
        Get a specific controller
      operationId: getApplicationScanProfileController
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: controllerId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Controller'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific controller
      operationId: deleteApplicationScanProfileController
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: controllerId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing controller
      operationId: patchApplicationScanProfileController
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: controllerId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Controller
          in: body
          required: true
          schema:
            type: object
            properties:
              controller:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Controller'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Controller'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/validators:
    get:
      description: |
        Get all validators for the current profile

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | class      |              |
          | method     |              |
          | parameter  |              |
          | characters |              |
      operationId: getApplicationScanProfileValidators
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Validator'
    delete:
      description: |
        Delete all validators for the current profile

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | class      |              |
          | method     |              |
          | parameter  |              |
          | characters |              |
      operationId: deleteMultipleApplicationScanProfileValidators
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new validator
      operationId: postApplicationScanProfileValidator
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Validator
          in: body
          required: true
          schema:
            type: object
            properties:
              validator:
                $ref: '#/definitions/Post.Sub.Application.Profile.Validator'
            required:
              - validator
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Validator'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/validators/{validatorId}:
    get:
      description: |
        Get a specific validator
      operationId: getApplicationScanProfileValidator
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: validatorId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Validator'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific validator
      operationId: deleteApplicationScanProfileValidator
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: validatorId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing validator
      operationId: patchApplicationScanProfileValidator
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: validatorId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Validator
          in: body
          required: true
          schema:
            type: object
            properties:
              validator:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Validator'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Validator'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /oauth/v2/global/clients:
    get:
      description: |
        Get all global client ids
      responses:
        200:
          description: Successful
          schema:
            type: object
            additionalProperties:
              type: string
            example:
              ui-client: 1_xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

  /oauth/v2/clients:
    get:
      description: |
        Get all clients with permissions for current user
      operationId: getClients
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Client'
        404:
          description: Not found
    post:
      description: |
        Create a new client for the current user
      operationId: postClients
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Client
          in: body
          required: true
          schema:
            type: object
            properties:
              client:
                $ref: '#/definitions/Post.Client'
            required:
              - client
      responses:
        200:
          description: Successful
          schema:
            type: object
            $ref: '#/definitions/Client'
        400:
          description: Bad request

  /oauth/v2/clients/{clientId}:
    get:
      description: |
        Get all the client with the given id with permissions for the current user
      operationId: getClient
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: clientId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            type: object
            $ref: '#/definitions/Client'
    delete:
      description: |
        Delete the client with the given id with permissions for the current user
      operationId: deleteClient
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: clientId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        404:
          description: Not found
    put:
      description: |
        Update the client with the given id with permissions for the current user
      operationId: putClient
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: clientId
          in: path
          required: true
          type: integer
        - name: put.Client
          in: body
          required: true
          schema:
            type: object
            properties:
              client:
                $ref: '#/definitions/Put.Client'
            required:
              - client
      responses:
        200:
          description: Successful
          schema:
            type: object
            $ref: '#/definitions/Client'
        400:
          description: Bad request


# DEFINITIONS
# ---------------------------------------------------------------------------
definitions:
  Census:
    type: object
    properties:
      scans:
        type: integer
        format: int64
        example: 10
      issues:
        type: integer
        format: int64
        example: 1000
      loc:
        type: integer
        format: bigint
        example: 2500

  Status:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 5
          name:
            type: string
          valid_until:
            type: string
            format: date-time
            example: "2017-02-16T11:52:25+0100"
          quotas:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
      version:
        type: string
        example: "2.0.0"
      cloud:
        type: boolean
        example: true
      maintenance:
        type: boolean
        example: true
      hardware_id:
        type: string
        example: "abcdefabcdefabcdefabcdefabcdefabcdef"
      census:
        $ref: '#/definitions/Census'
      users:
        type: object
        properties:
          max:
            type: integer
            format: int32
            example: 5
          enabled:
            type: integer
            format: int32
            example: 1
      trial_issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1

  Language:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "PHP"
      file_extensions:
        type: array
        items:
          type: string
          example: "php"
      config_file_extensions:
        type: array
        items:
          type: string
          example: "yaml"

  License:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:25+0100"
      quota_distributed:
        type: boolean
        example: false
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Log:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      text:
        type: string
        example: "Yes"
      level:
        type: integer
        format: int32
        example: 400
      channel:
        type: string
        example: "request"
      request_uri:
        type: string
        example: "/test"
      request_method:
        type: string
        example: "GET"
      ip:
        type: string
        example: "8.8.8.8"
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      email:
        type: string
        example: "foo@bar.com"
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      organization_name:
        type: string
        example: "testorg"
      context:
        type: string
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"
      user_agent:
        type: string
        example: "Mozilla"

  Activity:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      type:
        type: string
        example: "create_comment"
      context:
        type: object
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          email:
            type: string
            format: email
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"

  Setting:
    type: object
    properties:
      key:
        type: string
        example: "ui.test"
      value:
        type: string
        example: "zero"
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"

  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      email:
        type: string
        format: email
        example: "none@example.com"
      last_login:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      roles:
        type: array
        items:
          type: string
          example: "ROLE_CHIEF"
      firstname:
        type: string
        example: "Hans"
      lastname:
        type: string
        example: "Peter"
      enabled:
        type: boolean
        example: true
      root:
        type: boolean
        example: true
      whitelisted_ips:
        type: array
        items:
          type: string
          example: "127.0.0.*"

  Organization:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "Bobs"
      quotas:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      valid_until:
        type: string
        format: date-time
        example: "2017-02-23T14:24:44+0100"
      trial_issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      disabled:
        type: boolean
        example: false

  Quota:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      current_application:
        type: integer
        format: int64
        example: 1
      current_scan:
        type: integer
        format: int64
        example: 2
      current_user:
        type: integer
        format: int64
        example: 3
      max_applications:
        type: integer
        format: int32
        example: 10
      max_scans:
        type: integer
        format: int32
        example: 20
      max_users:
        type: integer
        format: int32
        example: 5
      max_loc:
        type: integer
        format: int32
        example: 1000000
      valid_from:
        type: string
        format: date-time
        example: "2017-02-16T01:52:25+0100"
      valid_until:
        type: string
        format: date-time
        example: "2017-02-16T21:52:25+0100"
      allowed_misses:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        example: 20
      public:
        type: boolean
        example: false
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      notify:
        type: boolean
        example: true
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      languages:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
            name:
              type: string
              example: "PHP"
      trial_issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      update_only:
        type: boolean
        example: false
      flexible_applications:
        type: boolean
        example: true

  Quota.Acl:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      owner_user:
        properties:
          id:
            type: integer
            format: int64
            example: 1
          email:
            type: string
            format: email
      owner_team:
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
        type: boolean
        example: true
      delete:
        type: boolean
        example: true
      create:
        type: boolean
        example: true
      edit:
        type: boolean
        example: true
      use:
        type: boolean
        example: true
      manage:
        type: boolean
        example: true
      immutable:
        type: boolean
        example: true
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Callback:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      url:
        type: string
        example: "http://foo/bar"
      reports:
        type: array
        items:
          type: string
          example: "CREATE_COMMENT"
      applications:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      scans:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Team:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "Team A"
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "DVWA"
      current_scan:
        type: integer
        format: int64
        example: 3
      charged_quota:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          valid_until:
            type: string
            format: date-time
          languages:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      auto_renew:
        type: boolean
        example: true

  Application.Acl:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      owner_user:
        properties:
          id:
            type: integer
            format: int64
            example: 1
          email:
            type: string
            format: email
      owner_team:
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
      view:
        type: boolean
        example: true
      delete:
        type: boolean
        example: true
      create:
        type: boolean
        example: true
      edit:
        type: boolean
        example: true
      scan:
        type: boolean
        example: true
      manage:
        type: boolean
        example: true
      immutable:
        type: boolean
        example: true
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Upload:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:25+0100"
      name:
        type: string
        example: "dvwa.zip"
      file:
        type: string
        example: "1234567890abcdef.zip"
      extension:
        type: string
        example: "zip"
      size:
        type: integer
        format: int32
        example: 400
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      version:
        type: string
        example: "1.2.3"
      started_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"
      finished_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:51+0100"
      phase:
        type: integer
        format: int32
        example: 0
        description: |
          | Value  | Description                  |
          | ------ | -----------                  |
          | 0      | Done                         |
          | 1      | Loading files                |
          | 2      | Parsing code                 |
          | 3      | Scanning code                |
          | 4      | Uncalled functions           |
          | 5      | Second-order vulnerabilities |
          | 6      | Scan automatically aborted   |
          | 7      | Scan aborted by user         |
          | 10     | Scan in queue                |
          | 11     | Finishing the scan           |
      percent:
        type: integer
        format: int32
        example: 100
      loc:
        type: integer
        format: int32
        example: 1000
      code_stored:
        type: boolean
        example: true
      upload_removed:
        type: boolean
        example: false
      source_type:
        type: string
        example: "upload"
      full_code_compared:
        type: boolean
        example: false
      php:
        $ref: '#/definitions/Application.Scan.Php'
      java:
        $ref: '#/definitions/Application.Scan.Java'
      processes:
        type: array
        items:
          $ref: '#/definitions/Application.Scan.Process'
      upload:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
      profile:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
          application:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              name:
                type: string
      issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      parent:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          version:
            type: string
      severity_distributions:
        type: object
        additionalProperties:
          type: integer
          format: int64
      analysis_depth:
        type: integer
        format: int32
        example: 5
      tags:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
      file_extensions:
        type: array
        items:
          type: string
          example: "php"
      max_issues_per_type:
        type: integer
        format: int32
        example: 100
      libraries:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      languages:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      comment:
        type: string
      source:
        type: string
        example: "bamboo"

  Application.Scan.Php:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      major_version:
        type: string
        example: 5
      minor_version:
        type: string
        example: 4
      release_version:
        type: string
        example: 22
      magic_quotes_gpc:
        type: boolean
        example: false
      register_globals:
        type: boolean
        example: false
      allow_url_fopen:
        type: boolean
        example: true
      allow_url_include:
        type: boolean
        example: false
      filter_default:
        type: string
        example: "unsafe_raw"

  Application.Scan.Java:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      major_version:
        type: string
        example: 8
      minor_version:
        type: string
        example: 0
      release_version:
        type: string
        example: 0
      filter_default:
        type: string
        example: "openjdk"

  Application.Scan.Library:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "symfony"
      version:
        type: string
        example: "2.6.3"
      type:
        type: string
        example: "cms"

  Application.Scan.Class:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 5
      start_column:
        type: integer
        format: int32
        example: 1
      end_column:
        type: integer
        format: int32
        example: 5
      name:
        type: string
        example: "Cat"
      package:
        type: string
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.Function:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 5
      start_column:
        type: integer
        format: int32
        example: 1
      end_column:
        type: integer
        format: int32
        example: 5
      name:
        type: string
        example: "bark"
      parameters:
        type: array
        items:
          type: object
          properties:
            package:
              type: string
            name:
              type: string
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.Concat:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 5
      start_column:
        type: integer
        format: int32
        example: 7
      end_column:
        type: integer
        format: int32
        example: 10
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      taint:
        $ref: '#/definitions/Application.Scan.Taint'

  Application.Scan.Entrypoint:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 5
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.File:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      loc:
        type: integer
        format: int32
        example: 10
      path:
        type: string
        example: "index.php"
      code:
        type: string
        example: "<?php phpinfo();"

  Application.Scan.Taint:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 15
      start_column:
        type: integer
        format: int32
        example: 7
      end_column:
        type: integer
        format: int32
        example: 10

  Application.Scan.Sink:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 10
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 15
      start_column:
        type: integer
        format: int32
        example: 7
      end_column:
        type: integer
        format: int32
        example: 10
      name:
        type: string
        example: "Do"
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      taint:
        $ref: '#/definitions/Application.Scan.Taint'

  Application.Scan.Source:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 10
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 15
      start_column:
        type: integer
        format: int32
        example: 7
      end_column:
        type: integer
        format: int32
        example: 10
      name:
        type: string
        example: "Do"
      parameter:
        type: string
        example: "odd"
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      taint:
        $ref: '#/definitions/Application.Scan.Taint'

  Application.Scan.Process:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      pid:
        type: integer
        format: int64
        example: 10
      started_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      finished_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      finished:
        type: boolean
        example: true
      memory:
        type: integer
        format: int64
      phase:
        type: integer
        format: int32
        example: 0
        description: |
          | Value  | Description                  |
          | ------ | -----------                  |
          | 0      | Done                         |
          | 1      | Loading files                |
          | 2      | Parsing code                 |
          | 3      | Scanning code                |
          | 4      | Uncalled functions           |
          | 5      | Second-order vulnerabilities |
          | 6      | Scan automatically aborted   |
          | 7      | Scan aborted by user         |
          | 10     | Scan in queue                |
          | 11     | Finishing the scan           |
      percent:
        type: integer
        format: int32
        example: 100
      weight:
        type: integer
        format: int32
        example: 50
      version:
        type: string
        example: "2.0.0"
      name:
        type: string
        example: "php-engine"

  Application.Scan.Issue:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      origin:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      depth:
        type: integer
        format: int32
        example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      source:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
          parameter:
            type: string
          start_line:
            type: integer
            format: int32
          end_line:
            type: integer
            format: int32
          start_column:
            type: integer
            format: int32
          end_column:
            type: integer
            format: int32
          class:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          function:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          file:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          type:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          taint:
            $ref: '#/definitions/Application.Scan.Taint'
      sink:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
          start_line:
            type: integer
            format: int32
          end_line:
            type: integer
            format: int32
          start_column:
            type: integer
            format: int32
          end_column:
            type: integer
            format: int32
          class:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          function:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          file:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          type:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          taint:
            $ref: '#/definitions/Application.Scan.Taint'
      concat:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          start_line:
            type: integer
            format: int32
          end_line:
            type: integer
            format: int32
          start_column:
            type: integer
            format: int32
          end_column:
            type: integer
            format: int32
          class:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          function:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          file:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          taint:
            $ref: '#/definitions/Application.Scan.Taint'
      entrypoint:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          start_line:
            type: integer
            format: int32
          end_line:
            type: integer
            format: int32
          class:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          function:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          file:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
      readable:
        type: object
        additionalProperties:
          type: string
      parent:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      last_review:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          type:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
      reviewed:
        type: boolean
        example: true
      negatively_reviewed:
        type: boolean
        example: false
      effort:
        type: integer
        format: int32
        example: 30
      complete:
        type: boolean
        example: true
      uuid:
        type: string
      cve:
        type: string
        example: "CVE-2017-100025"
      hash:
        type: string
        example: "d3b07384d113edec49eaa6238ad5ff00"
      directly_called:
        type: boolean
        example: true
      register_globals:
        type: boolean
        example: false
      comments_count:
        type: integer
        format: int32
        example: 3

  Application.Scan.Issue.Comment:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      comment:
        type: string
        example: "Yes"
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"
      created_by:
        $ref: '#/definitions/User'
      issue:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          uuid:
            type: string
      source:
        type: string
        example: "jira"

  Application.Scan.Issue.Context:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      parts:
        type: array
        items:
          $ref: '#/definitions/Application.Scan.Issue.Context.Part'

  Application.Scan.Issue.Context.Part:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      type:
        type: string
        example: "TEXT"
      content:
        type: string
        example: "foo"

  Application.Scan.Issue.Review:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      type:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      issue:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          uuid:
            type: string
      source:
        type: string
        example: "jira"

  Application.Scan.Issue.Summary:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 102
      content:
        type: string
        example: "foo"
      highlighted_content:
        type: string
        example: "<span class=code-identifier>Foobar</span>"
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
          startLine:
            type: integer
            format: int32
            example: 1
          endLine:
            type: integer
            format: int32
            example: 10
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
          startLine:
            type: integer
            format: int32
            example: 1
          endLine:
            type: integer
            format: int32
            example: 10

  Application.Scan.Issue.Patch:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      type:
        properties:
          id:
            type: integer
            format: int64
            example: 1
      modifications:
        type: array
        items:
          $ref: '#/definitions/Application.Scan.Issue.Patch.Modification'

  Application.Scan.Issue.Patch.Type:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "Foo"
      tag:
        type: string
        example: "BAR"

  Application.Scan.Issue.Patch.Modification:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      virtual_line:
        type: integer
        format: int32
        example: 5
      original_line:
        type: integer
        format: int32
        example: 10
      column_start:
        type: integer
        format: int32
        example: 13
      column_end:
        type: integer
        format: int32
        example: 15
      content:
        type: string
        example: "// Code"
      highlighted_content:
        type: string
        example: "<span>//</span> Code"
      original_content:
        type: string
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string

  Application.Scan.Issue.Type.Resource:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      title:
        type: string
      author:
        type: string
      url:
        type: string
      published_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"

  Application.Scan.Issue.Type.Patch:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      description:
        type: string
      examples:
        type: array
        items:
          type: string
      language:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
      parent:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.Issue.Type:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      tag:
        type: string
        example: "XSS"
      description:
        type: string
      name:
        type: string
        example: "Cross-Site Scripting"
      markup:
        type: string
        example: "HTML"
      severity:
        type: integer
        format: int32
        example: 30
      effort:
        type: integer
        format: int32
        example: 15
      second_order:
        type: boolean
        example: true
      cwe:
        type: string
        example: "79"
      owasp2010:
        type: string
        example: "A3"
      owasp2013:
        type: string
        example: "A3"
      owasp2017:
        type: string
        example: "A3"
      sans:
        type: string
        example: "4"
      pcidss:
        type: string
        example: "6.5.1"
      asvs301:
        type: string
        example: "11.8"
      category:
        type: string
        example: "client_vulnerability"
        enum:
          - client_vulnerability
          - server_vulnerability
          - code_quality
          - misconfiguration
      resources:
        type: array
        items:
          $ref: '#/definitions/Application.Scan.Issue.Type.Resource'
      parent:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      inactive:
        type: boolean
        example: false
      languages:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      enabled_for:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1

  Application.Scan.Issue.Origin.Type:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      tag:
        type: string
        example: "DIRECT"
      name:
        type: string
        example: "Direct"

  Application.Scan.Property.Type:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      tag:
        type: string
        example: "PROPERTY"
      name:
        type: string
        example: "property"

  Application.Scan.Issue.Review.Type:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      tag:
        type: string
        example: "NOT_REVIEWED"
      name:
        type: string
        example: "Not reviewed"
      negative:
        type: boolean
        example: false

  Application.Profile:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "DVWA"
      sources:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      controllers:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      sinks:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      validators:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      sanitizers:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      ignores:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      setting:
        $ref: '#/definitions/Application.Profile.Setting'
      default:
        type: boolean
        example: false
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
      language:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Profile.Setting:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      code_stored:
        type: boolean
        example: true
      upload_removed:
        type: boolean
        example: false
      full_code_compared:
        type: boolean
        example: false
      history_inherited:
        type: boolean
        example: true
      analysis_depth:
        type: integer
        format: int32
        example: 5
      max_issues_per_type:
        type: integer
        format: int32
        example: 100
      php:
        $ref: '#/definitions/Application.Scan.Php'
      java:
        $ref: '#/definitions/Application.Scan.Java'

  Application.Profile.IgnoredCode:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
      method:
        type: string
      exclude:
        type: string

  Application.Profile.IgnoredLocation:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      patch:
        type: string
      match:
        type: string
      exclude:
        type: string

  Application.Profile.Sanitizer:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      characters:
        type: string
      issue_type:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Profile.Sink:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      type:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Profile.Source:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
      method:
        type: string
      property:
        type: string
      parameter:
        type: string
      type:
        type: string

  Application.Profile.Controller:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      type:
        type: string

  Application.Profile.Validator:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      characters:
        type: string
      issue_type:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.Stats:
    type: object
    properties:
      issue_types:
        type: object
        additionalProperties:
          type: integer
          format: int32
      issue_severities:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: integer
            format: int32
      issue_depths:
        type: object
        additionalProperties:
          type: integer
          format: int32

  Application.Scan.Issue.Stats:
    type: object
    properties:
      issue_types:
        type: object
        additionalProperties:
          type: integer
          format: int32
      issue_severities:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: integer
            format: int32
      issue_depths:
        type: object
        additionalProperties:
          type: integer
          format: int32
      issues:
        type: integer
        format: int64
        example: 20
      reviewed_issues:
        type: integer
        format: int64
        example: 15
      incomplete_issues:
        type: integer
        format: int64
        example: 15

  Post.Sub.License:
    type: object
    properties:
      key:
        type: string
      quotaDistributed:
        type: boolean
        example: false
        default: false
    required:
      - key

  Post.Sub.Log:
    type: object
    properties:
      text:
        type: string
      context:
        type: string
      level:
        type: integer
        format: int32
    required:
      - text
      - level

  Put.Sub.Setting:
    type: object
    properties:
      value:
        type: string
        maxLength: 180
    required:
      - value

  Post.Sub.Organization:
    type: object
    properties:
      name:
        type: string
        example: "Bobs"
        maxLength: 180
      validUntil:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      trialIssueTypes:
        type: array
        items:
          type: integer
          format: int64
          example: 5
      disabled:
        type: boolean
        example: true
        default: false
    required:
      - name

  Patch.Sub.Organization:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      validUntil:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      trialIssueTypes:
        type: array
        items:
          type: integer
          format: int64
          example: 5
      disabled:
        type: boolean
        example: true
        default: false

  Post.Sub.Quota:
    type: object
    properties:
      currentApplication:
        type: integer
        format: int64
        example: 1
        default: 0
      currentScan:
        type: integer
        format: int64
        example: 2
        default: 0
      currentUser:
        type: integer
        format: int64
        example: 3
        default: 0
      maxApplications:
        type: integer
        format: int32
        example: 10
      maxScans:
        type: integer
        format: int32
        example: 20
      maxUsers:
        type: integer
        format: int32
        example: 5
      maxLoc:
        type: integer
        format: int64
        example: 1000000
        default: 1000
      validFrom:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      validUntil:
        type: string
        format: date-time
        example: "2017-02-16T11:52:27+0100"
      allowedMisses:
        type: integer
        format: int32
        example: 20
      public:
        type: boolean
        example: false
        default: false
      organization:
        type: integer
        format: int64
        example: 1
      notify:
        type: boolean
        example: true
        default: false
      languages:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      updateOnly:
        type: boolean
        example: true
      flexibleApplications:
        type: boolean
        example: true
    required:
      - validFrom
      - validUntil
      - organization
      - languages

  Patch.Sub.Quota:
    type: object
    properties:
      currentApplication:
        type: integer
        format: int64
        example: 1
      currentScan:
        type: integer
        format: int64
        example: 2
      currentUser:
        type: integer
        format: int64
        example: 3
      maxApplications:
        type: integer
        format: int32
        example: 10
      maxScans:
        type: integer
        format: int32
        example: -1
      maxUsers:
        type: integer
        format: int32
        example: 5
      maxLoc:
        type: integer
        format: int64
        example: 1000000
      validFrom:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      validUntil:
        type: string
        format: date-time
        example: "2017-02-16T11:52:27+0100"
      allowedMisses:
        type: integer
        format: int32
        example: 20
      organization:
        type: integer
        format: int64
        example: 1
      notify:
        type: boolean
        example: true
      languages:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      updateOnly:
        type: boolean
        example: true
      flexibleApplications:
        type: boolean
        example: true

  Post.Sub.Quota.Acl:
    type: object
    properties:
      ownerUser:
        type: integer
        format: int64
        example: 1
      ownerTeam:
        type: integer
        format: int64
        example: 1
      view:
        type: boolean
        example: false
        default: false
      delete:
        type: boolean
        example: false
        default: false
      create:
        type: boolean
        example: false
        default: false
      edit:
        type: boolean
        example: false
        default: false
      use:
        type: boolean
        example: false
        default: false
      manage:
        type: boolean
        example: false
        default: false

  Patch.Sub.Quota.Acl:
    type: object
    properties:
      ownerUser:
        type: integer
        format: int64
        example: 1
      ownerTeam:
        type: integer
        format: int64
        example: 1
      view:
        type: boolean
        example: 1
      delete:
        type: boolean
        example: 1
      create:
        type: boolean
        example: 1
      edit:
        type: boolean
        example: 1
      use:
        type: boolean
        example: 1
      manage:
        type: boolean
        example: 1

  Post.Sub.Callback:
    type: object
    properties:
      url:
        type: string
        example: "http://foo/bar"
      reports:
        type: array
        items:
          type: string
          enum:
            - UPDATE_USER
            - DELETE_USER
            - CREATE_SCAN
            - UPDATE_SCAN
            - FINISH_SCAN
            - CREATE_COMMENT
            - DELETE_COMMENT
            - CREATE_REVIEW
      applications:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      scans:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      users:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      organization:
        type: integer
        format: int64
        example: 1
      observeOrganization:
        type: boolean
    required:
      - url

  Patch.Sub.Callback:
    type: object
    properties:
      url:
        type: string
        example: "http://foo/bar"
      reports:
        type: array
        items:
          type: string
          enum:
            - DELETE_ORGANIZATION
            - UPDATE_USER
            - DELETE_USER
            - CREATE_SCAN
            - UPDATE_SCAN
            - FINISH_SCAN
            - CREATE_COMMENT
            - CREATE_REVIEW
      applications:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      scans:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      users:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      organization:
        type: integer
        format: int64
        example: 1
      observeOrganization:
        type: boolean

  Post.Sub.Team:
    type: object
    properties:
      name:
        type: string
        example: "Team A"
        maxLength: 180
      users:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      organization:
        type: integer
        format: int64
        example: 1
    required:
      - name

  Patch.Sub.Team:
    type: object
    properties:
      name:
        type: string
        example: "Team A"
        maxLength: 180
      users:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      organization:
        type: integer
        format: int64
        example: 1

  Post.Sub.User:
    type: object
    properties:
      plainPassword:
        type: string
        example: "you wish"
      email:
        type: string
        format: email
        example: "none@example.com"
        maxLength: 180
      firstname:
        type: string
        example: "Hans"
        maxLength: 180
      lastname:
        type: string
        example: "Peter"
        maxLength: 180
      roles:
        type: array
        items:
          type: string
          example: "ROLE_CHIEF"
      enabled:
        type: boolean
        example: true
        default: false
      organization:
        type: integer
        format: int64
        example: 1
      chargedQuota:
        type: integer
        format: int64
        example: 1
      whitelistedIps:
        type: array
        items:
          type: string
          example: "127.0.0.*"
    required:
      - plainPassword
      - email

  Patch.Sub.User:
    type: object
    properties:
      plainPassword:
        type: string
        example: "you wish"
      email:
        type: string
        format: email
        example: "none@example.com"
        maxLength: 180
      firstname:
        type: string
        example: "Hans"
        maxLength: 180
      lastname:
        type: string
        example: "Peter"
        maxLength: 180
      roles:
        type: array
        items:
          type: string
          example: "ROLE_CHIEF"
      enabled:
        type: boolean
        example: true
      organization:
        type: integer
        format: int64
        example: 1
      root:
        type: boolean
        example: true
      whitelistedIps:
        type: array
        items:
          type: string
          example: "127.0.0.*"

  Post.Sub.User.Activate:
    type: object
    properties:
      plainPassword:
        type: string
        example: "you wish"
    required:
      - plainPassword

  Post.Sub.User.Reset:
    type: object
    properties:
      plainPassword:
        type: string
        example: "you wish"
    required:
      - plainPassword

  Post.Sub.User.Reset.Ui:
    type: object
    properties:
      email:
        type: string
        example: "none@example.com"
        minLength: 3
        maxLength: 180
    required:
      - email

  Post.Sub.User.Invite.Ui:
    type: object
    properties:
      firstname:
        type: string
        example: "Hans"
        maxLength: 180
      lastname:
        type: string
        example: "Peter"
        maxLength: 180
      email:
        type: string
        example: "none@example.com"
        maxLength: 180
      organization:
        type: integer
        format: int64
        example: 1
      roles:
        type: array
        items:
          type: string
          example: "ROLE_CHIEF"
    required:
      - email
      - organization

  Post.Sub.Application:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      chargedQuota:
        type: integer
        format: int64
        example: 1
      autoRenew:
        type: boolean
        example: true
        default: false
    required:
      - name

  Patch.Sub.Application:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      chargedQuota:
        type: integer
        format: int64
        example: 1
      autoRenew:
        type: boolean
        example: true
        default: false

  Post.Sub.Application.Acl:
    type: object
    properties:
      ownerUser:
        type: integer
        format: int64
        example: 1
      ownerTeam:
        type: integer
        format: int64
        example: 1
      view:
        type: boolean
        example: false
        default: false
      delete:
        type: boolean
        example: false
        default: false
      create:
        type: boolean
        example: false
        default: false
      edit:
        type: boolean
        example: false
        default: false
      scan:
        type: boolean
        example: false
        default: false
      manage:
        type: boolean
        example: false
        default: false

  Patch.Sub.Application.Acl:
    type: object
    properties:
      ownerUser:
        type: integer
        format: int64
        example: 1
      ownerTeam:
        type: integer
        format: int64
        example: 1
      view:
        type: boolean
        example: 1
      delete:
        type: boolean
        example: 1
      create:
        type: boolean
        example: 1
      edit:
        type: boolean
        example: 1
      scan:
        type: boolean
        example: 1
      manage:
        type: boolean
        example: 1

  Post.Sub.Application.Scan:
    type: object
    properties:
      profile:
        type: integer
        format: int64
        example: 1
      parent:
        type: integer
        format: int64
        example: 1
      codeStored:
        type: boolean
        example: true
        default: true
      uploadRemoved:
        type: boolean
        example: false
        default: false
      historyInherited:
        type: boolean
        example: true
        default: true
      issueTypes:
        type: array
        items:
          type: integer
          format: int64
          example: 10
      version:
        type: string
        example: "1.2.3"
        maxLength: 180
      upload:
        type: integer
        format: int64
        example: 1
      path:
        type: string
        example: "dvwa"
        description: "Only available in the On-Premises version"
      analysisDepth:
        type: integer
        format: int32
        example: 5
        default: 5
        minimum: 1
        maximum: 5
      maxIssuesPerType:
        type: integer
        format: int32
        example: 100
      comment:
        type: string
      source:
        type: string
    required:
      - version

  Patch.Sub.Application.Scan:
    type: object
    properties:
      phase:
        type: integer
        format: int32
        example: 0
      percent:
        type: integer
        format: int32
        example: 100
        minimum: 0
        maximum: 100
      loc:
        type: integer
        format: int64
        example: 500
      version:
        type: string
        example: "1.2.3"
        maxLength: 180
      comment:
        type: string

  Post.Sub.Application.Scan.Php:
    type: object
    properties:
      majorVersion:
        type: string
        example: 5
        default: 5
        maxLength: 32
      minorVersion:
        type: string
        example: 4
        default: 6
        maxLength: 32
      releaseVersion:
        type: string
        example: 22
        default: "*"
        maxLength: 32
      magicQuotesGpc:
        type: boolean
        example: false
        default: false
      registerGlobals:
        type: boolean
        example: false
        default: false
      allowUrlFopen:
        type: boolean
        example: true
        default: true
      allowUrlInclude:
        type: boolean
        example: false
        default: false
      filterDefault:
        type: string
        example: "unsafe_raw"
        default: "unsafe_raw"
        maxLength: 64

  Post.Sub.Application.Scan.Java:
    type: object
    properties:
      majorVersion:
        type: string
        example: 8
        default: 8
        maxLength: 32
      minorVersion:
        type: string
        example: 0
        default: 0
        maxLength: 32
      releaseVersion:
        type: string
        example: 0
        default: 0
        maxLength: 32
      implementation:
        type: string
        maxLength: 255

  Post.Sub.Application.Scan.Library:
    type: object
    properties:
      name:
        type: string
        example: "symfony"
        maxLength: 180
      version:
        type: string
        example: "2.3.5"
        maxLength: 80
      type:
        type: string
        example: "cms"
        maxLength: 50
    required:
      - name

  Patch.Sub.Application.Scan.Library:
    type: object
    properties:
      name:
        type: string
        example: "symfony"
        maxLength: 180
      version:
        type: string
        example: "2.3.5"
        maxLength: 80
      type:
        type: string
        example: "cms"
        maxLength: 50

  Post.Sub.Application.Scan.Classes:
    type: array
    items:
      type: object
      properties:
        startLine:
          type: integer
          format: int32
          example: 1
        endLine:
          type: integer
          format: int32
          example: 5
        startColumn:
          type: integer
          format: int32
          example: 1
        endColumn:
          type: integer
          format: int32
          example: 5
        name:
          type: string
          example: "Cat"
        package:
          type: string
        file:
          type: integer
          format: int64
          example: 1
      required:
        - startLine
        - endLine
        - name
        - file

  Post.Sub.Application.Scan.Functions:
    type: array
    items:
      type: object
      properties:
        startLine:
          type: integer
          format: int32
          example: 1
        endLine:
          type: integer
          format: int32
          example: 5
        startColumn:
          type: integer
          format: int32
          example: 1
        endColumn:
          type: integer
          format: int32
          example: 5
        name:
          type: string
          example: "bark"
        parameters:
          type: array
          items:
            type: object
            properties:
              package:
                type: string
              name:
                type: string
        file:
          type: integer
          format: int64
          example: 1
        class:
          type: integer
          format: int64
          example: 1
      required:
        - startLine
        - endLine
        - name
        - file

  Post.Sub.Application.Scan.Process:
    type: object
    properties:
      pid:
        type: integer
        format: int64
        example: 10
      finishedAt:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      version:
        type: string
        example: "3.0.0"
        maxLength: 50
      name:
        type: string
        example: "php-engine"
        maxLength: 50
      memory:
        type: integer
        format: int64
      phase:
        type: integer
        format: int32
        example: 0
      percent:
        type: integer
        format: int32
        example: 100
      finished:
        type: boolean
        example: true
        default: false
      weight:
        type: integer
        example: 50

  Patch.Sub.Application.Scan.Process:
    type: object
    properties:
      pid:
        type: integer
        format: int64
        example: 10
      finishedAt:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      version:
        type: string
        example: "2.0.0"
        maxLength: 50
      name:
        type: string
        example: "php-engine"
        maxLength: 50
      memory:
        type: integer
        format: int64
      phase:
        type: integer
        format: int32
        example: 0
      percent:
        type: integer
        format: int32
        example: 100
      finished:
        type: boolean
        example: true
      weight:
        type: integer
        example: 50

  Post.Sub.Application.Scan.Issue:
    type: object
    properties:
      type:
        type: integer
        format: int64
        example: 1
      origin:
        type: integer
        format: int64
        example: 1
      depth:
        type: integer
        format: int32
        example: 2
      cve:
        type: string
        example: "CVE-2017-1000253"
        maxLength: 50
      directlyCalled:
        type: boolean
        example: true
      registerGlobals:
        type: boolean
        example: false
      process:
        type: integer
        format: int64
    required:
      - type
      - depth

  Post.Sub.Application.Scan.Issue.Taint:
    type: object
    properties:
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      startColumn:
        type: integer
        format: int32
        example: 7
      endColumn:
        type: integer
        format: int32
        example: 10

  Post.Sub.Application.Scan.Issue.Source:
    type: object
    properties:
      line:
        type: integer
        format: int32
        example: 1
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      startColumn:
        type: integer
        format: int32
        example: 7
      endColumn:
        type: integer
        format: int32
        example: 10
      name:
        type: string
        example: "_GET"
        maxLength: 255
      parameter:
        type: string
        example: "Something"
        maxLength: 255
      file:
        type: integer
        format: int64
        example: 1
      function:
        type: integer
        format: int64
        example: 1
      class:
        type: integer
        format: int64
        example: 1
      type:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Scan.Issue.Sink:
    type: object
    properties:
      line:
        type: integer
        format: int32
        example: 1
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      startColumn:
        type: integer
        format: int32
        example: 7
      endColumn:
        type: integer
        format: int32
        example: 10
      name:
        type: string
        example: "exec"
      file:
        type: integer
        format: int64
        example: 1
      function:
        type: integer
        format: int64
        example: 1
      class:
        type: integer
        format: int64
        example: 1
      type:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Scan.Issue.Concat:
    type: object
    properties:
      line:
        type: integer
        format: int32
        example: 1
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      startColumn:
        type: integer
        format: int32
        example: 7
      endColumn:
        type: integer
        format: int32
        example: 10
      file:
        type: integer
        format: int64
        example: 1
      function:
        type: integer
        format: int64
        example: 1
      class:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Scan.Issue.Entrypoint:
    type: object
    properties:
      line:
        type: integer
        format: int32
        example: 1
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      file:
        type: integer
        format: int64
        example: 1
      function:
        type: integer
        format: int64
        example: 1
      class:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Scan.Issue.Contexts:
    type: array
    items:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
              - TEXT
              - INJECTION
              - INJECTION_SAFE
              - INJECTION_UNKNOWN
          content:
            type: string
            example: "foo"

  Post.Sub.Application.Scan.Issue.Summaries:
    type: array
    items:
      type: object
      properties:
        line:
          type: integer
          format: int32
          example: 5
        content:
          type: string
          example: "None"
        file:
          type: integer
          format: int64
          example: 1
        function:
          type: integer
          format: int64
          example: 1
        class:
          type: integer
          format: int64
          example: 1

  Post.Sub.Application.Scan.Issue.Comment:
    type: object
    properties:
      comment:
        type: string
        example: "Ok"
      source:
        type: string
        example: "jira"
    required:
      - comment

  Post.Sub.Application.Scan.Issue.Review:
    type: object
    properties:
      type:
        type: integer
        format: int64
        example: 1
      source:
        type: string
        example: "jira"
    required:
      - type

  Post.Sub.Application.Scan.Issue.Patch:
    type: array
    items:
      type: object
      properties:
        type:
          type: integer
          format: int64
          example: 1
      required:
        - type

  Post.Sub.Application.Scan.Issue.Patch.Modification:
    type: array
    items:
      type: object
      properties:
        virtualLine:
          type: integer
          format: int32
          example: 5
        originalLine:
          type: integer
          format: int32
          example: 6
        columnStart:
          type: integer
          format: int32
          example: 13
        columnEnd:
          type: integer
          format: int32
          example: 15
        content:
          type: string
          example: "None"
        originalContent:
          type: string
          example: "None"
        file:
          type: integer
          format: int64
          example: 1
      required:
        - content
        - file

  Post.Sub.Application.Profile:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
      default:
        type: boolean
        example: false
        default: false
      language:
        type: integer
        format: int64
        example: 1
    required:
      - name
      - language

  Patch.Sub.Application.Profile:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
      default:
        type: boolean
        example: false
      language:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Profile.Clone:
    type: object
    properties:
      name:
        type: string
        example: "Cloned Profile"
      targetApplication:
        type: integer
        format: int64
        example: 10

  Put.Sub.Application.Profile.Setting:
    type: object
    properties:
      issueTypes:
        type: array
        items:
          type: integer
          format: int64
          example: 10
      codeStored:
        type: boolean
        example: true
        default: true
      uploadRemoved:
        type: boolean
        example: false
        default: false
      fullCodeCompared:
        type: boolean
        example: false
        default: false
      historyInherited:
        type: boolean
        example: true
        default: true
      analysisDepth:
        type: integer
        format: int32
        example: 5
        default: 5
        minimum: 1
        maximum: 5
      maxIssuesPerType:
        type: integer
        format: int32
        example: 100

  Post.Sub.Application.Profile.IgnoredCode:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      exclude:
        type: string
        enum:
          - CALL
          - RETURN
    required:
      - exclude

  Patch.Sub.Application.Profile.IgnoredCode:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      exclude:
        type: string

  Post.Sub.Application.Profile.IgnoredLocation:
    type: object
    properties:
      path:
        type: string
      match:
        type: string
        enum:
          - PARTIAL
          - START
          - REGEX
      exclude:
        type: string
        enum:
          - SECURITY
          - QUALITY
          - MISCONFIGURATION
          - PATCH
          - ANALYSIS
    required:
      - path
      - match
      - exclude

  Patch.Sub.Application.Profile.IgnoredLocation:
    type: object
    properties:
      path:
        type: string
      match:
        type: string
      exclude:
        type: string

  Post.Sub.Application.Profile.Sanitizer:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      characters:
        type: string
      issueType:
        type: integer
        format: int64
        example: 10

  Patch.Sub.Application.Profile.Sanitizer:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      characters:
        type: string
      issueType:
        type: integer
        format: int64
        example: 10

  Post.Sub.Application.Profile.Sink:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      type:
        type: integer
        format: int64
        example: 1
    required:
      - type

  Patch.Sub.Application.Profile.Sink:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      type:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Profile.Source:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      property:
        type: string
      parameter:
        type: string
      type:
        type: string
    required:
      - type

  Patch.Sub.Application.Profile.Source:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      property:
        type: string
      parameter:
        type: string
      type:
        type: string

  Post.Sub.Application.Profile.Controller:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      type:
        type: string
    required:
      - type

  Patch.Sub.Application.Profile.Controller:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      type:
        type: string

  Post.Sub.Application.Profile.Validator:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      characters:
        type: string
      issueType:
        type: integer
        format: int64
        example: 10

  Patch.Sub.Application.Profile.Validator:
    type: object
    properties:
      class:
        type: string
      method:
        type: string
      parameter:
        type: string
      characters:
        type: string
      issueType:
        type: integer
        format: int64
        example: 10

  Client:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      random_id:
        type: string
      secret:
        type: string
      redirect_uris:
        type: array
        items:
          type: string
      allowed_grant_types:
        type: array
        items:
          type: string

  Post.Client:
    type: object
    properties:
      name:
        type: string
      allowed_grant_types:
        type: array
        items:
          type: string
      redirect_uris:
        type: array
        items:
          type: string
    required:
      - name

  Put.Client:
    type: object
    properties:
      name:
        type: string
      allowed_grant_types:
        type: array
        items:
          type: string
      redirect_uris:
        type: array
        items:
          type: string
    required:
      - name

# SECURITY
# ---------------------------------------------------------------------------
securityDefinitions:
  email:
    type: apiKey
    in: header
    name: X-API-Email
  password:
    type: apiKey
    in: header
    name: X-API-Password
  oauth2:
    type: oauth2
    flow: password
    tokenUrl: /oauth/v2/auth/tokens
    scopes: {}
