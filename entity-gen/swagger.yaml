swagger: '2.0'

info:
  version: "3.3.9"
  title: "RIPS API"
  description: |
    RIPS is a static code analysis tool to automatically detect taint-style vulnerabilities in PHP and Java applications.
  contact:
    name: "RIPS Technologies GmbH"
    url: "https://www.ripstech.com"
    email: "contact@ripstech.com"

host: "api-3.ripstech.com"

schemes:
  - "https"
  - "http"

consumes:
  - application/json

produces:
  - application/json

# API
# ---------------------------------------------------------------------------
paths:
  /status:
    get:
      description: |
        Get status information about your session as well as the API environment
      operationId: getStatus
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Status'

  /languages:
    get:
      description: |
        Get all language objects

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | name    |              |
      operationId: getLanguages
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Language'

  /languages/{languageId}:
    get:
      description: |
        Get a specific Language
      operationId: getLanguage
      parameters:
      - name: languageId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Language'
        404:
          description: Not found

  /sources:
    get:
      description: |
        Get all directories from the root source directory

        Only available in the On-Premises version.
      operationId: getSources
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              type: string

  /licenses:
    get:
      description: |
        Get all licenses

        Only available in the On-Premises version.

        #### Available Filters
          | Column           | Restrictions |
          | ---------------- | ------------ |
          | id               |              |
          | createdAt        |              |
          | validUntil       |              |
          | quotaDistributed |              |
          | createdBy        |              |
          | parent           |              |
          | child            |              |
      operationId: getLicenses
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/License'
        403:
          description: Missing permissions
    post:
      description: |
        Activate a new license

        Only available in the On-Premises version.
      operationId: postLicense
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.License
          in: body
          required: true
          schema:
            type: object
            properties:
              license:
                $ref: '#/definitions/Post.Sub.License'
            required:
              - license
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/License'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /licenses/{licenseId}:
    get:
      description: |
        Get a specific license

        Only available in the On-Premises version.
      operationId: getLicense
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: licenseId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/License'
        403:
          description: Missing permissions
        404:
          description: Not found

  /logs:
    get:
      description: |
        Get all logs

        #### Available Filters
          | Column           | Restrictions |
          | ---------------- | ------------ |
          | id               |              |
          | text             |              |
          | level            |              |
          | channel          |              |
          | requestUri       |              |
          | requestMethod    |              |
          | ip               |              |
          | createdBy        |              |
          | email            |              |
          | context          |              |
          | createdAt        |              |
          | organization     |              |
          | organizationName |              |
      operationId: getLogs
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Log'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all logs that are older than a week

        #### Available Filters
          | Column           | Restrictions |
          | ---------------- | ------------ |
          | id               |              |
          | text             |              |
          | level            |              |
          | channel          |              |
          | requestUri       |              |
          | requestMethod    |              |
          | ip               |              |
          | createdBy        |              |
          | username         |              |
          | context          |              |
          | createdAt        |              |
          | organization     |              |
          | organizationName |              |
      operationId: deleteMultipleLogs
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new log
      operationId: postLog
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Log
          in: body
          required: true
          schema:
            type: object
            properties:
              log:
                $ref: '#/definitions/Post.Sub.Log'
            required:
              - log
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Log'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /logs/{logId}:
    get:
      description: |
        Get a specific log
      operationId: getLog
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: logId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Log'
        403:
          description: Missing permissions
        404:
          description: Not found

  /activities:
    get:
      description: |
        Get all activities

        #### Available Filters
          | Column           | Restrictions                          |
          | ---------------- | ------------------------------------- |
          | id               |                                       |
          | type             |                                       |
          | context          |                                       |
          | application      |                                       |
          | applicationName  |                                       |
          | createdBy        |                                       |
          | createdByEmail   |                                       |
          | createdAt        |                                       |
          | organization     | - Requires ROLE_ADMIN or ROLE_SUPPORT |
          | organizationName | - Requires ROLE_ADMIN or ROLE_SUPPORT |
      operationId: getActivities
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Activity'

  /activities/{activityId}:
    get:
      description: |
        Get a specific activity
      operationId: getActivity
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: activityId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Activity'
        403:
          description: Missing permissions
        404:
          description: Not found

  /settings:
    get:
      description: |
        Get all settings

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | key       |              |
          | value     |              |
          | createdAt |              |
      operationId: getSettings
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Setting'
    delete:
      description: |
        Delete all settings

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | key       |              |
          | value     |              |
          | createdAt |              |
      operationId: deleteMultipleSettings
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful

  /settings/{key}:
    get:
      description: |
        Get a specific setting
      operationId: getSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: key
          in: path
          required: true
          type: string
          maxLength: 180
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Setting'
        404:
          description: Not found
    delete:
      description: |
        Delete a specific setting
      operationId: deleteSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: key
          in: path
          required: true
          type: string
          maxLength: 180
      responses:
        200:
          description: Successful
        404:
          description: Not found
    put:
      description: |
        Add or update setting
      operationId: putSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: key
          in: path
          required: true
          type: string
          maxLength: 180
        - name: put.Setting
          in: body
          required: true
          schema:
            type: object
            properties:
              setting:
                $ref: '#/definitions/Put.Sub.Setting'
            required:
              - setting
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Setting'
        400:
          description: Invalid input
        404:
          description: Not found

  /organizations:
    get:
      description: |
        Get all organizations

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | name       |              |
          | validUntil |              |
      operationId: getOrganizations
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all organizations

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | name       |              |
          | validUntil |              |
      operationId: deleteMultipleOrganizations
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new organization
      operationId: postOrganization
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Organization
          in: body
          required: true
          schema:
            type: object
            properties:
              organization:
                $ref: '#/definitions/Post.Sub.Organization'
            required:
              - organization
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Organization'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /organizations/{organizationId}:
    get:
      description: |
        Get a specific organization
      operationId: getOrganization
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: organizationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Organization'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific organization
      operationId: deleteOrganization
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: organizationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing organization
      operationId: patchOrganization
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: organizationId
          in: path
          required: true
          type: integer
        - name: patch.Organization
          in: body
          required: true
          schema:
            type: object
            properties:
              organization:
                $ref: '#/definitions/Patch.Sub.Organization'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Organization'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /quotas:
    get:
      description: |
        Get all quotas with permissions for current user

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | currentApplication |              |
          | currentScan        |              |
          | currentUser        |              |
          | maxApplications    |              |
          | maxScans           |              |
          | maxUsers           |              |
          | maxLoc             |              |
          | validFrom          |              |
          | validUntil         |              |
          | allowedMisses      |              |
          | public             |              |
          | license            |              |
          | notify             |              |
          | organization       |              |
      operationId: getQuotas
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Quota'
    delete:
      description: |
        Delete all quotas

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | currentApplication |              |
          | currentScan        |              |
          | currentUser        |              |
          | maxApplications    |              |
          | maxScans           |              |
          | maxUsers           |              |
          | maxLoc             |              |
          | validFrom          |              |
          | validUntil         |              |
          | allowedMisses      |              |
          | public             |              |
          | license            |              |
          | notify             |              |
          | organization       |              |
      operationId: deleteMultipleQuotas
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new quota
      operationId: postQuota
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Quota
          in: body
          required: true
          schema:
            type: object
            properties:
              quota:
                $ref: '#/definitions/Post.Sub.Quota'
            required:
              - quota
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /quotas/{quotaId}:
    get:
      description: |
        Get a specific quota
      security:
        - email: []
          password: []
        - oauth2: []
      operationId: getQuota
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific quota
      operationId: deleteQuota
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing quota
      operationId: patchQuota
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: patch.Quota
          in: body
          required: true
          schema:
            type: object
            properties:
              quota:
                $ref: '#/definitions/Patch.Sub.Quota'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /quotas/{quotaId}/acls:
    get:
      description: |
        Get all acls with permissions for current user

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | ownerUser |              |
          | ownerTeam |              |
      operationId: getQuotaAcls
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Quota.Acl'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all acls with permissions for current user

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | ownerUser |              |
          | ownerTeam |              |
      operationId: deleteMultipleQuotaAcls
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new acl
      operationId: postQuotaAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: post.Quota.Acl
          in: body
          required: true
          schema:
            type: object
            properties:
              acl:
                $ref: '#/definitions/Post.Sub.Quota.Acl'
            required:
              - acl
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota.Acl'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /quotas/{quotaId}/acls/{aclId}:
    get:
      description: |
        Get a specific acl
      operationId: getQuotaAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota.Acl'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific acl
      operationId: deleteQuotaAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing acl
      operationId: patchQuotaAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: quotaId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
        - name: patch.Quota.Acl
          in: body
          required: true
          schema:
            type: object
            properties:
              acl:
                $ref: '#/definitions/Patch.Sub.Quota.Acl'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Quota.Acl'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /callbacks:
    get:
      description: |
        Get all callbacks with permissions for current user

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | url       |              |
          | createdBy |              |
          | createdAt |              |
      operationId: getcallbacks
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
      - email: []
        password: []
      - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Callback'
    delete:
      description: |
        Delete all callbacks

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | url       |              |
          | createdBy |              |
          | createdAt |              |
      operationId: deleteMultiplecallbacks
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
      - email: []
        password: []
      - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new callback
      operationId: postcallback
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: post.Callback
        in: body
        required: true
        schema:
          type: object
          properties:
            callback:
              $ref: '#/definitions/Post.Sub.Callback'
          required:
          - callback
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Callback'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /callbacks/{callbackId}:
    get:
      description: |
        Get a specific callback
      operationId: getCallback
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: callbackId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Callback'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific callback
      operationId: deleteCallback
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: callbackId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing callback
      operationId: patchCallback
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: callbackId
        in: path
        required: true
        type: integer
      - name: patch.Callback
        in: body
        required: true
        schema:
          type: object
          properties:
            callback:
              $ref: '#/definitions/Patch.Sub.Callback'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Callback'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /teams:
    get:
      description: |
        Get all teams with permissions for current user

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | name      |              |
          | createdBy |              |
      operationId: getTeams
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
    delete:
      description: |
        Delete all teams

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | name      |              |
          | createdBy |              |
      operationId: deleteMultipleTeams
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new team
      operationId: postTeam
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Team
          in: body
          required: true
          schema:
            type: object
            properties:
              team:
                $ref: '#/definitions/Post.Sub.Team'
            required:
              - team
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Team'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /teams/{teamId}:
    get:
      description: |
        Get a specific team
      operationId: getTeam
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: teamId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Team'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific team
      operationId: deleteTeam
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: teamId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing team
      operationId: patchTeam
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: teamId
          in: path
          required: true
          type: integer
        - name: patch.Team
          in: body
          required: true
          schema:
            type: object
            properties:
              team:
                $ref: '#/definitions/Patch.Sub.Team'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Team'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users:
    get:
      description: |
        Get all users with permissions for current user

        #### Available Filters
          | Column           | Restrictions                          |
          | ---------------- | ------------------------------------- |
          | id               |                                       |
          | firstname        |                                       |
          | lastname         |                                       |
          | email            |                                       |
          | root             |                                       |
          | enabled          |                                       |
          | lastLogin        |                                       |
          | organization     | - Requires ROLE_ADMIN or ROLE_SUPPORT |
          | organizationName | - Requires ROLE_ADMIN or ROLE_SUPPORT |
          | team             |                                       |
          | createdAt        |                                       |
      operationId: getUsers
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    delete:
      description: |
        Delete all users

        #### Available Filters
          | Column           | Restrictions          |
          | ---------------- | --------------------- |
          | id               |                       |
          | firstname        |                       |
          | lastname         |                       |
          | email            |                       |
          | root             |                       |
          | enabled          |                       |
          | lastLogin        |                       |
          | organization     | - Requires ROLE_ADMIN |
          | organizationName | - Requires ROLE_ADMIN |
          | team             |                       |
      operationId: deleteMultipleUsers
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new user
      operationId: postUser
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.User
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Post.Sub.User'
            required:
              - user
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /users/statistics:
    get:
      description: |
        Get all users statistics with permissions for current user
  
        #### Available Filters
          | Column             | Restrictions          |
          | ------------------ | --------------------- |
          | scanId             |                       |
          | applicationId      |                       |
          | applicationName    |                       |
          | version            |                       |
          | date               |                       |
          | phase              |                       |
          | scanInherited      |                       |
          | loc                |                       |
          | negativelyReviewed |                       |
          | comment            |                       |
          | tag                |                       |
      operationId: getUsersStatistics
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/UserStatistics'
        403:
          description: Missing permissions

  /users/{userId}:
    get:
      description: |
        Get a specific user
      operationId: getUser
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific user
      operationId: deleteUser
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing user
      operationId: patchUser
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
        - name: patch.User
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Patch.Sub.User'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users/{userId}/statistics:
    get:
      description: |
        Get specific user statistics

        #### Available Filters
          | Column             | Restrictions          |
          | ------------------ | --------------------- |
          | scanId             |                       |
          | applicationId      |                       |
          | applicationName    |                       |
          | version            |                       |
          | date               |                       |
          | phase              |                       |
          | scanInherited      |                       |
          | loc                |                       |
          | negativelyReviewed |                       |
          | comment            |                       |
          | tag                |                       |
      operationId: getUserStatistics
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: userId
          in: path
          required: true
          type: integer
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/UserStatistics'
        403:
          description: Missing permissions

  /users/{userId}/activate/{token}:
    post:
      description: |
        Activate an existing user
      operationId: postUsersActivate
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
        - name: token
          in: path
          required: true
          type: string
        - name: post.User.Activate
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Post.Sub.User.Activate'
            required:
              - user
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users/{userId}/confirm/{token}:
    post:
      description: |
        Confirm e-mail update
      operationId: postUsersConfirm
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
        - name: token
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users/{userId}/reset/{token}:
    post:
      description: |
        Reset an existing user
      operationId: postUsersReset
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
        - name: token
          in: path
          required: true
          type: string
        - name: post.User.Reset
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Post.Sub.User.Reset'
            required:
              - user
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /users/reset/ui:
    post:
      description: |
        Request reset e-mail
      operationId: postUsersResetUi
      parameters:
        - name: post.User.Reset.Ui
          in: body
          required: true
          schema:
            type: object
            properties:
              reset:
                $ref: '#/definitions/Post.Sub.User.Reset.Ui'
            required:
              - reset
      responses:
        200:
          description: Successful
        400:
          description: Invalid input
        403:
          description: Missing permissions
        429:
          description: Too many reset attempts

  /users/invite/ui:
    post:
      description: |
        Send invite e-mail
      operationId: postUsersInviteUi
      parameters:
        - name: post.User.Invite.Ui
          in: body
          required: true
          schema:
            type: object
            properties:
              user:
                $ref: '#/definitions/Post.Sub.User.Invite.Ui'
            required:
              - user
      responses:
        200:
          description: Successful
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications:
    get:
      description: |
        Get all applications with permissions for current user

        #### Available Filters
          | Column       | Restrictions |
          | ------------ | ------------ |
          | id           |              |
          | name         |              |
          | currentScan  |              |
          | chargedQuota |              |
          | createdBy    |              |
          | createdAt    |              |
      operationId: getApplications
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application'
    delete:
      description: |
        Delete all applications with permissions for current user

        #### Available Filters
          | Column       | Restrictions |
          | ------------ | ------------ |
          | id           |              |
          | name         |              |
          | currentScan  |              |
          | chargedQuota |              |
          | createdBy    |              |
          | createdAt    |              |
      operationId: deleteMultipleApplications
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new application
      operationId: postApplication
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: Post.Application
          in: body
          required: true
          schema:
            type: object
            properties:
              application:
                $ref: '#/definitions/Post.Sub.Application'
            required:
              - application
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}:
    get:
      description: |
        Get a specific application
      operationId: getApplication
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific application
      operationId: deleteApplication
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing application
      operationId: patchApplication
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: patch.Application
          in: body
          required: true
          schema:
            type: object
            properties:
              application:
                $ref: '#/definitions/Patch.Sub.Application'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/acls:
    get:
      description: |
        Get all acls with permissions for current user

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | ownerUser   |              |
          | ownerTeam   |              |
          | createdBy   |              |
          | view        |              |
          | delete      |              |
          | create      |              |
          | edit        |              |
          | scan        |              |
          | manage      |              |
          | immutable   |              |
          | application |              |
      operationId: getApplicationAcls
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Acl'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all acls with permissions for current user

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | ownerUser   |              |
          | ownerTeam   |              |
          | createdBy   |              |
          | view        |              |
          | delete      |              |
          | create      |              |
          | edit        |              |
          | scan        |              |
          | manage      |              |
          | immutable   |              |
          | application |              |
      operationId: deleteMultipleApplicationAcls
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new acl
      operationId: postApplicationAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: post.Application.Acl
          in: body
          required: true
          schema:
            type: object
            properties:
              acl:
                $ref: '#/definitions/Post.Sub.Application.Acl'
            required:
              - acl
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Acl'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/acls/{aclId}:
    get:
      description: |
        Get a specific acl
      operationId: getApplicationAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Acl'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific acl
      operationId: deleteApplicationAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing acl
      operationId: patchApplicationAcl
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: aclId
          in: path
          required: true
          type: integer
        - name: patch.Application.Acl
          in: body
          required: true
          schema:
            type: object
            properties:
              acl:
                $ref: '#/definitions/Patch.Sub.Application.Acl'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Acl'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/acls/own:
    get:
      description: |
        Get all acls for current user

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | ownerUser   |              |
          | ownerTeam   |              |
          | createdBy   |              |
          | view        |              |
          | delete      |              |
          | create      |              |
          | edit        |              |
          | scan        |              |
          | manage      |              |
          | immutable   |              |
          | application |              |
      operationId: getOwnApplicationAcls
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Acl'

  /applications/{applicationId}/artifacts:
    get:
      description: |
        Get all artifacts for application

        #### Available Filters
          | Column     | Restrictions  |
          | ---------- | ------------- |
          | id         |               |
          | createdAt  |               |
          | name       |               |
          | path       |               |
          | createdBy  |               |
          | scan       |               |
      operationId: getApplicationArtifacts
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Artifact'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all artifacts for application

        #### Available Filters
          | Column     | Restrictions  |
          | ---------- | ------------- |
          | id         |               |
          | createdAt  |               |
          | name       |               |
          | path       |               |
          | createdBy  |               |
          | scan       |               |
      operationId: deleteMultipleApplicationArtifacts
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new artifact
      operationId: postApplicationArtifact
      security:
        - email: []
          password: []
        - oauth2: []
      consumes:
        - multipart/form-data
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: post.Application.Artifact
          in: body
          required: true
          schema:
            type: object
            properties:
              artifact:
                $ref: '#/definitions/Post.Sub.Application.Artifact'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Artifact'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/artifacts/{artifactId}:
    get:
      description: |
        Get a specific artifact
      operationId: getApplicationArtifact
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: artifactId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Artifact'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific artifacts
      operationId: deleteApplicationArtifact
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: artifactId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/uploads/all:
    get:
      description: |
        Get all uploads with permissions for current user

        #### Available Filters
          | Column             | Restrictions                          |
          | ----------         | ------------------------------------  |
          | id                 |                                       |
          | createdAt          |                                       |
          | name               |                                       |
          | extension          |                                       |
          | size               |                                       |
          | file               | - Requires ROLE_ADMIN or ROLE_SUPPORT |
          | createdBy          |                                       |
          | createdByEmail     |                                       |
          | organization       | - Requires ROLE_ADMIN or ROLE_SUPPORT |
          | organizationName   | - Requires ROLE_ADMIN or ROLE_SUPPORT |
      operationId: getApplicationUploadsAll
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Upload'
        403:
          description: Missing permissions

  /applications/{applicationId}/uploads:
    get:
      description: |
        Get all uploads with permissions for current user

        #### Available Filters
          | Column     | Restrictions                          |
          | ---------- | ------------------------------------- |
          | id         |                                       |
          | createdAt  |                                       |
          | name       |                                       |
          | extension  |                                       |
          | size       |                                       |
          | file       | - Requires ROLE_ADMIN or ROLE_SUPPORT |
          | createdBy  |                                       |
      operationId: getApplicationUploads
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Upload'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all uploads with permissions for current user

        #### Available Filters
          | Column     | Restrictions  |
          | ---------- | ------------- |
          | id         |               |
          | createdAt  |               |
          | name       |               |
          | extension  |               |
          | size       |               |
          | file       | - Admins only |
          | createdBy  |               |
      operationId: deleteMultipleApplicationUploads
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new upload
      operationId: postApplicationUpload
      security:
        - email: []
          password: []
        - oauth2: []
      consumes:
        - multipart/form-data
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: upload[file]
          in: formData
          required: true
          type: file
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Upload'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/uploads/{uploadId}:
    get:
      description: |
        Get a specific upload
      operationId: getApplicationUpload
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: uploadId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Upload'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific upload
      operationId: deleteApplicationUpload
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: uploadId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/scans/stats:
    get:
      description: |
        Get statistics about all applications with permissions for current user

        #### Available Filters
          | Column          | Restrictions             |
          | --------------- | ------------------------ |
          | id              |                          |
          | version         |                          |
          | upload          |                          |
          | phase           |                          |
          | percent         |                          |
          | loc             |                          |
          | codeStored      |                          |
          | uploadRemoved   |                          |
          | createdBy       |                          |
          | profile         |                          |
          | parent          |                          |
          | startedAt       |                          |
          | finishedAt      |                          |
          | analysisDepth   |                          |
          | application     |                          |
          | applicationName |                          |
          | path            | - Not available in cloud |
          | comment         |                          |
          | server          | - Requires ROLE_WORKER   |
      operationId: getApplicationsScansStats
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Stats'

  /applications/{applicationId}/scans/stats:
    get:
      description: |
        Get stats about all scans of one application

        #### Available Filters
          | Column        | Restrictions             |
          | ------------- | ------------------------ |
          | id            |                          |
          | version       |                          |
          | upload        |                          |
          | phase         |                          |
          | percent       |                          |
          | loc           |                          |
          | codeStored    |                          |
          | uploadRemoved |                          |
          | createdBy     |                          |
          | profile       |                          |
          | parent        |                          |
          | startedAt     |                          |
          | finishedAt    |                          |
          | analysisDepth |                          |
          | application   |                          |
          | path          | - Not available in cloud |
          | comment       |                          |
          | server        | - Requires ROLE_WORKER   |
      operationId: getApplicationScansStats
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Stats'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/comparison:
    get:
      description: |
        Get stats about old, new and fixed issues compared to parent scan

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | origin             |              |
          | depth              |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | cve                |              |
          | hash               |              |
          | type               |              |
          | typeSeverity       |              |
          | typeName           |              |
          | typeCategory       |              |
      operationId: getApplicationScanComparison
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            type: object
        400:
          description: No parent scan found
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/comparison/details:
    get:
      description: |
        Gets old, new and fixed issues compared to parent scan

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | origin             |              |
          | depth              |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | cve                |              |
          | hash               |              |
          | type               |              |
          | typeSeverity       |              |
          | typeName           |              |
          | typeCategory       |              |
      operationId: getApplicationScanComparisonDetails
      security:
        - email: []
          password: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            type: object
        400:
          description: No parent scan found
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/scans/all:
    get:
      description: |
        Get all scans with permissions for the current user

        #### Available Filters
          | Column            | Restrictions                                |
          | ----------------- | ------------------------------------------- |
          | id                |                                             |
          | version           |                                             |
          | upload            |                                             |
          | phase             |                                             |
          | percent           |                                             |
          | loc               |                                             |
          | codeStored        |                                             |
          | uploadRemoved     |                                             |
          | createdBy         |                                             |
          | profile           |                                             |
          | parent            |                                             |
          | startedAt         |                                             |
          | finishedAt        |                                             |
          | analysisDepth     |                                             |
          | application       |                                             |
          | path              | - Not available in cloud unless ROLE_WORKER |
          | applicationName   |                                             |
          | organization      | - Requires ROLE_ADMIN or ROLE_SUPPORT       |
          | organizationName  | - Requires ROLE_ADMIN or ROLE_SUPPORT       |
          | createdByEmail    | - Requires ROLE_ADMIN or ROLE_SUPPORT       |
          | comment           |                                             |
          | server            | - Requires ROLE_WORKER or ROLE_ADMIN        |
      operationId: getApplicationsScansAll
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan'

  /applications/{applicationId}/scans:
    get:
      description: |
        Get all scans of one application

        #### Available Filters
          | Column        | Restrictions                         |
          | ------------- | ------------------------------------ |
          | id            |                                      |
          | version       |                                      |
          | upload        |                                      |
          | phase         |                                      |
          | percent       |                                      |
          | loc           |                                      |
          | codeStored    |                                      |
          | uploadRemoved |                                      |
          | createdBy     |                                      |
          | profile       |                                      |
          | parent        |                                      |
          | startedAt     |                                      |
          | finishedAt    |                                      |
          | analysisDepth |                                      |
          | application   |                                      |
          | path          | - Not available in cloud             |
          | comment       |                                      |
          | server        | - Requires ROLE_WORKER or ROLE_ADMIN |
      operationId: getApplicationScans
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all scans of one application

        #### Available Filters
          | Column        | Restrictions                         |
          | ------------- | ------------------------------------ |
          | id            |                                      |
          | version       |                                      |
          | upload        |                                      |
          | phase         |                                      |
          | percent       |                                      |
          | loc           |                                      |
          | codeStored    |                                      |
          | uploadRemoved |                                      |
          | createdBy     |                                      |
          | profile       |                                      |
          | parent        |                                      |
          | startedAt     |                                      |
          | finishedAt    |                                      |
          | analysisDepth |                          |
          | application   |                                      |
          | path          | - Not available in cloud             |
          | comment       |                                      |
          | server        | - Requires ROLE_WORKER or ROLE_ADMIN |
      operationId: deleteMultipleApplicationScans
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        400:
          description: Invalid input
        403:
          description: Missing permissions
    post:
      description: |
        Add a new scan to application
      operationId: postApplicationScan
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan
          in: body
          required: true
          schema:
            type: object
            properties:
              scan:
                $ref: '#/definitions/Post.Sub.Application.Scan'
              tags:
                type: array
                items:
                  type: string
              php:
                $ref: '#/definitions/Post.Sub.Application.Scan.Php'
              java:
                $ref: '#/definitions/Post.Sub.Application.Scan.Java'
              libraries:
                type: array
                items:
                  $ref: '#/definitions/Post.Sub.Application.Scan.Library'
            required:
              - scan
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}:
    get:
      description: |
        Get a specific scan
      operationId: getApplicationScan
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific scan
      operationId: deleteApplicationScan
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing scan
      operationId: patchApplicationScan
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: patch.Application.Scan
          in: body
          required: true
          schema:
            type: object
            properties:
              scan:
                $ref: '#/definitions/Patch.Sub.Application.Scan'
              digest:
                $ref: '#/definitions/Patch.Sub.Application.Scan.Digest'
              tags:
                type: array
                items:
                  type: string
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/classes/batches:
    post:
      description: |
        Add a new class
      operationId: postApplicationScanClassesBatches
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Classes
          in: body
          required: true
          schema:
            type: object
            properties:
              classes:
                $ref: '#/definitions/Post.Sub.Application.Scan.Classes'
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Class'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/classes:
    get:
      description: |
        Get all classes of one scan

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | startLine   |              |
          | endLine     |              |
          | startColumn |              |
          | endColumn   |              |
          | name        |              |
          | package     |              |
          | file        |              |
      operationId: getApplicationScanClasses
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Class'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/classes/{classId}:
    get:
      description: |
        Get a specific class
      operationId: getApplicationScanClass
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: classId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Class'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/functions/batches:
    post:
      description: |
        Add a new function
      operationId: postApplicationScanFunctionsBatches
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Functions
          in: body
          required: true
          schema:
            type: object
            properties:
              functions:
                $ref: '#/definitions/Post.Sub.Application.Scan.Functions'
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Function'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/functions:
    get:
      description: |
        Get all functions of one scan

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | startLine   |              |
          | endLine     |              |
          | startColumn |              |
          | endColumn   |              |
          | name        |              |
          | file        |              |
          | class       |              |
      operationId: getApplicationScanFunctions
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Function'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/functions/{functionId}:
    get:
      description: |
        Get a specific function
      operationId: getApplicationScanFunction
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: functionId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Function'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/concats:
    get:
      description: |
        Get all concats of one scan

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | line     |              |
          | file     |              |
          | function |              |
          | class    |              |
      operationId: getApplicationScanConcats
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Concat'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/concats/{concatId}:
    get:
      description: |
        Get a specific concat
      operationId: getApplicationScanConcat
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: concatId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Concat'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/entrypoints:
    get:
      description: |
        Get all entrypoints of one scan

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | line     |              |
          | file     |              |
          | function |              |
          | class    |              |
      operationId: getApplicationScanEntrypoints
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Entrypoint'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/entrypoints/{entrypointId}:
    get:
      description: |
        Get a specific entrypoint
      operationId: getApplicationScanEntrypoint
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: entrypointId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Entrypoint'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/filebrowser:
    get:
      description: |
        Get files of one scan, limited by path provided

      operationId: getApplicationScanFilebrowser
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: path
          in: query
          required: true
          type: string
          description: The path that should be retrieved. Must have the first and last slashes ("/")
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                loc:
                  type: integer
                  format: int32
                path:
                  type: string
                type:
                  type: string
                  enum:
                    - file
                    - folder
        403:
          description: Missing permissions
        404:
          description: Path not found

  /applications/{applicationId}/scans/{scanId}/files:
    get:
      description: |
        Get all files of one scan

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | loc     |              |
          | path    |              |
          | scanned |              |
      operationId: getApplicationScanFiles
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.File'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete the source code of one scan
      operationId: deleteMultipleApplicationScanFiles
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/files/{fileId}:
    get:
      description: |
        Get a specific file
      operationId: getApplicationScanFile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: fileId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.File'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/sinks:
    get:
      description: |
        Get all sinks of one scan

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | name     |              |
          | line     |              |
          | file     |              |
          | function |              |
          | class    |              |
      operationId: getApplicationScanSinks
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Sink'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/sinks/{sinkId}:
    get:
      description: |
        Get a specific sink
      operationId: getApplicationScanSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: sinkId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Sink'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/sources:
    get:
      description: |
        Get all sources of one scan

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | name      |              |
          | line      |              |
          | parameter |              |
          | file      |              |
          | function  |              |
          | class     |              |
      operationId: getApplicationScanSources
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Source'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/sources/{sourceId}:
    get:
      description: |
        Get a specific source
      operationId: getApplicationScanSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: sourceId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Source'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/pitfalls:
    get:
      description: |
        Get all pitfalls of one scan

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | line     |              |
          | file     |              |
          | function |              |
          | class    |              |
      operationId: getApplicationScanPitfalls
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Pitfall'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/pitfalls/{pitfallId}:
    get:
      description: |
        Get a specific pitfall
      operationId: getApplicationScanPitfall
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: pitfallId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Pitfall'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/processes:
    get:
      description: |
        Get all processes of one scan

        #### Available Filters
          | Column     | Restrictions |
          | -------    | ------------ |
          | id         |              |
          | pid        |              |
          | startedAt  |              |
          | finishedAt |              |
          | version    |              |
          | memory     |              |
          | phase      |              |
          | percent    |              |
          | weight     |              |
      operationId: getApplicationScanProcesses
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Process'
        403:
          description: Missing permissions
    post:
      description: |
        Add a new process to scan
      operationId: postApplicationScanProcess
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Process
          in: body
          required: true
          schema:
            type: object
            properties:
              process:
                $ref: '#/definitions/Post.Sub.Application.Scan.Process'
            required:
              - process
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Process'
        400:
          description: Invalid input
        403:
          description: Missing permissions
    delete:
      description: |
        Kill all processes of one scan

      operationId: deleteApplicationScanProcesses
      security:
        -   email: []
            password: []
        -   oauth2: []
      parameters:
        -   name: applicationId
            in: path
            required: true
            type: integer
        -   name: scanId
            in: path
            required: true
            type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Scan not found

  /applications/{applicationId}/scans/{scanId}/processes/{processId}:
    get:
      description: |
        Get a specific process
      operationId: getApplicationScanProcess
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: processId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Process'
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing scan
      operationId: patchApplicationScanProcess
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: processId
          in: path
          required: true
          type: integer
        - name: patch.Application.Scan.Process
          in: body
          required: true
          schema:
            type: object
            properties:
              process:
                $ref: '#/definitions/Patch.Sub.Application.Scan.Process'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Process'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/libraries:
    get:
      description: |
        Get all libraries of one scan

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | name    |              |
          | version |              |
      operationId: getApplicationScanLibraries
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Library'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all libraries of one scan

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | name    |              |
          | version |              |
      operationId: deleteMultipleApplicationScanLibraries
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new library to scan
      operationId: postApplicationScanLibrary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Library
          in: body
          required: true
          schema:
            type: object
            properties:
              library:
                $ref: '#/definitions/Post.Sub.Application.Scan.Library'
            required:
              - process
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Library'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/libraries/{libraryId}:
    get:
      description: |
        Get a specific library
      operationId: getApplicationScanLibrary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: libraryId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Library'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific library
      operationId: deleteApplicationScanLibrary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: libraryId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing library
      operationId: patchApplicationScanLibrary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: libraryId
          in: path
          required: true
          type: integer
        - name: patch.Application.Scan.Library
          in: body
          required: true
          schema:
            type: object
            properties:
              library:
                $ref: '#/definitions/Patch.Sub.Application.Scan.Library'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Library'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/stats:
    get:
      description: |
        Get statistics about all issues of the current scan

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | origin             |              |
          | depth              |              |
          | type               |              |
          | typeName           |              |
          | typeSeverity       |              |
          | typeCategory       |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | source             |              |
          | sink               |              |
          | concat             |              |
          | entrypoint         |              |
          | scan               |              |
          | parent             |              |
          | cve                |              |
          | hash               |              |
          | createdAt          |              |
          | commentsCount      |              |
          | patchesCount       |              |
      operationId: getApplicationScanIssuesStats
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Stats'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues:
    get:
      description: |
        Get all issues of one scan

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | origin             |              |
          | originName         |              |
          | depth              |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | concat             |              |
          | entrypoint         |              |
          | scan               |              |
          | parent             |              |
          | cve                |              |
          | hash               |              |
          | createdAt          |              |
          | sink               |              |
          | sinkName           |              |
          | sinkFilePath       |              |
          | source             |              |
          | sourceName         |              |
          | sourceParameter    |              |
          | type               |              |
          | typeSeverity       |              |
          | typeName           |              |
          | typeCategory       |              |
          | commentsCount      |              |
          | patchesCount       |              |
      operationId: getApplicationScanIssues
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: minimal
          in: query
          required: false
          type: boolean
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue'
        403:
          description: Missing permissions
    post:
      description: |
        Add a new issue and related data to scan
      operationId: postApplicationScanIssue
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Issue
          in: body
          required: true
          schema:
            type: object
            properties:
              issue:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue'
              source:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Source'
              sourceTaint:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Taint'
              sink:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Sink'
              sinkTaint:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Taint'
              concat:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Concat'
              concatTaint:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Taint'
              entrypoint:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Entrypoint'
              pitfalls:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Pitfalls'
              contexts:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Contexts'
              summaries:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Summaries'
            required:
              - issue
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}:
    get:
      description: |
        Get a specific issue
      operationId: getApplicationScanIssue
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: minimal
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/comments:
    get:
      description: |
        Get all comments of one issue

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | comment    |              |
          | createdAt  |              |
          | createdBy  |              |
          | source     |              |
      operationId: getApplicationScanIssueComments
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Comment'
        403:
          description: Missing permissions
    delete:
      description: |
        Delete all comments of one issue

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | comment    |              |
          | createdAt  |              |
          | createdBy  |              |
          | source     |              |
      operationId: deleteMultipleApplicationScanIssueComments
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
    post:
      description: |
        Add a new comment to issue
      operationId: postApplicationScanIssueComment
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Issue.Comment
          in: body
          required: true
          schema:
            type: object
            properties:
              comment:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Comment'
            required:
              - comment
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Comment'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        429:
          description: Too many create attempts

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/comments/{commentId}:
    get:
      description: |
        Get a specific comment
      operationId: getApplicationScanIssueComment
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: commentId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Comment'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific comment
      operationId: deleteApplicationScanIssueComment
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: commentId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/contexts:
    get:
      description: |
        Get all contexts of one issue

        #### Available Filters
          | Column  | Restrictions |
          | ------  | ------------ |
          | id      |              |
          | context |              |
      operationId: getApplicationScanIssueContexts
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Context'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/contexts/{contextId}:
    get:
      description: |
        Get a specific context
      operationId: getApplicationScanIssueContext
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: contextId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Context'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/contexts:
    get:
      description: |
        Get all contexts of one scan

        #### Available Filters
          | Column  | Restrictions |
          | ------  | ------------ |
          | id      |              |
          | context |              |
      operationId: getApplicationScanContexts
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Context'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/patches:
    get:
      description: |
        Get all patches of one scan

        #### Available Filters
          | Column  | Restrictions |
          | ------  | ------------ |
          | id      |              |
          | type    |              |
          | typeTag |              |
      operationId: getApplicationScanPatches
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Patch'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/summaries:
    get:
      description: |
        Get all summaries of one scan

        #### Available Filters
          | Column  | Restrictions |
          | ------  | ------------ |
          | id      |              |
          | line    |              |
          | content |              |
          | file    |              |
      operationId: getApplicationScanSummaries
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Summary'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/reviews/batches:
    post:
      description: |
        Add a new review to all issues
      operationId: postApplicationScanIssueReviewBatch
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Issue.Review
          in: body
          required: true
          schema:
            type: object
            properties:
              review:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Review'
            required:
              - review
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Review'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/reviews:
    get:
      description: |
        Get all reviews of one issue

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | createdAt |              |
          | type      |              |
          | createdBy |              |
          | source    |              |
      operationId: getApplicationScanIssueReviews
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Review'
        403:
          description: Missing permissions
    post:
      description: |
        Add a new review to issue
      operationId: postApplicationScanIssueReview
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: post.Application.Scan.Issue.Review
          in: body
          required: true
          schema:
            type: object
            properties:
              review:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Review'
            required:
              - review
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Review'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        429:
          description: Too many create attempts

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/reviews/{reviewId}:
    get:
      description: |
        Get a specific review
      operationId: getApplicationScanIssueReview
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: reviewId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Review'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/summaries:
    get:
      description: |
        Get all summaries of one issue

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | line    |              |
          | content |              |
          | file    |              |
      operationId: getApplicationScanIssueSummaries
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Summary'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/summaries/{summaryId}:
    get:
      description: |
        Get a specific summary
      operationId: getApplicationScanIssueSummary
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: issueId
          in: path
          required: true
          type: integer
        - name: summaryId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Summary'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/patches:
    get:
      description: |
        Get all patches of one issue

        #### Available Filters
          | Column  | Restrictions |
          | ------- | ------------ |
          | id      |              |
          | type    |              |
          | typeTag |              |
      operationId: getApplicationScanIssuePatches
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: applicationId
        in: path
        required: true
        type: integer
      - name: scanId
        in: path
        required: true
        type: integer
      - name: issueId
        in: path
        required: true
        type: integer
      - name: filter
        in: query
        type: string
        description: A JSON-encoded filter object (see 'Available Filters').
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Patch'
        403:
          description: Missing permissions
    post:
      description: |
        Add a new patch and related data to issue
      operationId: postApplicationScanIssuePatch
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: applicationId
        in: path
        required: true
        type: integer
      - name: scanId
        in: path
        required: true
        type: integer
      - name: issueId
        in: path
        required: true
        type: integer
      - name: post.Application.Scan.Issue
        in: body
        required: true
        schema:
          type: object
          properties:
            patch:
              $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Patch'
            modifications:
              type: array
              items:
                $ref: '#/definitions/Post.Sub.Application.Scan.Issue.Patch.Modification'
          required:
          - patch
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Patch'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/issues/{issueId}/patches/{patchId}:
    get:
      description: |
        Get a specific patch
      operationId: getApplicationScanIssuePatch
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: applicationId
        in: path
        required: true
        type: integer
      - name: scanId
        in: path
        required: true
        type: integer
      - name: issueId
        in: path
        required: true
        type: integer
      - name: patchId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Patch'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/scans/issues/types:
    get:
      description: |
        Get all issue types

        #### Available Filters
          | Column        | Restrictions |
          | ------------- | ------------ |
          | id            |              |
          | tag           |              |
          | description   |              |
          | name          |              |
          | markup        |              |
          | severity      |              |
          | effort        |              |
          | secondOrder   |              |
          | cwe           |              |
          | owasp2010     |              |
          | owasp2013     |              |
          | owasp2017     |              |
          | sans          |              |
          | pcidss        |              |
          | asvs301       |              |
          | asvs401       |              |
          | category      |              |
          | parent        |              |
          | inactive      |              |
          | language      |              |
          | languageName  |              |
      operationId: getApplicationsScansIssuesTypes
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Type'

  /applications/scans/issues/types/{typeId}:
    get:
      description: |
        Get a specific issue type
      operationId: getApplicationsScansIssuesType
      parameters:
        - name: typeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Type'
        404:
          description: Not found

  /applications/scans/issues/types/patches:
    get:
      description: |
        Get all issue type patches

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | language |              |
          | type     |              |
      operationId: getApplicationsScansIssuesTypesPatches
      parameters:
      - name: filter
        in: query
        type: string
        description: A JSON-encoded filter object (see 'Available Filters').
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Type.Patch'

  /applications/scans/issues/types/patches/{patchId}:
    get:
      description: |
        Get a specific issue type patch
      operationId: getApplicationsScansIssuesTypesPatch
      parameters:
      - name: patchId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Type.Patch'
        404:
          description: Not found

  /applications/scans/issues/origins/types:
    get:
      description: |
        Get all origin types

        #### Available Filters
          | Column | Restrictions |
          | ------ | ------------ |
          | id     |              |
          | tag    |              |
          | name   |              |
      operationId: getApplicationsScansOriginsTypes
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Origin.Type'

  /applications/scans/issues/origins/types/{typeId}:
    get:
      description: |
        Get a specific origin type
      operationId: getApplicationsScansOriginsType
      parameters:
      - name: typeId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Origin.Type'
        404:
          description: Not found

  /applications/scans/properties/types:
    get:
      description: |
        Get all property types

        #### Available Filters
          | Column | Restrictions |
          | ------ | ------------ |
          | id     |              |
          | tag    |              |
          | name   |              |
      operationId: getApplicationsScansPropertiesTypes
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Property.Type'

  /applications/scans/properties/{typeId}:
    get:
      description: |
        Get a specific property type
      operationId: getApplicationsScansPropertiesType
      parameters:
        - name: typeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Property.Type'
        404:
          description: Not found

  /applications/scans/issues/reviews/types:
    get:
      description: |
        Get all review types

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | tag      |              |
          | name     |              |
          | negative |              |
      operationId: getApplicationsScansIssuesReviewsTypes
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Review.Type'

  /applications/scans/issues/reviews/types/{typeId}:
    get:
      description: |
        Get a specific review type
      operationId: getApplicationsScansIssuesReviewsType
      parameters:
        - name: typeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Review.Type'
        404:
          description: Not found

  /applications/scans/issues/patches/types:
    get:
      description: |
        Get all patch types

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | tag      |              |
          | name     |              |
      operationId: getApplicationsScansIssuesPatchesTypes
      parameters:
      - name: filter
        in: query
        type: string
        description: A JSON-encoded filter object (see 'Available Filters').
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Patch.Type'

  /applications/scans/issues/patches/types/{typeId}:
    get:
      description: |
        Get a specific review type
      operationId: getApplicationsScansIssuesPatchesType
      parameters:
      - name: typeId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Issue.Patch.Type'
        404:
          description: Not found


  /applications/scans/pitfalls/types:
    get:
      description: |
        Get all pitfall types

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | tag      |              |
          | name     |              |
      operationId: getApplicationsScansPitfallTypes
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Pitfall.Type'

  /applications/scans/pitfalls/types/{typeId}:
    get:
      description: |
        Get a specific pitfall type
      operationId: getApplicationsScansPitfallsType
      parameters:
        - name: typeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Pitfall.Type'
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/exports/csvs:
    get:
      description: |
        Get scan information as csv

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | origin             |              |
          | originName         |              |
          | depth              |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | concat             |              |
          | entrypoint         |              |
          | scan               |              |
          | parent             |              |
          | cve                |              |
          | sink               |              |
          | sinkName           |              |
          | sinkFilePath       |              |
          | source             |              |
          | sourceName         |              |
          | sourceParameter    |              |
          | type               |              |
          | typeSeverity       |              |
          | typeName           |              |
          | typeCategory       |              |
      operationId: getApplicationScanExportsCsvs
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: fields
          in: query
          type: string
          description: An array of fields. Key is the field name and value is the column title.
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      produces:
        - text/csv
      responses:
        200:
          description: Successful
          schema:
            type: file
        403:
          description: Missing permissions
        423:
          description: Another export is currently running

  /applications/{applicationId}/scans/{scanId}/exports/pdfs:
    get:
      description: |
        Get scan information as pdf

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | origin             |              |
          | originName         |              |
          | depth              |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | concat             |              |
          | entrypoint         |              |
          | scan               |              |
          | parent             |              |
          | cve                |              |
          | sink               |              |
          | sinkName           |              |
          | sinkFilePath       |              |
          | source             |              |
          | sourceName         |              |
          | sourceParameter    |              |
          | type               |              |
          | typeSeverity       |              |
          | typeName           |              |
          | typeCategory       |              |
      operationId: getApplicationScanExportPdfs
      security:
        - email: []
          password: []
        - oauth2: []
      produces:
        - application/pdf
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: pdf[projectName]
          in: query
          required: false
          type: string
        - name: pdf[chapterSummary]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[issueBreakdown]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[issueDetails]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[codeSummary]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[context]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[vulnerabilityDescription]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[comments]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[patches]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[maxIssuesPerType]
          in: query
          required: false
          type: integer
          default: 500
        - name: pdf[profile]
          in: query
          required: false
          type: string
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: file
        403:
          description: Missing permissions
        423:
          description: Another export is currently running

  /applications/{applicationId}/scans/{scanId}/exports/pdfs/queues:
    post:
      description: |
        Create a pdf asynchronous

        #### Available Filters
          | Column             | Restrictions |
          | ------------------ | ------------ |
          | id                 |              |
          | origin             |              |
          | originName         |              |
          | depth              |              |
          | lastReview         |              |
          | lastReviewType     |              |
          | reviewed           |              |
          | negativelyReviewed |              |
          | concat             |              |
          | entrypoint         |              |
          | scan               |              |
          | parent             |              |
          | cve                |              |
          | sink               |              |
          | sinkName           |              |
          | sinkFilePath       |              |
          | source             |              |
          | sourceName         |              |
          | sourceParameter    |              |
          | type               |              |
          | typeSeverity       |              |
          | typeName           |              |
          | typeCategory       |              |
      operationId: postApplicationScanExportPdfQueue
      security:
        - email: []
          password: []
        - oauth2: []
      produces:
        - application/pdf
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: pdf[projectName]
          in: query
          required: false
          type: string
        - name: pdf[chapterSummary]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[issueBreakdown]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[issueDetails]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[codeSummary]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[context]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[vulnerabilityDescription]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[comments]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[patches]
          in: query
          required: false
          type: boolean
          default: true
        - name: pdf[maxIssuesPerType]
          in: query
          required: false
          type: integer
          default: 500
        - name: pdf[profile]
          in: query
          required: false
          type: string
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Export.Pdf.Queue'
        403:
          description: Missing permissions

  /applications/{applicationId}/scans/{scanId}/exports/pdfs/queues/{queueId}:
    get:
      description: |
        Get information about queued pdf

      operationId: getApplicationScanExportPdfQueue
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: queueId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Scan.Export.Pdf.Queue'
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/scans/{scanId}/exports/pdfs/queues/{queueId}/downloads:
    get:
      description: |
        Download queued pdf

      operationId: getApplicationScanExportPdfQueueDownload
      security:
        - email: []
          password: []
        - oauth2: []
      produces:
        - application/pdf
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: scanId
          in: path
          required: true
          type: integer
        - name: queueId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            type: file
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/profiles/all:
    get:
      description: |
        Get all profiles

        #### Available Filters
          | Column      | Restrictions |
          | ------      | ------------ |
          | id          |              |
          | name        |              |
          | default     |              |
          | application |              |
          | language    |              |
      operationId: getAllApplicationScanProfiles
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile'

  /applications/{applicationId}/profiles:
    get:
      description: |
        Get all profiles for the current application

        #### Available Filters
          | Column   | Restrictions |
          | ------   | ------------ |
          | id       |              |
          | name     |              |
          | default  |              |
          | language |              |
      operationId: getApplicationScanProfiles
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to get application independent profiles.
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile'
    delete:
      description: |
        Delete all profiles for the current application

        #### Available Filters
          | Column   | Restrictions |
          | ------   | ------------ |
          | id       |              |
          | name     |              |
          | default  |              |
          | language |              |
      operationId: deleteMultipleApplicationScanProfiles
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to delete application independent profiles.
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new profile
      operationId: postApplicationScanProfile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to create application independent profile.
        - name: post.Application.Profile
          in: body
          required: true
          schema:
            type: object
            properties:
              profile:
                $ref: '#/definitions/Post.Sub.Application.Profile'
            required:
              - profile
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/clone:
      post:
        description: |
          Clone an existing profile
        operationId: postApplicationScanProfileClone
        security:
          - email: []
            password: []
          - oauth2: []
        parameters:
          - name: applicationId
            in: path
            required: true
            type: integer
            description: Set to 0 to create application independent profile.
          - name: profileId
            in: path
            required: true
            type: integer
            description: The id of the profile that should be cloned.
          - name: Post.Application.Profile.Clone
            in: body
            required: true
            schema:
              type: object
              properties:
                profile:
                  $ref: '#/definitions/Post.Sub.Application.Profile.Clone'
        responses:
          200:
            description: Successful
            schema:
              $ref: '#/definitions/Application.Profile'
          400:
            description: Invalid input
          403:
            description: Missing permissions

  /applications/{applicationId}/profiles/globals:
    get:
      description: |
        Get all profiles for the current application and all global profiles

        #### Available Filters
          | Column      | Restrictions |
          | ----------- | ------------ |
          | id          |              |
          | name        |              |
          | default     |              |
          | application |              |
          | language    |              |
      operationId: getApplicationScanProfilesGlobals
      security:
        - email: []
          password: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile'

  /applications/{applicationId}/profiles/{profileId}:
    get:
      description: |
        Get a specific profile
      operationId: getApplicationScanProfile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to get application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific profile
      operationId: deleteApplicationScanProfile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to delete application independent profiles.
        - name: profileId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing profile
      operationId: patchApplicationScanProfile
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to update application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile
          in: body
          required: true
          schema:
            type: object
            properties:
              profile:
                $ref: '#/definitions/Patch.Sub.Application.Profile'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/settings:
    get:
      description: |
        Get settings
      operationId: getApplicationScanProfileSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Setting'
        403:
          description: Missing permissions
        404:
          description: Not found
    put:
      description: |
        Add or update settings
      operationId: putApplicationScanProfileSetting
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Setting
          in: body
          required: true
          schema:
            type: object
            properties:
              setting:
                $ref: '#/definitions/Put.Sub.Application.Profile.Setting'
              php:
                $ref: '#/definitions/Post.Sub.Application.Scan.Php'
              java:
                $ref: '#/definitions/Post.Sub.Application.Scan.Java'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Setting'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/ignoredcodes:
    get:
      description: |
        Get all ignored codes for the current profile

        #### Available Filters
          | Column | Restrictions |
          | ------ | ------------ |
          | id     |              |
          | class  |              |
          | method |              |
          | type   |              |
      operationId: getApplicationScanProfileIgnoredCodes
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.IgnoredCode'
    delete:
      description: |
        Delete all ignored codes for the current profile

        #### Available Filters
          | Column | Restrictions |
          | ------ | ------------ |
          | id     |              |
          | class  |              |
          | method |              |
          | type   |              |
      operationId: deleteMultipleApplicationScanProfileIgnoredCodes
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new ignored code
      operationId: postApplicationScanProfileIgnoredCode
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.IgnoredCode
          in: body
          required: true
          schema:
            type: object
            properties:
              ignored_code:
                $ref: '#/definitions/Post.Sub.Application.Profile.IgnoredCode'
            required:
              - ignored_code
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredCode'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/ignoredcodes/{codeId}:
    get:
      description: |
        Get a specific ignored code
      operationId: getApplicationScanProfileIgnoredCode
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: codeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredCode'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific ignored code
      operationId: deleteApplicationScanProfileIgnoredCode
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: codeId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing ignored code
      operationId: patchApplicationScanProfileIgnoredCode
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: codeId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.IgnoredCode
          in: body
          required: true
          schema:
            type: object
            properties:
              ignored_code:
                $ref: '#/definitions/Patch.Sub.Application.Profile.IgnoredCode'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredCode'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/ignoredlocations:
    get:
      description: |
        Get all ignored locations for the current profile

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | path     |              |
          | match    |              |
          | exclude  |              |
      operationId: getApplicationScanProfileIgnoredLocations
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.IgnoredLocation'
    delete:
      description: |
        Delete all ignored locations for the current profile

        #### Available Filters
          | Column   | Restrictions |
          | -------- | ------------ |
          | id       |              |
          | path     |              |
          | match    |              |
          | exclude  |              |
      operationId: deleteMultipleApplicationScanProfileIgnoredLocations
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new ignored location
      operationId: postApplicationScanProfileIgnoredLocation
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.IgnoredLocation
          in: body
          required: true
          schema:
            type: object
            properties:
              ignored_location:
                $ref: '#/definitions/Post.Sub.Application.Profile.IgnoredLocation'
            required:
              - ignored_location
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredLocation'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/ignoredlocations/{locationId}:
    get:
      description: |
        Get a specific ignored location
      operationId: getApplicationScanProfileIgnoredLocation
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: locationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredLocation'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific ignored location
      operationId: deleteApplicationScanProfileIgnoredLocation
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: locationId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing ignored location
      operationId: patchApplicationScanProfileIgnoredLocation
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: locationId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.IgnoredLocation
          in: body
          required: true
          schema:
            type: object
            properties:
              ignored_location:
                $ref: '#/definitions/Patch.Sub.Application.Profile.IgnoredLocation'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.IgnoredLocation'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/sanitizers:
    get:
      description: |
        Get all sanitizers for the current profile

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | class      |              |
          | method     |              |
          | property   |              |
          | parameter  |              |
          | characters |              |
          | mode       |              |
      operationId: getApplicationScanProfileSanitizers
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Sanitizer'
    delete:
      description: |
        Delete all sanitizers for the current profile

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | class      |              |
          | method     |              |
          | property   |              |
          | parameter  |              |
          | characters |              |
          | mode       |              |
      operationId: deleteMultipleApplicationScanProfileSanitizers
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new sanitizer
      operationId: postApplicationScanProfileSanitizer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Sanitizer
          in: body
          required: true
          schema:
            type: object
            properties:
              sanitizer:
                $ref: '#/definitions/Post.Sub.Application.Profile.Sanitizer'
            required:
              - sanitizer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sanitizer'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/sanitizers/{sanitizerId}:
    get:
      description: |
        Get a specific sanitizer
      operationId: getApplicationScanProfileSanitizer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sanitizerId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sanitizer'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific sanitizer
      operationId: deleteApplicationScanProfileSanitizer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sanitizerId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing sanitizer
      operationId: patchApplicationScanProfileSanitizer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sanitizerId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Sanitizer
          in: body
          required: true
          schema:
            type: object
            properties:
              sanitizer:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Sanitizer'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sanitizer'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/sinks:
    get:
      description: |
        Get all sinks for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | property  |              |
          | parameter |              |
          | type      |              |
          | typeName  |              |
      operationId: getApplicationScanProfileSinks
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Sink'
    delete:
      description: |
        Delete all sinks for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | property  |              |
          | parameter |              |
          | type      |              |
          | typeName  |              |
      operationId: deleteMultipleApplicationScanProfileSinks
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new sink
      operationId: postApplicationScanProfileSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Sink
          in: body
          required: true
          schema:
            type: object
            properties:
              sink:
                $ref: '#/definitions/Post.Sub.Application.Profile.Sink'
            required:
              - sink
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sink'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/sinks/{sinkId}:
    get:
      description: |
        Get a specific sink
      operationId: getApplicationScanProfileSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sinkId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sink'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific sink
      operationId: deleteApplicationScanProfileSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sinkId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing sink
      operationId: patchApplicationScanProfileSink
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sinkId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Sink
          in: body
          required: true
          schema:
            type: object
            properties:
              sink:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Sink'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Sink'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/sources:
    get:
      description: |
        Get all sources for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | property  |              |
          | parameter |              |
          | type      |              |
      operationId: getApplicationScanProfileSources
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Source'
    delete:
      description: |
        Delete all sources for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | property  |              |
          | parameter |              |
          | type      |              |
      operationId: deleteMultipleApplicationScanProfileSources
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new source
      operationId: postApplicationScanProfileSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Source
          in: body
          required: true
          schema:
            type: object
            properties:
              source:
                $ref: '#/definitions/Post.Sub.Application.Profile.Source'
            required:
              - source
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Source'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/sources/{sourceId}:
    get:
      description: |
        Get a specific source
      operationId: getApplicationScanProfileSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sourceId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Source'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific source
      operationId: deleteApplicationScanProfileSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sourceId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing source
      operationId: patchApplicationScanProfileSource
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: sourceId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Source
          in: body
          required: true
          schema:
            type: object
            properties:
              source:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Source'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Source'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/controllers:
    get:
      description: |
        Get all controllers for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | parameter |              |
          | type      |              |
      operationId: getApplicationScanProfileControllers
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Controller'
    delete:
      description: |
        Delete all controllers for the current profile

        #### Available Filters
          | Column    | Restrictions |
          | --------- | ------------ |
          | id        |              |
          | class     |              |
          | method    |              |
          | parameter |              |
          | type      |              |
      operationId: deleteMultipleApplicationScanProfileControllers
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new controller
      operationId: postApplicationScanProfileController
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Controller
          in: body
          required: true
          schema:
            type: object
            properties:
              controller:
                $ref: '#/definitions/Post.Sub.Application.Profile.Controller'
            required:
              - controller
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Controller'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/controllers/{controllerId}:
    get:
      description: |
        Get a specific controller
      operationId: getApplicationScanProfileController
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: controllerId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Controller'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific controller
      operationId: deleteApplicationScanProfileController
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: controllerId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing controller
      operationId: patchApplicationScanProfileController
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: controllerId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Controller
          in: body
          required: true
          schema:
            type: object
            properties:
              controller:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Controller'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Controller'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /applications/{applicationId}/profiles/{profileId}/validators:
    get:
      description: |
        Get all validators for the current profile

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | class      |              |
          | method     |              |
          | parameter  |              |
          | characters |              |
          | behavior   |              |
          | mode       |              |
      operationId: getApplicationScanProfileValidators
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Application.Profile.Validator'
    delete:
      description: |
        Delete all validators for the current profile

        #### Available Filters
          | Column     | Restrictions |
          | ---------- | ------------ |
          | id         |              |
          | class      |              |
          | method     |              |
          | parameter  |              |
          | characters |              |
          | behavior   |              |
          | mode       |              |
      operationId: deleteMultipleApplicationScanProfileValidators
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
    post:
      description: |
        Add a new validator
      operationId: postApplicationScanProfileValidator
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: post.Application.Profile.Validator
          in: body
          required: true
          schema:
            type: object
            properties:
              validator:
                $ref: '#/definitions/Post.Sub.Application.Profile.Validator'
            required:
              - validator
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Validator'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /applications/{applicationId}/profiles/{profileId}/validators/{validatorId}:
    get:
      description: |
        Get a specific validator
      operationId: getApplicationScanProfileValidator
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: validatorId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Validator'
        403:
          description: Missing permissions
        404:
          description: Not found
    delete:
      description: |
        Delete a specific validator
      operationId: deleteApplicationScanProfileValidator
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: validatorId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing validator
      operationId: patchApplicationScanProfileValidator
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: applicationId
          in: path
          required: true
          type: integer
          description: Set to 0 to use application independent profile.
        - name: profileId
          in: path
          required: true
          type: integer
        - name: validatorId
          in: path
          required: true
          type: integer
        - name: patch.Application.Profile.Validator
          in: body
          required: true
          schema:
            type: object
            properties:
              validator:
                $ref: '#/definitions/Patch.Sub.Application.Profile.Validator'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Application.Profile.Validator'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /oauth/v2/global/clients:
    get:
      description: |
        Get all global client ids
      responses:
        200:
          description: Successful
          schema:
            type: object
            additionalProperties:
              type: string
            example:
              ui-client: 1_xxxxxxxxxxxxxxxxxxxxxxxxxxxxx

  /oauth/v2/clients:
    get:
      description: |
        Get all clients with permissions for current user
      operationId: getClients
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/OAuth2.Client'
        404:
          description: Not found
    post:
      description: |
        Create a new client for the current user
      operationId: postClients
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.Client
          in: body
          required: true
          schema:
            type: object
            properties:
              client:
                $ref: '#/definitions/Post.Sub.OAuth2.Client'
            required:
              - client
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/OAuth2.Client'
        400:
          description: Bad request

  /oauth/v2/clients/{clientId}:
    get:
      description: |
        Get all the client with the given id with permissions for the current user
      operationId: getClient
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: clientId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/OAuth2.Client'
    delete:
      description: |
        Delete the client with the given id with permissions for the current user
      operationId: deleteClient
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: clientId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
        404:
          description: Not found
    put:
      description: |
        Update the client with the given id with permissions for the current user
      operationId: putClient
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: clientId
          in: path
          required: true
          type: integer
        - name: put.Client
          in: body
          required: true
          schema:
            type: object
            properties:
              client:
                $ref: '#/definitions/Put.Sub.OAuth2.Client'
            required:
              - client
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/OAuth2.Client'
        400:
          description: Bad request

  /systems/health:
    get:
      description: |
        Get system health information
      operationId: getSystemHealth
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: object
            properties:
              state:
                type: string
                description: General system state, leveled at the worst module state.
                example: evaluated_warning
                enum:
                  - evaluated_ok
                  - evaluated_warning
                  - evaluated_critical
                  - not_evaluated_due_config
                  - not_evaluated_due_error
              messages:
                type: array
                description: Messages generated by health modules.
                items:
                  type: string
                  example:
                    - Security information reported evaluated_warning state
              modules:
                type: object
                properties:
                  systemDiskInformation:
                    type: object
                    description: System disk health information module.
                    properties:
                      state:
                        type: string
                        description: Health module state, based on the worst parameter output.
                        example: evaluated_ok
                        enum:
                          - evaluated_ok
                          - evaluated_warning
                          - evaluated_critical
                          - not_evaluated_due_config
                          - not_evaluated_due_error
                      messages:
                        type: array
                        description: Messages generated by this module.
                        items:
                          type: string
                      timestamp:
                        type: string
                        description: When the module was executed.
                        format: date-time
                      parameters:
                        type: object
                        description: Parameters used by module to evaluate state.
                        properties:
                          totalDiskBytesAvailable:
                            type: integer
                            format: int64
                            description: Total disk bytes available reported.
                            example: 500695072768
                          freeDiskBytesAvailable:
                            type: integer
                            format: int64
                            description: Free disk bytes available reported.
                            example: 397089906688
                          diskBytesUsage:
                            type: integer
                            format: int32
                            minimum: 0
                            maximum: 100
                            description: Disk bytes usage percent (half round up).
                            example: 17
                          totalDiskInodesAvailable:
                            type: integer
                            format: int64
                            description: Total disk inodes available reported.
                            example: 31121408
                          freeDiskInodesAvailable:
                            type: integer
                            format: int64
                            description: Free disk inodes available reported.
                            example: 1223512
                          diskInodesUsage:
                            type: integer
                            format: int32
                            minimum: 0
                            maximum: 100
                            description: Disk inodes usage percent (half round up).
                            example: 4
                  systemMemoryInformation:
                    type: object
                    description: System memory health information module.
                    properties:
                      state:
                        type: string
                        description: Health module state, based on the worst parameter output.
                        example: evaluated_ok
                        enum:
                          - evaluated_ok
                          - evaluated_warning
                          - evaluated_critical
                          - not_evaluated_due_config
                          - not_evaluated_due_error
                      messages:
                        type: array
                        description: Messages generated by this module.
                        items:
                          type: string
                      timestamp:
                        type: string
                        description: When the module was executed.
                        format: date-time
                      parameters:
                        type: object
                        description: Parameters used by module to evaluate state.
                        properties:
                          totalMemoryMegabytesAvailable:
                            type: integer
                            format: int64
                            description: Total system memory megabytes available.
                            example: 16571
                          availableMemoryMegabytesAvailable:
                            type: integer
                            format: int64
                            description: Available system memory megabytes available.
                            example: 10779
                          memoryUsagePercent:
                            type: integer
                            format: int32
                            minimum: 0
                            maximum: 100
                            description: System memory usage percent (half round up).
                            example: 53
                          totalSwapMegabytesAvailable:
                            type: integer
                            format: int64
                            description: Total system swap megabytes available.
                            example: 1027
                          freeSwapMegabytesAvailable:
                            type: integer
                            format: int64
                            description: Free system swap megabytes available.
                            example: 1027
                          swapUsagePercent:
                            type: integer
                            format: int32
                            minimum: 0
                            maximum: 100
                            description: System swap usage percent (half round up).
                            example: 0
                  databaseInformation:
                    type: object
                    description: Application database health information module.
                    properties:
                      state:
                        type: string
                        description: Health module state, based on the worst parameter output.
                        example: evaluated_ok
                        enum:
                          - evaluated_ok
                          - evaluated_warning
                          - evaluated_critical
                          - not_evaluated_due_config
                          - not_evaluated_due_error
                      messages:
                        type: array
                        description: Messages generated by this module.
                        items:
                          type: string
                      timestamp:
                        type: string
                        description: When the module was executed.
                        format: date-time
                      parameters:
                        type: object
                        description: Parameters used by module to evaluate state.
                        properties:
                          timeToQueryInSeconds:
                            type: number
                            format: float
                            description: Average time in seconds to execute a simple query.
                            example: 0.25081634521484375
                  ldapInformation:
                    type: object
                    description: Application configured ldap health information module.
                    properties:
                      state:
                        type: string
                        description: Health module state, based on the worst parameter output.
                        example: evaluated_ok
                        enum:
                          - evaluated_ok
                          - evaluated_warning
                          - evaluated_critical
                          - not_evaluated_due_config
                          - not_evaluated_due_error
                      messages:
                        type: array
                        description: Messages generated by this module.
                        items:
                          type: string
                      timestamp:
                        type: string
                        description: When the module was executed.
                        format: date-time
                      parameters:
                        type: object
                        description: Parameters used by module to evaluate state.
                        properties:
                          working:
                            type: boolean
                            description: True if Ldap is working, false if not.
                            example: true
                  productInformation:
                    type: object
                    description: Application internals health information module.
                    properties:
                      state:
                        type: string
                        description: Health module state, based on the worst parameter output.
                        example: evaluated_ok
                        enum:
                          - evaluated_ok
                          - evaluated_warning
                          - evaluated_critical
                          - not_evaluated_due_config
                          - not_evaluated_due_error
                      messages:
                        type: array
                        description: Messages generated by this module.
                        items:
                          type: string
                      timestamp:
                        type: string
                        description: When the module was executed.
                        format: date-time
                      parameters:
                        type: object
                        description: Parameters used by module to evaluate state.
                        properties:
                          queuedScans:
                            type: integer
                            format: int32
                            description: Scans quantity queued to be processed, limited to last week.
                            example: 0
                          abortedScans:
                            type: integer
                            format: int32
                            description: Scans quantity automatically aborted, limited to last week.
                            example: 0
                          unfinishedScans:
                            type: integer
                            format: int32
                            description: Scans quantity unfinished and not to be processed, limited to last week.
                            example: 0
                          validLicense:
                            type: integer
                            format: int32
                            description: Quantity of valid licenses.
                            example: 1
                          validQuotas:
                            type: integer
                            format: int32
                            description: Quantity of valid quotas.
                            example: 1
                  securityInformation:
                    type: object
                    description: Security concerning health information module.
                    properties:
                      state:
                        type: string
                        description: Health module state, based on the worst parameter output.
                        example: evaluated_ok
                        enum:
                          - evaluated_ok
                          - evaluated_warning
                          - evaluated_critical
                          - not_evaluated_due_config
                          - not_evaluated_due_error
                      messages:
                        type: array
                        description: Messages generated by this module.
                        items:
                          type: string
                      timestamp:
                        type: string
                        description: When the module was executed.
                        format: date-time
                      parameters:
                        type: object
                        description: Parameters used by module to evaluate state.
                        properties:
                          secureRequest:
                            type: boolean
                            description: True if API request was secure, false if not.
                            example: true
                  queueInformation:
                    type: object
                    description: System queue health information module.
                    properties:
                      state:
                        type: string
                        description: Health module state, based on the worst parameter output.
                        example: evaluated_ok
                        enum:
                          - evaluated_ok
                          - evaluated_warning
                          - evaluated_critical
                          - not_evaluated_due_config
                          - not_evaluated_due_error
                      messages:
                        type: array
                        description: Messages generated by this module.
                        items:
                          type: string
                      timestamp:
                        type: string
                        description: When the module was executed.
                        format: date-time
                      parameters:
                        type: object
                        description: Parameters used by module to evaluate state.
                        properties:
                          waitingAckMessagesCount:
                            type: integer
                            format: int32
                            description: Messages awaiting for acknoledgement quantity.
                            example: 0
                          activeConsumersCount:
                            type: integer
                            format: int32
                            description: Active consumers quantity.
                            example: 1
                          messagesVsConsumersRatio:
                            type: number
                            format: float
                            description: Messages awaiting versus active consumers ratio.
                            example: 0
                  storageInformation:
                    type: object
                    description: Server storage health information module.
                    properties:
                      state:
                        type: string
                        description: Health module state, based on the worst parameter output.
                        example: evaluated_ok
                        enum:
                          - evaluated_ok
                          - evaluated_warning
                          - evaluated_critical
                          - not_evaluated_due_config
                          - not_evaluated_due_error
                      messages:
                        type: array
                        description: Messages generated by this module.
                        items:
                          type: string
                      timestamp:
                        type: string
                        description: When the module was executed.
                        format: date-time
                      parameters:
                        type: object
                        description: Parameters used by module to evaluate state.
                        properties:
                          available:
                            type: boolean
                            description: True if storage is available, false if not.
                            example: true

        403:
          description: Forbidden

  /systems/emails:
    get:
      description: |
        Get e-mail configuration
      operationId: getSystemEmail
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/System.Email'
    put:
      description: |
        Update e-mail settings
      operationId: putSystemEmail
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: put.System.Email
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                $ref: '#/definitions/Put.Sub.System.Email'
            required:
              - ldap
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/System.Email'
        400:
          description: Bad request

  /systems/ldap:
    get:
      description: |
        Get LDAP configuration
      operationId: getSystemLdap
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/System.Ldap'
    put:
      description: |
        Update LDAP settings
      operationId: putSystemLdap
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: put.System.Ldap
          in: body
          required: true
          schema:
            type: object
            properties:
              ldap:
                $ref: '#/definitions/Put.Sub.System.Ldap'
            required:
              - ldap
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/System.Ldap'
        400:
          description: Bad request

  /systems/ldap/sync:
    post:
      description: |
        Synchronize local users with LDAP directory
      operationId: postSystemLdapSync
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful

  /servers:
    get:
      description: |
        Get all servers

        #### Available Filters
          | Column           | Restrictions |
          | ---------------- | ------------ |
          | id               |              |
          | name             |              |
          | internalAddress  |              |
          | externalAddress  |              |
          | type             |              |
          | startedAt        |              |
          | stoppedAt        |              |
          | memory           |              |
          | cores            |              |
          | lastSeenAt       |              |
      operationId: getServers
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
    post:
      description: |
        Add a new server
      operationId: postServer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: Post.Server
          in: body
          required: true
          schema:
            type: object
            properties:
              server:
                $ref: '#/definitions/Post.Sub.Server'
            required:
              - server
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Server'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /servers/{serverId}:
    get:
      description: |
        Get a specific server
      operationId: getServer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: serverId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Server'
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update an existing server
      operationId: patchServer
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: serverId
          in: path
          required: true
          type: integer
        - name: patch.Server
          in: body
          required: true
          schema:
            type: object
            properties:
              server:
                $ref: '#/definitions/Patch.Sub.Server'
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Server'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        404:
          description: Not found

  /servers/{serverId}/ping:
    patch:
      description: |
        Ping an existing server
      operationId: patchServerPing
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: serverId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Server'
        403:
          description: Missing permissions
        404:
          description: Not found

  /histories/scans/stats:
    get:
      description: |
        Get statistics from history scans

        #### Available Filters
          | Column                | Restrictions |
          | --------------------- | ------------ |
          | id                    |              |
          | startedAt             |              |
          | finishedAt            |              |
          | organizationName      |              |
          | organizationId        |              |
          | phase                 |              |
          | loc                   |              |
          | customProfile         |              |
          | files                 |              |
          | knownFunctions        |              |
          | knownClasses          |              |
          | unresolvedFunctions   |              |
          | unresolvedClasses     |              |
          | processTime           |              |
          | processMemory         |              |
          | queueTime             |              |
          | libraryName           |              |
          | libraryVersion        |              |
          | libraryType           |              |
          | libraryImplementation |              |
          | libraryGroup          |              |
          | issueTypeTag          |              |
          | issueQuantity         |              |
          | reviewTag             |              |
          | reviewQuantity        |              |
          | phpMajorVersion       |              |
          | phpMinorVersion       |              |
          | phpReleaseVersion     |              |
          | phpMagicQuotesGpc     |              |
          | phpRegisterGlobals    |              |
          | phpAllowUrlFopen      |              |
          | phpFrameworkHinting   |              |
          | phpAllowUrlInclude    |              |
          | phpFilterDefault      |              |
          | javaMajorVersion      |              |
          | javaMinorVersion      |              |
          | javaReleaseVersion    |              |
          | javaImplementation    |              |
      operationId: getHistoryScansStatistics
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/History.Scan.Statistics'
        403:
          description: Missing permissions

  /histories/scans:
    get:
      description: |
        Get all history scans

        #### Available Filters
          | Column                | Restrictions |
          | --------------------- | ------------ |
          | id                    |              |
          | startedAt             |              |
          | finishedAt            |              |
          | organizationName      |              |
          | organizationId        |              |
          | phase                 |              |
          | loc                   |              |
          | customProfile         |              |
          | files                 |              |
          | knownFunctions        |              |
          | knownClasses          |              |
          | unresolvedFunctions   |              |
          | unresolvedClasses     |              |
          | processTime           |              |
          | processMemory         |              |
          | queueTime             |              |
          | libraryName           |              |
          | libraryVersion        |              |
          | libraryType           |              |
          | libraryImplementation |              |
          | libraryGroup          |              |
          | issueTypeTag          |              |
          | issueQuantity         |              |
          | reviewTag             |              |
          | reviewQuantity        |              |
          | phpMajorVersion       |              |
          | phpMinorVersion       |              |
          | phpReleaseVersion     |              |
          | phpMagicQuotesGpc     |              |
          | phpRegisterGlobals    |              |
          | phpAllowUrlFopen      |              |
          | phpFrameworkHinting   |              |
          | phpAllowUrlInclude    |              |
          | phpFilterDefault      |              |
          | javaMajorVersion      |              |
          | javaMinorVersion      |              |
          | javaReleaseVersion    |              |
          | javaImplementation    |              |
      operationId: getHistoryScans
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/History.Scan'
        403:
          description: Missing permissions

  /histories/scans/{historyScanId}:
    get:
      description: |
        Get a specific history scan
      operationId: getHistoryScan
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: historyScanId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/History.Scan'
        403:
          description: Missing permissions
        404:
          description: Not found

  /mfas/secret:
    post:
      description: |
        Create MFA secret
      operationId: postMfaSecret
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User.Mfa'
        400:
          description: Invalid input
        403:
          description: Missing permissions
        429:
          description: Too many wrong codes

  /mfas/token:
    post:
      description: |
        Get the authentication token
      operationId: postMfaToken
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.User.Mfa.Challenge
          in: body
          required: true
          schema:
            type: object
            properties:
              challenge:
                $ref: '#/definitions/Post.Sub.User.Mfa.Challenge'
            required:
              - challenge
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/User.Mfa'
        400:
          description: Invalid input
        403:
          description: Missing permissions

  /mfas/delete:
    post:
      description: |
        Disable MFA for own user
      operationId: deleteMfa
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: post.User.Mfa.Challenge
          in: body
          required: true
          schema:
            type: object
            properties:
              challenge:
                $ref: '#/definitions/Post.Sub.User.Mfa.Challenge'
            required:
              - challenge
      responses:
        200:
          description: Successful
        400:
          description: Invalid input
        403:
          description: Missing permissions
        429:
          description: Too many wrong codes

  /notifications/types:
    get:
      description: |
        Get notifications types
      operationId: getNotificationTypes
      security:
        - email: []
          password: []
        - oauth2: []
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification.Type'
        401:
          description: Unauthorized

  /notifications/subscriptions:
    get:
      description: |
        Get notifications subscriptions

        #### Available Filters
          | Column                | Restrictions |
          | --------------------- | ------------ |
          | eventType             |              |
          | userId                |              |
          | createdAt             |              |
          | applicationId         |              |
          | scanId                |              |
          | byMail                |              |
          | byUserInterface       |              |
      operationId: getNotificationSubscriptions
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification.Subscription'
        401:
          description: Unauthorized
    post:
      description: |
        Create a notification subscription
      operationId: postNotificationSubscription
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: post.Notification.Subscription
        in: body
        required: true
        schema:
          type: object
          properties:
            subscription:
              $ref: '#/definitions/Post.Sub.Notification.Subscription'
          required:
            - subscription
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Notification.Subscription'
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Missing permissions

  /notifications/subscriptions/{subscriptionId}:
    get:
      description: |
        Get a specific notification subscription
      operationId: getNotificationSubscription
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: subscriptionId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Notification.Subscription'
        401:
          description: Unauthorized
        403:
          description: Missing permissions
        404:
          description: Not found
    patch:
      description: |
        Update a notification subscription
      operationId: patchNotificationSubscription
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: subscriptionId
        in: path
        required: true
        type: integer
      - name: patch.Notification.Subscription
        in: body
        required: true
        schema:
          type: object
          properties:
            subscription:
              $ref: '#/definitions/Patch.Sub.Notification.Subscription'
          required:
            - subscription
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Notification.Subscription'
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Missing permissions
    delete:
      description: |
        Delete a specific notification subscription
      operationId: deleteNotificationSubscription
      security:
      - email: []
        password: []
      - oauth2: []
      parameters:
      - name: subscriptionId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: Successful
        401:
          description: Unauthorized
        403:
          description: Missing permissions
        404:
          description: Not found

  /notifications/messages:
    get:
      description: |
        Get notifications messages

        #### Available Filters
          | Column                | Restrictions |
          | --------------------- | ------------ |
          | id                    |              |
          | eventType             |              |
          | userId                |              |
          | createdAt             |              |
          | fetchedAt             |              |
          | readAt                |              |
          | applicationId         |              |
          | scanId                |              |
      operationId: getNotificationMessages
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: filter
          in: query
          type: string
          description: A JSON-encoded filter object (see 'Available Filters').
        - name: orderBy
          in: query
          type: string
          description: A JSON-encoded orderBy object (see 'Available Filters').
        - name: select
          in: query
          type: string
          description: A JSON-encoded select object (see 'Available Filters').
        - name: limit
          in: query
          type: integer
          minimum: 0
          maximum: 500
          default: 500
          description: Limits the number of elements in the collection.
        - name: offset
          in: query
          type: integer
          minimum: 0
          default: 0
          description: Changes the offset in the collection.
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Notification.Message'
        401:
          description: Unauthorized

  /notifications/messages/{messageId}:
    patch:
      description: |
        Update a notification message (mark as read)
      operationId: patchNotificationMessage
      security:
        - email: []
          password: []
        - oauth2: []
      parameters:
        - name: messageId
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful
          schema:
            $ref: '#/definitions/Notification.Message'
        400:
          description: Invalid input
        401:
          description: Unauthorized
        403:
          description: Missing permissions

# DEFINITIONS
# ---------------------------------------------------------------------------
definitions:
  History.Scan.Statistics:
    type: object
    properties:
      scans_count:
        type: integer
        format: int32
      lowest_date:
        type: string
        format: date-time
      highest_date:
        type: string
        format: date-time
      organizations_count:
        type: integer
        format: int32
      applications_count:
        type: integer
        format: int32
      process_time_sum:
        type: integer
        format: int64
      process_time_avg:
        type: number
        format: float
      process_time_max:
        type: integer
        format: int32
      process_time_min:
        type: integer
        format: int32
      queue_time_sum:
        type: integer
        format: int64
      queue_time_avg:
        type: number
        format: float
      queue_time_max:
        type: integer
        format: int32
      queue_time_min:
        type: integer
        format: int32
      process_memory_sum:
        type: integer
        format: int64
      process_memory_avg:
        type: number
        format: float
      process_memory_max:
        type: integer
        format: int32
      process_memory_min:
        type: integer
        format: int32
      loc_sum:
        type: integer
        format: int64
      loc_avg:
        type: number
        format: float
      loc_max:
        type: integer
        format: int32
      loc_min:
        type: integer
        format: int32
      files_sum:
        type: integer
        format: int64
      files_avg:
        type: number
        format: float
      files_max:
        type: integer
        format: int32
      files_min:
        type: integer
        format: int32
      issues_sum:
        type: integer
        format: int64
      issues_avg:
        type: number
        format: float
      issues_max:
        type: integer
        format: int32
      issues_min:
        type: integer
        format: int32
      reviews_sum:
        type: integer
        format: int32
      libraries:
        type: array
        items:
          $ref: '#/definitions/History.Scan.Library'
      issue_types:
        type: array
        items:
          $ref: '#/definitions/History.Scan.Issue.Type'
      php:
        type: array
        items:
          $ref: '#/definitions/History.Scan.Php'
      java:
        type: array
        items:
          $ref: '#/definitions/History.Scan.Java'

  History.Scan:
    type: object
    properties:
      id:
        type: integer
        format: int64
      scan_id:
        type: integer
        format: int64
      organization_id:
        type: integer
        format: int64
      organization_name:
        type: string
        maxLength: 180
      application_id:
        type: integer
        format: int64
      started_at:
        type: string
        format: date-time
      finished_at:
        type: string
        format: date-time
      phase:
        type: integer
        format: int32
      loc:
        type: integer
        format: int32
      custom_profile:
        type: boolean
      files:
        type: integer
        format: int32
      known_functions:
        type: integer
        format: int32
      known_classes:
        type: integer
        format: int32
      unresolved_functions:
        type: integer
        format: int32
      unresolved_classes:
        type: integer
        format: int32
      process_time:
        type: integer
        format: int32
      process_memory:
        type: integer
        format: int32
      queue_time:
        type: integer
        format: int32
      libraries:
        type: array
        items:
          $ref: '#/definitions/History.Scan.Library'
      issue_types:
        type: array
        items:
          $ref: '#/definitions/History.Scan.Issue.Type'
      php:
        $ref: '#/definitions/History.Scan.Php'
      java:
        $ref: '#/definitions/History.Scan.Java'

  History.Scan.Library:
    type: object
    properties:
      name:
        type: string
        maxLength: 180
      version:
        type: string
        maxLength: 80
      type:
        type: string
        maxLength: 50
      implementation:
        type: string
        maxLength: 120
      group:
        type: string
        maxLength: 120

  History.Scan.Issue.Type:
    type: object
    properties:
      reviews:
        type: array
        items:
          $ref: '#/definitions/History.Scan.Issue.Review'
      quantity:
        type: integer
        format: int32
      tag:
        type: string
        maxLength: 50

  History.Scan.Php:
    type: object
    properties:
      major_version:
        type: string
        maxLength: 32
      minor_version:
        type: string
        maxLength: 32
      release_version:
        type: string
        maxLength: 32
      magic_quotes_gpc:
        type: boolean
      register_globals:
        type: boolean
      allow_url_fopen:
        type: boolean
      framework_hinting:
        type: boolean
      allow_url_include:
        type: boolean
      filter_default:
        type: string
        maxLength: 64

  History.Scan.Java:
    type: object
    properties:
      major_version:
        type: string
        maxLength: 32
      minor_version:
        type: string
        maxLength: 32
      release_version:
        type: string
        maxLength: 32
      implementation:
        type: string

  History.Scan.Issue.Review:
    type: object
    properties:
      quantity:
        type: integer
        format: int32
      tag:
        type: string
        maxLength: 50

  Census:
    type: object
    properties:
      scans:
        type: integer
        default: 0
        format: int64
        example: 10
      issues:
        type: integer
        format: int64
        default: 0
        example: 1000
      loc:
        type: integer
        format: int64
        default: 0
        example: 2500

  Status:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 5
          name:
            type: string
            maxLength: 180
          valid_until:
            type: string
            format: date-time
            example: "2017-02-16T11:52:25+0100"
          quotas:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
      version:
        type: string
        example: "2.0.0"
      cloud:
        type: boolean
        example: true
      capabilities:
        $ref: '#/definitions/Status.Capabilities'
      maintenance:
        type: boolean
        default: false
        example: true
      hardware_id:
        type: string
        example: "abcdefabcdefabcdefabcdefabcdefabcdef"
      census:
        $ref: '#/definitions/Census'
      users:
        type: object
        properties:
          max:
            type: integer
            format: int32
            example: 5
          enabled:
            type: integer
            format: int32
            example: 1
      trial_issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1

  Status.Capabilities:
    type: object
    properties:
      reset_password:
        type: boolean
      invite_user:
        type: boolean
      send_email:
        type: boolean
      ldap:
        type: boolean

  Language:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "PHP"
      file_extensions:
        type: array
        items:
          type: string
          example: "php"
      config_file_extensions:
        type: array
        items:
          type: string
          example: "yaml"

  License:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:25+0100"
      quota_distributed:
        type: boolean
        default: false
        example: false
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      parent:
        type: object
        properties:
          id:
            type: integer
            format: int64
      child:
        type: object
        properties:
          id:
            type: integer
            format: int64
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64

  Log:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      text:
        type: string
        example: "Yes"
      level:
        type: integer
        format: int32
        example: 400
      channel:
        type: string
        example: "request"
        maxLength: 20
      request_uri:
        type: string
        default: ""
        example: "/test"
      request_method:
        type: string
        default: ""
        example: "GET"
        maxLength: 20
      ip:
        type: string
        default: ""
        example: "8.8.8.8"
        maxLength: 100
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      email:
        type: string
        default: ""
        example: "foo@bar.com"
        maxLength: 180
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      organization_name:
        type: string
        default: ""
        example: "testorg"
        maxLength: 180
      context:
        type: string
        default: ""
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"
      user_agent:
        type: string
        example: "Mozilla"

  Activity:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      type:
        type: string
        maxLength: 100
        example: "create_comment"
      context:
        type: object
        properties:
          id:
            type: integer
            format: int64
          created_at:
            type: string
            format: date-time
          comment:
            type: string
          issue:
            type: object
            properties:
              id:
                type: integer
                format: int64
          scan:
            type: object
            properties:
              id:
                type: integer
                format: int64
              version:
                type: string
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 180
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          email:
            type: string
            format: email
            minLength: 3
            maxLength: 180
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"

  Setting:
    type: object
    properties:
      key:
        type: string
        maxLength: 180
        example: "ui.test"
      value:
        type: string
        maxLength: 1000000
        example: "zero"
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"

  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      email:
        type: string
        format: email
        example: "none@example.com"
        minLength: 3
        maxLength: 180
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      last_login:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      roles:
        type: array
        items:
          type: string
          example: "ROLE_CHIEF"
      confirmation_token:
        type: string
        maxLength: 180
      activation_token:
        type: string
        maxLength: 180
      reset_token:
        type: string
        maxLength: 180
      firstname:
        type: string
        default: ""
        example: "Hans"
        maxLength: 180
      lastname:
        type: string
        default: ""
        example: "Peter"
        maxLength: 180
      enabled:
        type: boolean
        example: true
      root:
        type: boolean
        default: false
        example: true
      whitelisted_ips:
        type: array
        items:
          type: string
          example: "127.0.0.*"
      email_confirmed:
        type: boolean
        default: true
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
      ldap:
        type: boolean
        default: false
      ldap_identifier:
        type: string
        maxLength: 180
      mfa:
        type: object
        properties:
          id:
            type: integer
            format: int64
          enabled:
            type: boolean
            default: false

  UserStatistics:
    type: object
    properties:
      scans:
        type: integer
        format: int32
      reviews:
        type: integer
        format: int32
      comments:
        type: integer
        format: int32
      reviews_tags:
        type: array
        items:
          type: object
          properties:
            tag:
              type: string
            reviews:
              type: integer
              format: int32

  User.Mfa:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          email:
            type: string
            format: email
            minLength: 3
            maxLength: 180
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:24:44+0100"
      enabled:
        type: boolean
        default: false
        example: false
      secret:
        type: string
        maxLength: 100
      label:
        type: string
        maxLength: 255
      issuer:
        type: string
        default: "RIPS"
        maxLength: 255
      token:
        type: string
        maxLength: 100

  Organization:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "Bobs"
        maxLength: 180
      quotas:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      valid_until:
        type: string
        format: date-time
        example: "2017-02-23T14:24:44+0100"
      trial_issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int32
              example: 1
      disabled:
        type: boolean
        default: false
        example: false
      concurrent_scans:
        type: integer
        format: int32
        example: 5

  Quota:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      current_application:
        type: integer
        format: int32
        default: 0
        example: 1
      current_scan:
        type: integer
        format: int32
        default: 0
        example: 2
      current_user:
        type: integer
        format: int32
        default: 0
        example: 3
      max_applications:
        type: integer
        format: int32
        example: 10
      max_scans:
        type: integer
        format: int32
        example: 20
      max_users:
        type: integer
        format: int32
        example: 5
      max_loc:
        type: integer
        format: int32
        example: 1000000
      server_limit:
        type: integer
        format: int32
        example: 2
        default: 0
      valid_from:
        type: string
        format: date-time
        example: "2017-02-16T01:52:25+0100"
      valid_until:
        type: string
        format: date-time
        example: "2017-02-16T21:52:25+0100"
      allowed_misses:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        example: 20
      public:
        type: boolean
        default: false
        example: false
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      notify:
        type: boolean
        default: false
        example: true
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      languages:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
            name:
              type: string
              example: "PHP"
      trial_issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int32
              example: 1
      issue_type_limit:
        type: integer
        format: int32
        minimum: 1
      update_only:
        type: boolean
        default: false
        example: false
      flexible_applications:
        type: boolean
        default: false
        example: true

  Quota.Acl:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      owner_user:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          email:
            type: string
            format: email
            minLength: 3
            maxLength: 180
      owner_team:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 180
      delete:
        type: boolean
        default: false
        example: true
      create:
        type: boolean
        default: false
        example: true
      view:
        type: boolean
        default: false
      edit:
        type: boolean
        default: false
        example: true
      use:
        type: boolean
        default: false
        example: true
      manage:
        type: boolean
        default: false
        example: true
      immutable:
        type: boolean
        default: false
        example: true
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      quota:
        type: object
        properties:
          id:
            type: integer
            format: int64

  Callback:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      internal:
        type: boolean
        default: false
      url:
        type: string
        example: "http://foo/bar"
      reports:
        type: array
        items:
          type: string
          enum:
            - UPDATE_USER
            - DELETE_USER
            - CREATE_SCAN
            - UPDATE_SCAN
            - FINISH_SCAN
            - CREATE_COMMENT
            - CREATE_REVIEW
            - DELETE_COMMENT
          example: "CREATE_COMMENT"
      applications:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      scans:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Team:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "Team A"
        maxLength: 180
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      users:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      current_scan:
        type: integer
        format: int32
        default: 0
        example: 3
      charged_quota:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          valid_until:
            type: string
            format: date-time
          languages:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
                name:
                  type: string
      created_at:
        type: string
        format: date-time
        example: "2017-02-23T14:23:44+0100"
      organization:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      auto_renew:
        type: boolean
        default: false
        example: true

  Application.Acl:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      owner_user:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          email:
            type: string
            format: email
            maxLength: 180
            minLength: 3
          roles:
            type: array
            items:
              type: string
              example: "ROLE_CHIEF"
      owner_team:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 180
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
      view:
        type: boolean
        default: false
        example: true
      delete:
        type: boolean
        default: false
        example: true
      create:
        type: boolean
        default: false
        example: true
      edit:
        type: boolean
        default: false
        example: true
      scan:
        type: boolean
        default: false
        example: true
      manage:
        type: boolean
        default: false
        example: true
      immutable:
        type: boolean
        default: false
        example: true
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Artifact:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      created_at:
        type: string
        format: date-time
        example: "2019-02-16T11:52:25+0100"
      name:
        type: string
        example: "test.zip"
        maxLength: 255
      path:
        type: string
        example: "s3://artifacts/abcdef0123456789"
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      scan:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Upload:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:25+0100"
      name:
        type: string
        example: "dvwa.zip"
        maxLength: 255
      file:
        type: string
        example: "1234567890abcdef.zip"
      extension:
        type: string
        example: "zip"
        maxLength: 255
      size:
        type: integer
        format: int64
        example: 400
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      loc:
        type: object
        additionalProperties:
          type: integer
          format: int64
      checksum:
        type: string
        maxLength: 64
        example: a94de6ff40b515e07196c177fb63325e7bf64b608d6c0d9eb5dff1e1299fbf62

  Application.Scan:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      version:
        type: string
        example: "1.2.3"
        maxLength: 180
      path:
        type: string
      started_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"
      finished_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:51+0100"
      phase:
        type: integer
        format: int32
        example: 0
        description: |
          | Value  | Description                      |
          | ------ | -----------                      |
          | 0      | Done                             |
          | 1      | Loading files                    |
          | 2      | Parsing code                     |
          | 3      | Scanning code                    |
          | 4      | Uncalled functions               |
          | 5      | Second-order vulnerabilities     |
          | 6      | Scan automatically aborted       |
          | 7      | Scan aborted by user             |
          | 10     | Scan in queue                    |
          | 11     | Finishing the scan               |
          | 12     | Preparing the scan for the queue |
      percent:
        type: integer
        format: int32
        example: 100
      loc:
        type: integer
        format: int32
        example: 1000
      code_stored:
        type: boolean
        default: true
        example: true
      upload_removed:
        type: boolean
        default: false
        example: false
      source_type:
        type: string
        example: "upload"
        default: "upload"
        enum:
          - upload
          - local_directory
      php:
        $ref: '#/definitions/Application.Scan.Php'
      java:
        $ref: '#/definitions/Application.Scan.Java'
      processes:
        type: array
        items:
          $ref: '#/definitions/Application.Scan.Process'
      digest:
        $ref: '#/definitions/Application.Scan.Digest'
      upload:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 255
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 180
      profile:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 180
          application:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              name:
                type: string
                maxLength: 180
      issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int32
              example: 1
      parent:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          version:
            type: string
            maxLength: 180
      severity_distributions:
        type: object
        properties:
          client_vulnerability:
            type: object
            properties:
              low:
                type: integer
                format: int32
              medium:
                type: integer
                format: int32
              high:
                type: integer
                format: int32
              critical:
                type: integer
                format: int32
          server_vulnerability:
            type: object
            properties:
              low:
                type: integer
                format: int32
              medium:
                type: integer
                format: int32
              high:
                type: integer
                format: int32
              critical:
                type: integer
                format: int32
          code_quality:
            type: object
            properties:
              low:
                type: integer
                format: int32
              medium:
                type: integer
                format: int32
              high:
                type: integer
                format: int32
              critical:
                type: integer
                format: int32
          misconfiguration:
            type: object
            properties:
              low:
                type: integer
                format: int32
              medium:
                type: integer
                format: int32
              high:
                type: integer
                format: int32
              critical:
                type: integer
                format: int32
          new:
            type: object
            properties:
              low:
                type: integer
                format: int32
              medium:
                type: integer
                format: int32
              high:
                type: integer
                format: int32
              critical:
                type: integer
                format: int32
          total:
            type: object
            properties:
              low:
                type: integer
                format: int32
              medium:
                type: integer
                format: int32
              high:
                type: integer
                format: int32
              critical:
                type: integer
                format: int32
      analysis_depth:
        type: integer
        format: int32
        default: 5
        example: 5
        minimum: 1
        maximum: 5
      tags:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
            name:
              type: string
              maxLength: 255
      max_issues_per_type:
        type: integer
        format: int32
        example: 100
      libraries:
        type: array
        items:
          $ref: '#/definitions/Application.Scan.Library'
      languages:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      comment:
        type: string
      source:
        type: string
        example: "bamboo"
        maxLength: 100
      server:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 180
      root_path:
        type: string
        default: ""
        example: "/var/www"
      root_file:
        type: string
        maxLength: 180
        example: "composer.json"

  Application.Scan.Php:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      major_version:
        type: string
        default: 5
        example: 5
        maxLength: 32
      minor_version:
        type: string
        default: 6
        example: 4
        maxLength: 32
      release_version:
        type: string
        default: "*"
        example: 22
        maxLength: 32
      magic_quotes_gpc:
        type: boolean
        default: false
        example: false
      register_globals:
        type: boolean
        default: false
        example: false
      allow_url_fopen:
        type: boolean
        default: true
        example: true
      framework_hinting:
        type: boolean
        default: true
        example: true
      allow_url_include:
        type: boolean
        default: false
        example: false
      filter_default:
        type: string
        default: unsafe_raw
        example: "unsafe_raw"
        enum:
          - unsafe_raw
          - magic_quotes
          - special_chars
      setting:
        type: object
        properties:
          id:
            type: integer
            format: int64
      second_orders:
        type: array
        items:
          type: string
          enum:
            - FILE
            - SQL
            - SESSION
            - TEMPLATE
            - POP
          default:
            - TEMPLATE

  Application.Scan.Java:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      major_version:
        type: string
        default: 8
        example: 8
        maxLength: 32
      minor_version:
        type: string
        default: "*"
        example: 0
        maxLength: 32
      release_version:
        type: string
        default: "*"
        example: 0
        maxLength: 32
      implementation:
        type: string
        default: ""
        maxLength: 255
      setting:
        type: object
        properties:
          id:
            type: integer
            format: int64
      update_database:
        type: string
        enum:
          - "NO"
          - "ONLINE"
          - "PROVIDED"
        default: "NO"
        maxLength: 50

  Application.Scan.Library:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "symfony"
        maxLength: 180
      version:
        type: string
        example: "2.6.3"
        maxLength: 80
      type:
        type: string
        example: "cms"
        maxLength: 50
      implementation:
        type: string
        maxLength: 120
      group:
        type: string
        maxLength: 120

  Application.Scan.Class:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 5
      start_column:
        type: integer
        format: int32
        example: 1
      end_column:
        type: integer
        format: int32
        example: 5
      name:
        type: string
        example: "Cat"
      package:
        type: string
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string

  Application.Scan.Function:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 5
      start_column:
        type: integer
        format: int32
        example: 1
      end_column:
        type: integer
        format: int32
        example: 5
      name:
        type: string
        example: "bark"
      parameters:
        type: array
        items:
          type: object
          properties:
            package:
              type: string
            name:
              type: string
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.Concat:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 5
      start_column:
        type: integer
        format: int32
        example: 7
      end_column:
        type: integer
        format: int32
        example: 10
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      taint:
        $ref: '#/definitions/Application.Scan.Taint'
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32

  Application.Scan.Entrypoint:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 5
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32

  Application.Scan.File:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      loc:
        type: integer
        format: int32
        example: 10
      path:
        type: string
        example: "index.php"
      code:
        type: string
        example: "<?php phpinfo();"

  Application.Scan.Taint:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 15
      start_column:
        type: integer
        format: int32
        example: 7
      end_column:
        type: integer
        format: int32
        example: 10

  Application.Scan.Sink:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 10
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 15
      start_column:
        type: integer
        format: int32
        example: 7
      end_column:
        type: integer
        format: int32
        example: 10
      name:
        type: string
        example: "Do"
        maxLength: 255
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
      taint:
        $ref: '#/definitions/Application.Scan.Taint'

  Application.Scan.Source:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 10
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 15
      start_column:
        type: integer
        format: int32
        example: 7
      end_column:
        type: integer
        format: int32
        example: 10
      name:
        type: string
        example: "Do"
        maxLength: 255
      parameter:
        type: string
        example: "odd"
        maxLength: 255
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
      taint:
        $ref: '#/definitions/Application.Scan.Taint'

  Application.Scan.Pitfall:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 10
      start_line:
        type: integer
        format: int32
        example: 1
      end_line:
        type: integer
        format: int32
        example: 15
      start_column:
        type: integer
        format: int32
        example: 7
      end_column:
        type: integer
        format: int32
        example: 10
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1

  Application.Scan.Process:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      pid:
        type: integer
        format: int32
        example: 10
      started_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      finished_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      finished:
        type: boolean
        default: false
        example: true
      memory:
        type: integer
        format: int64
        description: "Memory consumption in Kilobytes"
      phase:
        type: integer
        format: int32
        minimum: 0
        maximum: 11
        example: 0
        description: |
          | Value  | Description                      |
          | ------ | -----------                      |
          | 0      | Done                             |
          | 1      | Loading files                    |
          | 2      | Parsing code                     |
          | 3      | Scanning code                    |
          | 4      | Uncalled functions               |
          | 5      | Second-order vulnerabilities     |
          | 6      | Scan automatically aborted       |
          | 7      | Scan aborted by user             |
          | 10     | Scan in queue                    |
          | 11     | Finishing the scan               |
          | 12     | Preparing the scan for the queue |
      percent:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        example: 100
      original_percent:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        example: 100
      weight:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        example: 50
      version:
        type: string
        example: "2.0.0"
        maxLength: 50
      name:
        type: string
        example: "php-engine"
        maxLength: 50
        enum:
          - php-engine
          - java-engine
          - php-preparser
          - php-patchgen
          - java-patchgen
          - java-db-processing
          - java-db-preprocessing
          - java-db-postprocessing
      parent:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.Export.Pdf.Queue:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      started_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      finished_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"

  Application.Scan.Issue:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      origin:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
      depth:
        type: integer
        format: int32
        example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
      source:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 255
          parameter:
            type: string
            maxLength: 255
          start_line:
            type: integer
            format: int32
          end_line:
            type: integer
            format: int32
          start_column:
            type: integer
            format: int32
          end_column:
            type: integer
            format: int32
          class:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          function:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          file:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              path:
                type: string
          type:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 1
          taint:
            $ref: '#/definitions/Application.Scan.Taint'
      sink:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 255
          start_line:
            type: integer
            format: int32
          end_line:
            type: integer
            format: int32
          start_column:
            type: integer
            format: int32
          end_column:
            type: integer
            format: int32
          class:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          function:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          file:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              path:
                type: string
          type:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 1
          taint:
            $ref: '#/definitions/Application.Scan.Taint'
      concat:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          start_line:
            type: integer
            format: int32
          end_line:
            type: integer
            format: int32
          start_column:
            type: integer
            format: int32
          end_column:
            type: integer
            format: int32
          class:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          function:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          file:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              path:
                type: string
          taint:
            $ref: '#/definitions/Application.Scan.Taint'
      entrypoint:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          start_line:
            type: integer
            format: int32
          end_line:
            type: integer
            format: int32
          class:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          function:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
          file:
            type: object
            properties:
              id:
                type: integer
                format: int64
                example: 1
              path:
                type: string
      pitfalls:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
            start_line:
              type: integer
              format: int32
            end_line:
              type: integer
              format: int32
            start_column:
              type: integer
              format: int32
            end_column:
              type: integer
              format: int32
            class:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
            function:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
            file:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
                path:
                  type: string
            type:
              type: object
              properties:
                id:
                  type: integer
                  format: int32
                  example: 1
      readable:
        type: object
        properties:
          source:
            type: string
          concat:
            type: string
          sink:
            type: string
      parent:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      last_review:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          type:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 1
      reviewed:
        type: boolean
        default: false
        example: true
      negatively_reviewed:
        type: boolean
        default: false
        example: false
      effort:
        type: integer
        format: int32
        example: 30
      complete:
        type: boolean
        default: false
        example: true
      uuid:
        type: string
        maxLength: 32
      cve:
        type: string
        example: "CVE-2017-100025"
        maxLength: 50
      hash:
        type: string
        example: "d3b07384d113edec49eaa6238ad5ff00"
        maxLength: 32
      directly_called:
        type: boolean
        example: true
      register_globals:
        type: boolean
        example: false
      comments_count:
        type: integer
        format: int32
        default: 0
        example: 3
      patches_count:
        type: integer
        format: int32
        default: 0
        example: 1

  Application.Scan.Issue.Comment:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      comment:
        type: string
        example: "Yes"
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T17:05:25+0100"
      created_by:
        $ref: '#/definitions/User'
      issue:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          uuid:
            type: string
            maxLength: 32
      source:
        type: string
        example: "jira"
        maxLength: 60

  Application.Scan.Issue.Context:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      parts:
        type: array
        items:
          $ref: '#/definitions/Application.Scan.Issue.Context.Part'
      issue:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.Issue.Context.Part:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      type:
        type: string
        example: "TEXT"
        enum:
          - TEXT
          - INJECTION
          - INJECTION_SAFE
          - INJECTION_UNKNOWN
      content:
        type: string
        example: "foo"

  Application.Scan.Issue.Review:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      created_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      issue:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          uuid:
            type: string
            maxLength: 32
      source:
        type: string
        example: "jira"
        maxLength: 60

  Application.Scan.Issue.Summary:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      line:
        type: integer
        format: int32
        example: 102
      content:
        type: string
        example: "foo"
      highlighted_content:
        type: string
        example: "<span class=code-identifier>Foobar</span>"
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      function:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
          start_line:
            type: integer
            format: int32
            example: 1
          end_line:
            type: integer
            format: int32
            example: 10
      class:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
          start_line:
            type: integer
            format: int32
            example: 1
          end_line:
            type: integer
            format: int32
            example: 10
      issue:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.Issue.Patch:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
          name:
            type: string
            maxLength: 255
      modifications:
        type: array
        items:
          $ref: '#/definitions/Application.Scan.Issue.Patch.Modification'
      confidence:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
      issue:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Scan.Issue.Patch.Type:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      name:
        type: string
        example: "Foo"
        maxLength: 255
      tag:
        type: string
        example: "BAR"
        maxLength: 50

  Application.Scan.Issue.Patch.Modification:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      virtual_line:
        type: integer
        format: int32
        example: 5
      original_line:
        type: integer
        format: int32
        example: 10
      column_start:
        type: integer
        format: int32
        example: 13
      column_end:
        type: integer
        format: int32
        example: 15
      content:
        type: string
        example: "// Code"
      highlighted_content:
        type: string
        example: "<span>//</span> Code"
      original_content:
        type: string
      highlighted_original_content:
        type: string
      file:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          path:
            type: string
      whitespaces_only:
        type: boolean
        example: false

  Application.Scan.Issue.Type.Resource:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      title:
        type: string
      author:
        type: string
      url:
        type: string
      published_at:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      languages:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64

  Application.Scan.Issue.Type.Patch:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      description:
        type: string
      examples:
        type: array
        items:
          type: string
      language:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
      parent:
        $ref: '#/definitions/Application.Scan.Issue.Type.Patch'

  Application.Profile.Extension:
    type: object
    properties:
      id:
        type: integer
        format: int64
      extension:
        type: string
        maxLength: 180

  Application.Scan.Issue.Type:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      tag:
        type: string
        example: "XSS"
        maxLength: 50
      description:
        type: string
      name:
        type: string
        example: "Cross-Site Scripting"
        maxLength: 150
      markup:
        type: string
        example: "HTML"
        maxLength: 50
      severity:
        type: integer
        format: int32
        example: 30
      effort:
        type: integer
        format: int32
        example: 15
      second_order:
        type: boolean
        default: true
        example: true
      cwe:
        type: string
        example: "79"
        maxLength: 50
      owasp2010:
        type: string
        example: "A3"
        maxLength: 50
      owasp2013:
        type: string
        example: "A3"
        maxLength: 50
      owasp2017:
        type: string
        example: "A3"
        maxLength: 50
      sans:
        type: string
        example: "4"
        maxLength: 50
      pcidss:
        type: string
        example: "6.5.1"
        maxLength: 50
      asvs301:
        type: string
        example: "11.8"
        maxLength: 50
      asvs401:
        type: string
        example: "11.9"
        maxLength: 50
      category:
        type: string
        maxLength: 50
        example: "client_vulnerability"
        enum:
          - client_vulnerability
          - server_vulnerability
          - code_quality
          - misconfiguration
      resources:
        type: array
        items:
          $ref: '#/definitions/Application.Scan.Issue.Type.Resource'
      parent:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
          tag:
            type: string
            example: "XSS"
            maxLength: 50
          description:
            type: string
          name:
            type: string
            example: "Cross-Site Scripting"
            maxLength: 150
          markup:
            type: string
            example: "HTML"
            maxLength: 50
          severity:
            type: integer
            format: int32
            example: 30
          effort:
            type: integer
            format: int32
            example: 15
          second_order:
            type: boolean
            default: true
            example: true
          cwe:
            type: string
            example: "79"
            maxLength: 50
          owasp2010:
            type: string
            example: "A3"
            maxLength: 50
          owasp2013:
            type: string
            example: "A3"
            maxLength: 50
          owasp2017:
            type: string
            example: "A3"
            maxLength: 50
          sans:
            type: string
            example: "4"
            maxLength: 50
          pcidss:
            type: string
            example: "6.5.1"
            maxLength: 50
          asvs301:
            type: string
            example: "11.8"
            maxLength: 50
          asvs401:
            type: string
            example: "11.9"
            maxLength: 50
          category:
            type: string
            maxLength: 50
            example: "client_vulnerability"
            enum:
              - client_vulnerability
              - server_vulnerability
              - code_quality
              - misconfiguration
          resources:
            type: array
            items:
              $ref: '#/definitions/Application.Scan.Issue.Type.Resource'
          inactive:
            type: boolean
            default: false
            example: false
          languages:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
          enabled_for:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
      inactive:
        type: boolean
        default: false
        example: false
      languages:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      enabled_for:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1

  Application.Scan.Issue.Origin.Type:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      tag:
        type: string
        example: "DIRECT"
        maxLength: 50
      name:
        type: string
        example: "Direct"
        maxLength: 50

  Application.Scan.Property.Type:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      tag:
        type: string
        example: "PROPERTY"
        maxLength: 50
      name:
        type: string
        example: "property"
        maxLength: 50


  Application.Scan.Issue.Review.Type:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      tag:
        type: string
        example: "NOT_REVIEWED"
        maxLength: 50
      name:
        type: string
        example: "Not reviewed"
        maxLength: 50
      negative:
        type: boolean
        default: false
        example: false

  Application.Scan.Pitfall.Type:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      name:
        type: string
        example: "Foo"
        maxLength: 255
      tag:
        type: string
        example: "BAR"
        maxLength: 50
      description:
        type: string
        example: "This is a pitfall."

  Application.Profile:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      sources:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      controllers:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      sinks:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      validators:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      sanitizers:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      ignored_codes:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      ignored_locations:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      extensions:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int64
              example: 1
      setting:
        $ref: '#/definitions/Application.Profile.Setting'
      default:
        type: boolean
        default: false
        example: false
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            maxLength: 180
      created_at:
        type: string
        format: date-time
      created_by:
        type: object
        properties:
          id:
            type: integer
            format: int64
      language:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1

  Application.Profile.Setting:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      issue_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: int32
              example: 1
      code_stored:
        type: boolean
        default: true
        example: true
      upload_removed:
        type: boolean
        default: true
        example: false
      full_code_compared:
        type: boolean
        default: false
        example: false
      history_inherited:
        type: boolean
        default: true
        example: true
      analysis_depth:
        type: integer
        format: int32
        default: 5
        example: 5
        minimum: 1
        maximum: 5
      max_issues_per_type:
        type: integer
        format: int32
        example: 100
      root_file:
        type: string
        maxLength: 180
        example: "composer.json"
      php:
        $ref: '#/definitions/Application.Scan.Php'
      java:
        $ref: '#/definitions/Application.Scan.Java'

  Application.Profile.IgnoredCode:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      exclude:
        type: string
        enum:
          - CALL
          - RETURN

  Application.Profile.IgnoredLocation:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      path:
        type: string
      match:
        type: string
        enum:
          - PARTIAL
          - START
          - REGEX
      exclude:
        type: string
        enum:
          - SECURITY
          - QUALITY
          - MISCONFIGURATION
          - PATCH
          - ANALYSIS

  Application.Profile.Sanitizer:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      characters:
        type: string
        maxLength: 180
      issue_type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
      mode:
        type: string
        default: "LITERAL"
        example: "LITERAL"
        enum:
          - "LITERAL"

  Application.Profile.Sink:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1

  Application.Profile.Source:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      property:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      type:
        type: string
        maxLength: 180

  Application.Profile.Controller:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      type:
        type: string
        maxLength: 180

  Application.Profile.Validator:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      characters:
        type: string
        maxLength: 180
      issue_type:
        type: object
        properties:
          id:
            type: integer
            format: int32
            example: 1
      behavior:
        type: string
        default: "RETURN_FALSE"
        example: "EXIT"
        enum:
          - "RETURN_FALSE"
          - "RETURN_TRUE"
          - "EXIT"
      mode:
        type: string
        default: "LITERAL"
        example: "LITERAL"
        enum:
          - "LITERAL"

  Application.Scan.Digest:
    type: object
    properties:
      unresolved_functions:
        type: integer
        format: int32
        default: 0
      unresolved_classes:
        type: integer
        format: int32
        default: 0
      unresolved_methods:
        type: integer
        format: int32
        default: 0
      scanned_files:
        type: integer
        format: int32
        default: 0

  Application.Scan.Stats:
    type: object
    properties:
      issue_types:
        type: object
        additionalProperties:
          type: integer
          format: int32
      issue_severities:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: integer
            format: int32
      issue_severities_efforts:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: integer
            format: int32
      issue_depths:
        type: object
        additionalProperties:
          type: integer
          format: int32
      total_effort:
        type: integer
        format: int64
        example: 15

  Application.Scan.Issue.Stats:
    type: object
    properties:
      issue_types:
        type: object
        additionalProperties:
          type: integer
          format: int32
      issue_severities:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: integer
            format: int32
      issue_severities_efforts:
        type: object
        additionalProperties:
          type: object
          additionalProperties:
            type: integer
            format: int32
      issue_depths:
        type: object
        additionalProperties:
          type: integer
          format: int32
      issues:
        type: integer
        format: int64
        example: 20
      reviewed_issues:
        type: integer
        format: int64
        example: 15
      incomplete_issues:
        type: integer
        format: int64
        example: 15
      total_effort:
        type: integer
        format: int64
        example: 15
      functions:
        type: integer
        format: int64
        example: 100
      methods:
        type: integer
        format: int64
        example: 150
      classes:
        type: integer
        format: int64
        example: 25

  OAuth2.Client:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      random_id:
        type: string
      secret:
        type: string
      redirect_uris:
        type: array
        items:
          type: string
      allowed_grant_types:
        type: array
        items:
          type: string

  System.Email:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      enabled:
        type: boolean
        default: false
        example: false
      transport:
        type: string
        default: "smtp"
      host:
        type: string
        default: ""
        example: "smtp.example.com"
        maxLength: 250
      port:
        type: integer
        format: int32
        default: 587
        example: 587
      username:
        type: string
        default: ""
        example: "mailman"
        maxLength: 250
      encryption:
        type: string
        default: "null"
        example: "tls"
        enum:
          - "null"
          - ssl
          - tls
      auth:
        type: string
        default: "login"
        example: "login"
        enum:
          - "null"
          - plain
          - login
          - cram-md5
      sender:
        type: string
        format: email
        default: "contact@ripstech.com"
        example: "contact@ripstech.com"
        maxLength: 250

  System.Ldap:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      enabled:
        type: boolean
        default: false
        example: false
      search_dn:
        type: string
        default: ""
        example: "cn=reader,dc=example,dc=com"
        maxLength: 250
      search_query:
        type: string
        default: ""
        example: "({emailKey}={email})"
        maxLength: 250
      base_dn:
        type: string
        default: ""
        example: "dc=example,dc=com"
        maxLength: 250
      email_key:
        type: string
        default: ""
        example: "mail"
        maxLength: 250
      identifier_key:
        type: string
        maxLength: 250
      firstname_key:
        type: string
        maxLength: 250
      lastname_key:
        type: string
        maxLength: 250
      user_dn:
        type: string
        default: ""
        example: "mail={email},dc=example,dc=com"
        maxLength: 250
      last_sync_at:
        type: string
        format: date-time
        example: "2019-02-16T11:52:26+0100"
      host:
        type: string
        default: ""
        example: "ldap.example.com"
        maxLength: 250
      port:
        type: integer
        format: int32
        default: 389
        example: 389
      encryption:
        type: string
        default: none
        example: "none"
        enum:
          - ssl
          - none
          - tls
      protocol_version:
        type: integer
        format: int32
        default: 3
        example: 3
      expired_accounts:
        type: string
        default: disable
        example: "remove"
        enum:
          - remove
          - disable
      ca_certificate:
        type: string

  Server:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: "xbar1"
        maxLength: 180
      internal_address:
        type: string
        example: "10.0.0.5"
        maxLength: 180
      external_address:
        type: string
        example: "83.256.12.6"
        maxLength: 180
      type:
        type: string
        example: "aws"
        maxLength: 50
        enum:
          - aws
          - op
      started_at:
        type: string
        format: date-time
        example: "2019-02-16T11:52:26+0100"
      stopped_at:
        type: string
        format: date-time
        example: "2019-02-16T12:52:26+0100"
      memory:
        type: integer
        format: int64
        example: 7563455665
      cores:
        type: integer
        format: int64
        example: 16
      last_seen_at:
        type: string
        format: date-time
        example: "1457-09-05T11:52:26+0100"

  Notification.Type:
    type: object
    properties:
      id:
        type: integer
        format: int32
      description:
        type: string
        maxLength: 150

  Notification.Subscription:
    type: object
    properties:
      id:
        type: integer
        format: int64
      event_type:
        type: integer
        format: int32
        description: |
          | Value  | Description                      |
          | ------ | -----------                      |
          | 1      | New application event            |
          | 2      | New scan event                   |
          | 3      | Scan finished event              |
          | 4      | New issues event                 |
          | 5      | New comment event                |
          | 6      | New user event                   |
          | 7      | New exploitable review event     |
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
      user:
        type: object
        properties:
          id:
            type: integer
            format: int64
      scan:
        type: object
        properties:
          id:
            type: integer
            format: int64
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
      created_at:
        type: string
        format: date-time
        example: "1457-09-05T11:52:26+0100"
      by_mail:
        type: boolean
      by_user_interface:
        type: boolean

  Notification.Message:
    type: object
    properties:
      id:
        type: integer
        format: int64
      event_type:
        type: integer
        format: int32
        description: |
          | Value  | Description                      |
          | ------ | -----------                      |
          | 1      | New application event            |
          | 2      | New scan event                   |
          | 3      | Scan finished event              |
          | 4      | New issues event                 |
          | 5      | New comment event                |
          | 6      | New user event                   |
          | 7      | New exploitable review event     |
          | 100    | Mail notification failed         |
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 100
      user:
        type: object
        properties:
          id:
            type: integer
            format: int64
          email:
            type: string
            format: email
            example: "none@example.com"
            minLength: 3
            maxLength: 180
      scan:
        type: object
        properties:
          id:
            type: integer
            format: int64
          version:
            type: string
            maxLength: 180
      application:
        type: object
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
            maxLength: 180
      issue:
        type: object
        properties:
          id:
            type: integer
            format: int64
      comment:
        type: object
        properties:
          id:
            type: integer
            format: int64
      review:
        type: object
        properties:
          id:
            type: integer
            format: int64
      user_target:
        type: object
        properties:
          id:
            type: integer
            format: int64
      fetched_at:
        type: string
        format: date-time
        example: "1457-09-05T11:52:26+0100"
      read_at:
        type: string
        format: date-time
        example: "1457-09-05T11:52:26+0100"
      created_at:
        type: string
        format: date-time
        example: "1457-09-05T11:52:26+0100"

  Post.Sub.License:
    type: object
    properties:
      key:
        type: string
      quotaDistributed:
        type: boolean
        example: false
        default: false
    required:
      - key

  Post.Sub.Log:
    type: object
    properties:
      text:
        type: string
      context:
        type: string
        default: ""
      level:
        type: integer
        format: int32
    required:
      - text
      - level

  Put.Sub.Setting:
    type: object
    properties:
      value:
        type: string
        maxLength: 1000000
    required:
      - value

  Post.Sub.Organization:
    type: object
    properties:
      name:
        type: string
        example: "Bobs"
        maxLength: 180
      validUntil:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      trialIssueTypes:
        type: array
        items:
          type: integer
          format: int32
          example: 5
      disabled:
        type: boolean
        example: true
        default: false
      concurrentScans:
        type: integer
        format: int32
        example: 5
    required:
      - name

  Patch.Sub.Organization:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      validUntil:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      trialIssueTypes:
        type: array
        items:
          type: integer
          format: int32
          example: 5
      disabled:
        type: boolean
        example: true
        default: false
      concurrentScans:
        type: integer
        format: int32
        example: 5

  Post.Sub.Quota:
    type: object
    properties:
      currentApplication:
        type: integer
        format: int32
        default: 0
        example: 1
      currentScan:
        type: integer
        format: int32
        default: 0
        example: 2
      currentUser:
        type: integer
        format: int32
        default: 0
        example: 3
      maxApplications:
        type: integer
        format: int32
        example: 10
      maxScans:
        type: integer
        format: int32
        example: 20
      maxUsers:
        type: integer
        format: int32
        example: 5
      maxLoc:
        type: integer
        format: int32
        example: 1000000
      validFrom:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      validUntil:
        type: string
        format: date-time
        example: "2017-02-16T11:52:27+0100"
      allowedMisses:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        example: 20
      public:
        type: boolean
        example: false
        default: false
      organization:
        type: integer
        format: int64
        example: 1
      notify:
        type: boolean
        example: true
        default: false
      languages:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      updateOnly:
        type: boolean
        default: false
        example: true
      flexibleApplications:
        type: boolean
        default: false
        example: true
    required:
      - validFrom
      - validUntil
      - organization
      - languages
      - currentApplication
      - currentScan
      - currentUser

  Patch.Sub.Quota:
    type: object
    properties:
      currentApplication:
        type: integer
        format: int32
        default: 0
        example: 1
      currentScan:
        type: integer
        format: int32
        default: 0
        example: 2
      currentUser:
        type: integer
        format: int32
        default: 0
        example: 3
      maxApplications:
        type: integer
        format: int32
        example: 10
      maxScans:
        type: integer
        format: int32
        example: -1
      maxUsers:
        type: integer
        format: int32
        example: 5
      maxLoc:
        type: integer
        format: int32
        example: 1000000
      validFrom:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      validUntil:
        type: string
        format: date-time
        example: "2017-02-16T11:52:27+0100"
      allowedMisses:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        example: 20
      public:
        type: boolean
        example: false
        default: false
      organization:
        type: integer
        format: int64
        example: 1
      notify:
        type: boolean
        default: false
        example: true
      languages:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      updateOnly:
        type: boolean
        default: false
        example: true
      flexibleApplications:
        type: boolean
        default: false
        example: true

  Post.Sub.Quota.Acl:
    type: object
    properties:
      ownerUser:
        type: integer
        format: int64
        example: 1
      ownerTeam:
        type: integer
        format: int64
        example: 1
      view:
        type: boolean
        default: false
        example: false
      delete:
        type: boolean
        default: false
        example: false
      create:
        type: boolean
        default: false
        example: false
      edit:
        type: boolean
        default: false
        example: false
      use:
        type: boolean
        default: false
        example: false
      manage:
        type: boolean
        default: false
        example: false

  Patch.Sub.Quota.Acl:
    type: object
    properties:
      ownerUser:
        type: integer
        format: int64
        example: 1
      ownerTeam:
        type: integer
        format: int64
        example: 1
      view:
        type: boolean
        default: false
        example: 1
      delete:
        type: boolean
        default: false
        example: 1
      create:
        type: boolean
        default: false
        example: 1
      edit:
        type: boolean
        default: false
        example: 1
      use:
        type: boolean
        default: false
        example: 1
      manage:
        type: boolean
        default: false
        example: 1

  Post.Sub.Callback:
    type: object
    properties:
      url:
        type: string
        example: "http://foo/bar"
      reports:
        type: array
        items:
          type: string
          enum:
            - UPDATE_USER
            - DELETE_USER
            - CREATE_SCAN
            - UPDATE_SCAN
            - FINISH_SCAN
            - CREATE_COMMENT
            - DELETE_COMMENT
            - CREATE_REVIEW
      applications:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      scans:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      users:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      internal:
        type: boolean
        default: false
      organization:
        type: integer
        format: int64
        example: 1
      observeOrganization:
        type: boolean
        default: false
    required:
      - url

  Patch.Sub.Callback:
    type: object
    properties:
      url:
        type: string
        example: "http://foo/bar"
      reports:
        type: array
        items:
          type: string
          enum:
            - UPDATE_USER
            - DELETE_USER
            - CREATE_SCAN
            - UPDATE_SCAN
            - FINISH_SCAN
            - CREATE_COMMENT
            - CREATE_REVIEW
            - DELETE_COMMENT
      applications:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      scans:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      users:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      internal:
        type: boolean
        default: false
      organization:
        type: integer
        format: int64
        example: 1
      observeOrganization:
        type: boolean
        default: false

  Post.Sub.Team:
    type: object
    properties:
      name:
        type: string
        example: "Team A"
        maxLength: 180
      users:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      organization:
        type: integer
        format: int64
        example: 1
    required:
      - name

  Patch.Sub.Team:
    type: object
    properties:
      name:
        type: string
        example: "Team A"
        maxLength: 180
      users:
        type: array
        items:
          type: integer
          format: int64
          example: 1
      organization:
        type: integer
        format: int64
        example: 1

  Post.Sub.User:
    type: object
    properties:
      plainPassword:
        type: string
        example: "you wish"
        maxLength: 72
      email:
        type: string
        format: email
        example: "none@example.com"
        minLength: 3
        maxLength: 180
      firstname:
        type: string
        default: ""
        example: "Hans"
        maxLength: 180
      lastname:
        type: string
        default: ""
        example: "Peter"
        maxLength: 180
      roles:
        type: array
        items:
          type: string
          example: "ROLE_CHIEF"
      enabled:
        type: boolean
        example: true
      organization:
        type: integer
        format: int64
        example: 1
      chargedQuota:
        type: integer
        format: int64
        example: 1
      whitelistedIps:
        type: array
        items:
          type: string
          example: "127.0.0.*"
      root:
        type: boolean
        default: false
        example: true
    required:
      - email
      - organization

  Patch.Sub.User:
    type: object
    properties:
      plainPassword:
        type: string
        example: "you wish"
        maxLength: 72
      email:
        type: string
        format: email
        example: "none@example.com"
        minLength: 3
        maxLength: 180
      firstname:
        type: string
        default: ""
        example: "Hans"
        maxLength: 180
      lastname:
        type: string
        default: ""
        example: "Peter"
        maxLength: 180
      roles:
        type: array
        items:
          type: string
          example: "ROLE_CHIEF"
      enabled:
        type: boolean
        example: true
      root:
        type: boolean
        default: false
        example: true
      whitelistedIps:
        type: array
        items:
          type: string
          example: "127.0.0.*"

  Post.Sub.User.Activate:
    type: object
    properties:
      plainPassword:
        type: string
        maxLength: 72
        example: "you wish"
    required:
      - plainPassword

  Post.Sub.User.Reset:
    type: object
    properties:
      plainPassword:
        type: string
        example: "you wish"
        maxLength: 72
    required:
      - plainPassword

  Post.Sub.User.Reset.Ui:
    type: object
    properties:
      email:
        type: string
        example: "none@example.com"
        minLength: 3
        maxLength: 180
    required:
      - email

  Post.Sub.User.Mfa.Challenge:
    type: object
    properties:
      code:
        type: string
        example: "654321"
        minLength: 6
        maxLength: 6
    required:
      - code

  Post.Sub.User.Invite.Ui:
    type: object
    properties:
      firstname:
        type: string
        default: ""
        example: "Hans"
        maxLength: 180
      lastname:
        type: string
        default: ""
        example: "Peter"
        maxLength: 180
      email:
        type: string
        format: email
        example: "none@example.com"
        minLength: 3
        maxLength: 180
      organization:
        type: integer
        format: int64
        example: 1
      roles:
        type: array
        items:
          type: string
          example: "ROLE_CHIEF"
      root:
        type: boolean
        default: false
        example: true
    required:
      - email
      - organization

  Post.Sub.Application:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      chargedQuota:
        type: integer
        format: int64
        example: 1
      autoRenew:
        type: boolean
        example: true
        default: false
    required:
      - name

  Patch.Sub.Application:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      chargedQuota:
        type: integer
        format: int64
        example: 1
      autoRenew:
        type: boolean
        example: true
        default: false

  Post.Sub.Application.Acl:
    type: object
    properties:
      ownerUser:
        type: integer
        format: int64
        example: 1
      ownerTeam:
        type: integer
        format: int64
        example: 1
      view:
        type: boolean
        default: false
        example: false
      delete:
        type: boolean
        default: false
        example: false
      create:
        type: boolean
        default: false
        example: false
      edit:
        type: boolean
        default: false
        example: false
      scan:
        type: boolean
        default: false
        example: false
      manage:
        type: boolean
        default: false
        example: false

  Patch.Sub.Application.Acl:
    type: object
    properties:
      ownerUser:
        type: integer
        format: int64
        example: 1
      ownerTeam:
        type: integer
        format: int64
        example: 1
      view:
        type: boolean
        default: false
        example: 1
      delete:
        type: boolean
        default: false
        example: 1
      create:
        type: boolean
        default: false
        example: 1
      edit:
        type: boolean
        default: false
        example: 1
      scan:
        type: boolean
        default: false
        example: 1
      manage:
        type: boolean
        default: false
        example: 1

  Post.Sub.Application.Artifact:
    type: object
    properties:
      name:
        type: string
        example: "test.zip"
        maxLength: 255
      scan:
        type: integer
        format: int64
        example: 1
    required:
      - name
      - scan

  Post.Sub.Application.Scan:
    type: object
    properties:
      profile:
        type: integer
        format: int64
        example: 1
      parent:
        type: integer
        format: int64
        example: 1
      codeStored:
        type: boolean
        example: true
        default: true
      uploadRemoved:
        type: boolean
        example: false
        default: false
      fullCodeCompared:
        type: boolean
        example: false
        default: false
      historyInherited:
        type: boolean
        example: true
        default: true
      issueTypes:
        type: array
        items:
          type: integer
          format: int32
          example: 10
      version:
        type: string
        example: "1.2.3"
        maxLength: 180
      upload:
        type: integer
        format: int64
        example: 1
      path:
        type: string
        example: "dvwa"
        description: "Only available in the On-Premises version"
      analysisDepth:
        type: integer
        format: int32
        example: 5
        default: 5
        minimum: 1
        maximum: 5
      maxIssuesPerType:
        type: integer
        format: int32
        example: 100
      comment:
        type: string
      source:
        type: string
        maxLength: 100
      rootFile:
        type: string
        maxLength: 180
        example: "composer.json"
    required:
      - version

  Patch.Sub.Application.Scan.Digest:
    type: object
    properties:
      unresolvedFunctions:
        type: integer
        format: int32
        default: 0
      unresolvedClasses:
        type: integer
        format: int32
        default: 0
      unresolvedMethods:
        type: integer
        format: int32
        default: 0

  Patch.Sub.Application.Scan:
    type: object
    properties:
      version:
        type: string
        example: "1.2.3"
        maxLength: 180
      comment:
        type: string

  Post.Sub.Application.Scan.Php:
    type: object
    properties:
      majorVersion:
        type: string
        example: 5
        default: 5
        maxLength: 32
      minorVersion:
        type: string
        example: 4
        default: 6
        maxLength: 32
      releaseVersion:
        type: string
        example: 22
        default: "*"
        maxLength: 32
      magicQuotesGpc:
        type: boolean
        example: false
        default: false
      registerGlobals:
        type: boolean
        example: false
        default: false
      allowUrlFopen:
        type: boolean
        example: true
        default: true
      frameworkHinting:
        type: boolean
        example: true
        default: true
      allowUrlInclude:
        type: boolean
        example: false
        default: false
      filterDefault:
        type: string
        example: "unsafe_raw"
        default: "unsafe_raw"
        enum:
          - unsafe_raw
          - magic_quotes
          - special_chars
      secondOrders:
        type: array
        items:
          type: string
          enum:
            - FILE
            - SQL
            - SESSION
            - TEMPLATE
            - POP
          default:
            - TEMPLATE

  Post.Sub.Application.Scan.Java:
    type: object
    properties:
      majorVersion:
        type: string
        example: 8
        default: 8
        maxLength: 32
      minorVersion:
        type: string
        example: 0
        default: "*"
        maxLength: 32
      releaseVersion:
        type: string
        example: 0
        default: "*"
        maxLength: 32
      implementation:
        type: string
        default: ""
        maxLength: 255
      updateDatabase:
        type: string
        enum:
          - "NO"
          - "ONLINE"
          - "PROVIDED"
        default: "NO"
        maxLength: 50

  Post.Sub.Application.Scan.Library:
    type: object
    properties:
      name:
        type: string
        example: "symfony"
        maxLength: 180
      version:
        type: string
        example: "2.3.5"
        maxLength: 80
      type:
        type: string
        example: "cms"
        maxLength: 50
    required:
      - name

  Patch.Sub.Application.Scan.Library:
    type: object
    properties:
      name:
        type: string
        example: "symfony"
        maxLength: 180
      version:
        type: string
        example: "2.3.5"
        maxLength: 80
      type:
        type: string
        example: "cms"
        maxLength: 50

  Post.Sub.Application.Scan.Classes:
    type: array
    items:
      type: object
      properties:
        startLine:
          type: integer
          format: int32
          example: 1
        endLine:
          type: integer
          format: int32
          example: 5
        startColumn:
          type: integer
          format: int32
          example: 1
        endColumn:
          type: integer
          format: int32
          example: 5
        name:
          type: string
          example: "Cat"
        package:
          type: string
        file:
          type: integer
          format: int64
          example: 1
      required:
        - startLine
        - endLine
        - name
        - file

  Post.Sub.Application.Scan.Functions:
    type: array
    items:
      type: object
      properties:
        startLine:
          type: integer
          format: int32
          example: 1
        endLine:
          type: integer
          format: int32
          example: 5
        startColumn:
          type: integer
          format: int32
          example: 1
        endColumn:
          type: integer
          format: int32
          example: 5
        name:
          type: string
          example: "bark"
        parameters:
          type: array
          items:
            type: object
            properties:
              package:
                type: string
              name:
                type: string
        file:
          type: integer
          format: int64
          example: 1
        class:
          type: integer
          format: int64
          example: 1
      required:
        - startLine
        - endLine
        - name
        - file

  Post.Sub.Application.Scan.Process:
    type: object
    properties:
      pid:
        type: integer
        format: int32
        example: 10
      finishedAt:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      startedAt:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      version:
        type: string
        example: "3.0.0"
        maxLength: 50
      name:
        type: string
        example: "php-engine"
        maxLength: 50
        enum:
          - php-engine
          - java-engine
          - php-preparser
          - php-patchgen
          - java-patchgen
          - java-db-processing
          - java-db-preprocessing
          - java-db-postprocessing
      memory:
        type: integer
        format: int64
      phase:
        type: integer
        format: int32
        minimum: 0
        maximum: 11
        example: 0
      percent:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        example: 100
      finished:
        type: boolean
        example: true
        default: false
      weight:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        example: 50
      parent:
        type: integer
        format: int64
        example: 1

  Patch.Sub.Application.Scan.Process:
    type: object
    properties:
      pid:
        type: integer
        format: int32
        example: 10
      finishedAt:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      startedAt:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      version:
        type: string
        example: "2.0.0"
        maxLength: 50
      name:
        type: string
        example: "php-engine"
        maxLength: 50
        enum:
          - php-engine
          - java-engine
          - php-preparser
          - php-patchgen
          - java-patchgen
          - java-db-processing
          - java-db-preprocessing
          - java-db-postprocessing
      memory:
        type: integer
        format: int64
      phase:
        type: integer
        format: int32
        minimum: 0
        maximum: 11
        example: 0
      percent:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        example: 100
      finished:
        type: boolean
        default: false
        example: true
      weight:
        type: integer
        format: int32
        minimum: 0
        maximum: 100
        example: 50
      parent:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Scan.Issue:
    type: object
    properties:
      type:
        type: integer
        format: int32
        example: 1
      origin:
        type: integer
        format: int32
        example: 1
      depth:
        type: integer
        format: int32
        example: 2
      cve:
        type: string
        example: "CVE-2017-1000253"
        maxLength: 50
      directlyCalled:
        type: boolean
        example: true
      registerGlobals:
        type: boolean
        example: false
      process:
        type: integer
        format: int64
    required:
      - type
      - depth

  Post.Sub.Application.Scan.Issue.Taint:
    type: object
    properties:
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      startColumn:
        type: integer
        format: int32
        example: 7
      endColumn:
        type: integer
        format: int32
        example: 10

  Post.Sub.Application.Scan.Issue.Source:
    type: object
    properties:
      line:
        type: integer
        format: int32
        example: 1
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      startColumn:
        type: integer
        format: int32
        example: 7
      endColumn:
        type: integer
        format: int32
        example: 10
      name:
        type: string
        example: "_GET"
        maxLength: 255
      parameter:
        type: string
        example: "Something"
        maxLength: 255
      file:
        type: integer
        format: int64
        example: 1
      function:
        type: integer
        format: int64
        example: 1
      class:
        type: integer
        format: int64
        example: 1
      type:
        type: integer
        format: int32
        example: 1

  Post.Sub.Application.Scan.Issue.Sink:
    type: object
    properties:
      line:
        type: integer
        format: int32
        example: 1
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      startColumn:
        type: integer
        format: int32
        example: 7
      endColumn:
        type: integer
        format: int32
        example: 10
      name:
        type: string
        maxLength: 255
        example: "exec"
      file:
        type: integer
        format: int64
        example: 1
      function:
        type: integer
        format: int64
        example: 1
      class:
        type: integer
        format: int64
        example: 1
      type:
        type: integer
        format: int32
        example: 1

  Post.Sub.Application.Scan.Issue.Concat:
    type: object
    properties:
      line:
        type: integer
        format: int32
        example: 1
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      startColumn:
        type: integer
        format: int32
        example: 7
      endColumn:
        type: integer
        format: int32
        example: 10
      file:
        type: integer
        format: int64
        example: 1
      function:
        type: integer
        format: int64
        example: 1
      class:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Scan.Issue.Entrypoint:
    type: object
    properties:
      line:
        type: integer
        format: int32
        example: 1
      startLine:
        type: integer
        format: int32
        example: 1
      endLine:
        type: integer
        format: int32
        example: 5
      file:
        type: integer
        format: int64
        example: 1
      function:
        type: integer
        format: int64
        example: 1
      class:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Scan.Issue.Pitfalls:
    type: array
    items:
      type: object
      properties:
        line:
          type: integer
          format: int32
          example: 1
        startLine:
          type: integer
          format: int32
          example: 1
        endLine:
          type: integer
          format: int32
          example: 5
        startColumn:
          type: integer
          format: int32
          example: 7
        endColumn:
          type: integer
          format: int32
          example: 10
        file:
          type: integer
          format: int64
          example: 1
        function:
          type: integer
          format: int64
          example: 1
        class:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int32
          example: 1

  Post.Sub.Application.Scan.Issue.Contexts:
    type: array
    items:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum:
              - TEXT
              - INJECTION
              - INJECTION_SAFE
              - INJECTION_UNKNOWN
          content:
            type: string
            example: "foo"

  Post.Sub.Application.Scan.Issue.Summaries:
    type: array
    items:
      type: object
      properties:
        line:
          type: integer
          format: int32
          example: 5
        content:
          type: string
          example: "None"
        file:
          type: integer
          format: int64
          example: 1
        function:
          type: integer
          format: int64
          example: 1
        class:
          type: integer
          format: int64
          example: 1
      required:
        - content

  Post.Sub.Application.Scan.Issue.Comment:
    type: object
    properties:
      comment:
        type: string
        example: "Ok"
      source:
        type: string
        maxLength: 60
        example: "jira"
    required:
      - comment

  Post.Sub.Application.Scan.Issue.Review:
    type: object
    properties:
      type:
        type: integer
        format: int32
        example: 1
      source:
        type: string
        maxLength: 60
        example: "jira"
    required:
      - type

  Post.Sub.Application.Scan.Issue.Patch:
    type: object
    properties:
      type:
        type: integer
        format: int32
        example: 1
      confidence:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
    required:
      - type

  Post.Sub.Application.Scan.Issue.Patch.Modification:
    type: object
    properties:
      virtualLine:
        type: integer
        format: int32
        example: 5
      originalLine:
        type: integer
        format: int32
        example: 6
      columnStart:
        type: integer
        format: int32
        example: 13
      columnEnd:
        type: integer
        format: int32
        example: 15
      content:
        type: string
        example: "None"
      originalContent:
        type: string
        example: "None"
      file:
        type: integer
        format: int64
        example: 1
      whitespacesOnly:
        type: boolean
        example: false
    required:
      - content
      - file

  Post.Sub.Application.Profile:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      default:
        type: boolean
        example: false
        default: false
      language:
        type: integer
        format: int64
        example: 1
    required:
      - name
      - language

  Patch.Sub.Application.Profile:
    type: object
    properties:
      name:
        type: string
        example: "DVWA"
        maxLength: 180
      default:
        type: boolean
        default: false
        example: false
      language:
        type: integer
        format: int64
        example: 1

  Post.Sub.Application.Profile.Extension:
    type: object
    properties:
      extension:
        type: string
        maxLength: 180
    required:
      - extension

  Patch.Sub.Application.Profile.Extension:
    type: object
    properties:
      extension:
        type: string
        maxLength: 180

  Post.Sub.Application.Profile.Clone:
    type: object
    properties:
      name:
        type: string
        maxLength: 180
        example: "Cloned Profile"
      targetApplication:
        type: integer
        format: int32
        example: 10

  Put.Sub.Application.Profile.Setting:
    type: object
    properties:
      issueTypes:
        type: array
        items:
          type: integer
          format: int32
          example: 10
      codeStored:
        type: boolean
        example: true
        default: true
      uploadRemoved:
        type: boolean
        example: false
        default: true
      fullCodeCompared:
        type: boolean
        example: false
        default: false
      historyInherited:
        type: boolean
        example: true
        default: true
      analysisDepth:
        type: integer
        format: int32
        example: 5
        default: 5
        minimum: 1
        maximum: 5
      maxIssuesPerType:
        type: integer
        format: int32
        example: 100
      rootFile:
        type: string
        maxLength: 180
        example: "composer.json"

  Post.Sub.Application.Profile.IgnoredCode:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      exclude:
        type: string
        enum:
          - CALL
          - RETURN
    required:
      - exclude

  Patch.Sub.Application.Profile.IgnoredCode:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      exclude:
        type: string
        enum:
          - CALL
          - RETURN

  Post.Sub.Application.Profile.IgnoredLocation:
    type: object
    properties:
      path:
        type: string
      match:
        type: string
        enum:
          - PARTIAL
          - START
          - REGEX
      exclude:
        type: string
        enum:
          - SECURITY
          - QUALITY
          - MISCONFIGURATION
          - PATCH
          - ANALYSIS
    required:
      - path
      - match
      - exclude

  Patch.Sub.Application.Profile.IgnoredLocation:
    type: object
    properties:
      path:
        type: string
      match:
        type: string
        enum:
          - PARTIAL
          - START
          - REGEX
      exclude:
        type: string
        enum:
          - SECURITY
          - QUALITY
          - MISCONFIGURATION
          - PATCH
          - ANALYSIS

  Post.Sub.Application.Profile.Sanitizer:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      characters:
        type: string
        maxLength: 180
      issueType:
        type: integer
        format: int32
        example: 10
      mode:
        type: string
        default: "LITERAL"
        example: "LITERAL"
        enum:
          - "LITERAL"

  Patch.Sub.Application.Profile.Sanitizer:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      characters:
        type: string
        maxLength: 180
      issueType:
        type: integer
        format: int32
        example: 10
      mode:
        type: string
        default: "LITERAL"
        example: "LITERAL"
        enum:
          - "LITERAL"

  Post.Sub.Application.Profile.Sink:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      type:
        type: integer
        format: int32
        example: 1
    required:
      - type

  Patch.Sub.Application.Profile.Sink:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      type:
        type: integer
        format: int32
        example: 1

  Post.Sub.Application.Profile.Source:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      property:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      type:
        type: string
        maxLength: 180
    required:
      - type

  Patch.Sub.Application.Profile.Source:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      property:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      type:
        type: string
        maxLength: 180

  Post.Sub.Application.Profile.Controller:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      type:
        type: string
        maxLength: 180
    required:
      - type

  Patch.Sub.Application.Profile.Controller:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      type:
        type: string
        maxLength: 180

  Post.Sub.Application.Profile.Validator:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      characters:
        type: string
        maxLength: 180
      issueType:
        type: integer
        format: int32
        example: 10
      behavior:
        type: string
        default: "RETURN_FALSE"
        example: "EXIT"
        enum:
          - "RETURN_FALSE"
          - "RETURN_TRUE"
          - "EXIT"
      mode:
        type: string
        default: "LITERAL"
        example: "LITERAL"
        enum:
          - "LITERAL"

  Patch.Sub.Application.Profile.Validator:
    type: object
    properties:
      class:
        type: string
        maxLength: 180
      method:
        type: string
        maxLength: 180
      parameter:
        type: string
        maxLength: 180
      characters:
        type: string
        maxLength: 180
      issueType:
        type: integer
        format: int32
        example: 10
      behavior:
        type: string
        default: "RETURN_FALSE"
        example: "EXIT"
        enum:
          - "RETURN_FALSE"
          - "RETURN_TRUE"
          - "EXIT"
      mode:
        type: string
        default: "LITERAL"
        example: "LITERAL"
        enum:
          - "LITERAL"

  Post.Sub.OAuth2.Client:
    type: object
    properties:
      name:
        type: string
      allowed_grant_types:
        type: array
        items:
          type: string
      redirect_uris:
        type: array
        items:
          type: string
    required:
      - name

  Put.Sub.OAuth2.Client:
    type: object
    properties:
      name:
        type: string
      allowed_grant_types:
        type: array
        items:
          type: string
      redirect_uris:
        type: array
        items:
          type: string
    required:
      - name

  Put.Sub.System.Email:
    type: object
    properties:
      enabled:
        type: boolean
        example: true
        default: false
      host:
        type: string
        default: ""
        example: "smtp.example.com"
        maxLength: 250
      port:
        type: integer
        default: 587
        format: int32
        example: 1234
      username:
        type: string
        default: ""
        example: "mailman"
        maxLength: 250
      password:
        type: string
        default: ""
        example: "youwish"
        maxLength: 250
      encryption:
        type: string
        default: "null"
        example: "tls"
        enum:
          - "null"
          - ssl
          - tls
      auth:
        type: string
        default: "login"
        example: "login"
        enum:
          - "null"
          - plain
          - login
          - cram-md5
      sender:
        type: string
        format: email
        default: "contact@ripstech.com"
        example: "mail@example.com"
        maxLength: 250
    required:
      - host
      - username
      - password
      - sender

  Put.Sub.System.Ldap:
    type: object
    properties:
      enabled:
        type: boolean
        example: true
        default: false
      searchDn:
        type: string
        default: ""
        example: "cn=reader,dc=example,dc=com"
        maxLength: 250
      searchPassword:
        type: string
        default: ""
        maxLength: 250
      searchQuery:
        type: string
        default: ""
        example: "({emailKey}={email})"
        maxLength: 250
      baseDn:
        type: string
        default: ""
        example: "dc=example,dc=com"
        maxLength: 250
      emailKey:
        type: string
        default: ""
        example: "mail"
        maxLength: 250
      userDn:
        type: string
        default: ""
        example: "mail={email},dc=example,dc=com"
        maxLength: 250
      host:
        type: string
        default: ""
        example: "ldap.example.com"
        maxLength: 250
      port:
        type: integer
        default: 389
        format: int32
        example: 6655
      encryption:
        type: string
        default: none
        example: tls
        enum:
          - none
          - ssl
          - tls
      protocolVersion:
        type: integer
        default: 3
        format: int32
        example: 3
      expiredAccounts:
        type: string
        example: remove
        default: disable
        enum:
          - remove
          - disable
      caCertificate:
        type: string
      identifierKey:
        type: string
        example: "cn"
        maxLength: 250
      firstnameKey:
        type: string
        example: "gn"
        maxLength: 250
      lastnameKey:
        type: string
        example: "sn"
        maxLength: 250
    required:
      - searchDn
      - searchQuery
      - baseDn
      - emailKey
      - userDn
      - host

  Post.Sub.Server:
    type: object
    properties:
      name:
        type: string
        maxLength: 180
      internalAddress:
        type: string
        maxLength: 180
      externalAddress:
        type: string
        maxLength: 180
      type:
        type: string
        maxLength: 50
        enum:
          - aws
          - op
      startedAt:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      stoppedAt:
        type: string
        format: date-time
        example: "2017-02-16T12:52:26+0100"
      memory:
        type: integer
        format: int64
        example: 756797689576
      cores:
        type: integer
        format: int64
        example: 8
    required:
      - name
      - type
      - memory
      - cores

  Patch.Sub.Server:
    type: object
    properties:
      name:
        type: string
        maxLength: 180
      internalAddress:
        type: string
        maxLength: 180
      externalAddress:
        type: string
        maxLength: 180
      type:
        type: string
        maxLength: 50
        enum:
          - aws
          - op
      startedAt:
        type: string
        format: date-time
        example: "2017-02-16T11:52:26+0100"
      stoppedAt:
        type: string
        format: date-time
        example: "2017-02-16T12:52:26+0100"
      memory:
        type: integer
        format: int64
        example: 756797689576
      cores:
        type: integer
        format: int64
        example: 8

  Post.Sub.Notification.Subscription:
    type: object
    properties:
      eventType:
        type: integer
        format: int32
        description: |
          | Value  | Description                      |
          | ------ | -----------                      |
          | 1      | New application event            |
          | 2      | New scan event                   |
          | 3      | Scan finished event              |
          | 4      | New issues event                 |
          | 5      | New comment event                |
          | 6      | New user event                   |
          | 7      | New exploitable review event     |
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
      user:
        type: integer
        format: int64
      scan:
        type: integer
        format: int64
      application:
        type: integer
        format: int64
      byMail:
        type: boolean
      byUserInterface:
        type: boolean
    required:
      - eventType

  Patch.Sub.Notification.Subscription:
    type: object
    properties:
      eventType:
        type: integer
        format: int32
        description: |
          | Value  | Description                      |
          | ------ | -----------                      |
          | 1      | New application event            |
          | 2      | New scan event                   |
          | 3      | Scan finished event              |
          | 4      | New issues event                 |
          | 5      | New comment event                |
          | 6      | New user event                   |
          | 7      | New exploitable review event     |
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
      user:
        type: integer
        format: int64
      scan:
        type: integer
        format: int64
      application:
        type: integer
        format: int64
      byMail:
        type: boolean
      byUserInterface:
        type: boolean

# SECURITY
# ---------------------------------------------------------------------------
securityDefinitions:
  email:
    type: apiKey
    in: header
    name: X-API-Email
  password:
    type: apiKey
    in: header
    name: X-API-Password
  oauth2:
    type: oauth2
    flow: password
    tokenUrl: https://api-3.ripstech.com/oauth/v2/auth/tokens
    scopes: {}
